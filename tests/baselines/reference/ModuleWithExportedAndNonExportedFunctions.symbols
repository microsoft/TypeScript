//// [tests/cases/conformance/internalModules/exportDeclarations/ModuleWithExportedAndNonExportedFunctions.ts] ////

=== ModuleWithExportedAndNonExportedFunctions.ts ===
namespace A {
>A : Symbol(A, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 0))

    export function fn(s: string) {
>fn : Symbol(fn, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 13))
>s : Symbol(s, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 2, 23))

        return true;
    }

    export function fng<T, U>(s: T): U {
>fng : Symbol(fng, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 4, 5))
>T : Symbol(T, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 6, 24))
>U : Symbol(U, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 6, 26))
>s : Symbol(s, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 6, 30))
>T : Symbol(T, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 6, 24))
>U : Symbol(U, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 6, 26))

        return null;
    }

    function fn2(s: string) {
>fn2 : Symbol(fn2, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 8, 5))
>s : Symbol(s, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 10, 17))

        return false;
    }

    function fng2<T, U>(s: T): U {
>fng2 : Symbol(fng2, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 12, 5))
>T : Symbol(T, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 14, 18))
>U : Symbol(U, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 14, 20))
>s : Symbol(s, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 14, 24))
>T : Symbol(T, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 14, 18))
>U : Symbol(U, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 14, 20))

        return null;
    }
}

// these should not be errors since the functions are exported
var fn: (s: string) => boolean;
>fn : Symbol(fn, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 20, 3), Decl(ModuleWithExportedAndNonExportedFunctions.ts, 21, 3))
>s : Symbol(s, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 20, 9))

var fn = A.fn;
>fn : Symbol(fn, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 20, 3), Decl(ModuleWithExportedAndNonExportedFunctions.ts, 21, 3))
>A.fn : Symbol(A.fn, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 13))
>A : Symbol(A, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 0))
>fn : Symbol(A.fn, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 13))

var fng: <T, U>(s: T) => U;
>fng : Symbol(fng, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 3), Decl(ModuleWithExportedAndNonExportedFunctions.ts, 24, 3))
>T : Symbol(T, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 10))
>U : Symbol(U, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 12))
>s : Symbol(s, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 16))
>T : Symbol(T, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 10))
>U : Symbol(U, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 12))

var fng = A.fng; // bug 838015
>fng : Symbol(fng, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 23, 3), Decl(ModuleWithExportedAndNonExportedFunctions.ts, 24, 3))
>A.fng : Symbol(A.fng, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 4, 5))
>A : Symbol(A, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 0))
>fng : Symbol(A.fng, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 4, 5))

// these should be errors since the functions are not exported
var fn2 = A.fn2;
>fn2 : Symbol(fn2, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 27, 3))
>A : Symbol(A, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 0))

var fng2 = A.fng2;
>fng2 : Symbol(fng2, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 28, 3))
>A : Symbol(A, Decl(ModuleWithExportedAndNonExportedFunctions.ts, 0, 0))

