//// [tests/cases/conformance/internalModules/exportDeclarations/NonInitializedExportInInternalModule.ts] ////

=== NonInitializedExportInInternalModule.ts ===
namespace Inner {
>Inner : Symbol(Inner, Decl(NonInitializedExportInInternalModule.ts, 0, 0))

    var;
    let;
    const;
    
    export var a;
>a : Symbol(a, Decl(NonInitializedExportInInternalModule.ts, 5, 14))

    export let b;
>b : Symbol(b, Decl(NonInitializedExportInInternalModule.ts, 6, 14))

    export var c: string;
>c : Symbol(c, Decl(NonInitializedExportInInternalModule.ts, 7, 14))

    export let d: number;
>d : Symbol(d, Decl(NonInitializedExportInInternalModule.ts, 8, 14))

    class A {}
>A : Symbol(A, Decl(NonInitializedExportInInternalModule.ts, 8, 25))

    export var e: A;
>e : Symbol(e, Decl(NonInitializedExportInInternalModule.ts, 10, 14))
>A : Symbol(A, Decl(NonInitializedExportInInternalModule.ts, 8, 25))

    export let f: A;
>f : Symbol(f, Decl(NonInitializedExportInInternalModule.ts, 11, 14))
>A : Symbol(A, Decl(NonInitializedExportInInternalModule.ts, 8, 25))
    
    namespace B {
>B : Symbol(B, Decl(NonInitializedExportInInternalModule.ts, 11, 20))

        export let a = 1, b, c = 2;
>a : Symbol(a, Decl(NonInitializedExportInInternalModule.ts, 14, 18))
>b : Symbol(b, Decl(NonInitializedExportInInternalModule.ts, 14, 25))
>c : Symbol(c, Decl(NonInitializedExportInInternalModule.ts, 14, 28))

        export let x, y, z;
>x : Symbol(x, Decl(NonInitializedExportInInternalModule.ts, 15, 18))
>y : Symbol(y, Decl(NonInitializedExportInInternalModule.ts, 15, 21))
>z : Symbol(z, Decl(NonInitializedExportInInternalModule.ts, 15, 24))
    }
    
    namespace C {
>C : Symbol(C, Decl(NonInitializedExportInInternalModule.ts, 16, 5))

        export var a = 1, b, c = 2;
>a : Symbol(a, Decl(NonInitializedExportInInternalModule.ts, 19, 18))
>b : Symbol(b, Decl(NonInitializedExportInInternalModule.ts, 19, 25))
>c : Symbol(c, Decl(NonInitializedExportInInternalModule.ts, 19, 28))

        export var x, y, z;
>x : Symbol(x, Decl(NonInitializedExportInInternalModule.ts, 20, 18))
>y : Symbol(y, Decl(NonInitializedExportInInternalModule.ts, 20, 21))
>z : Symbol(z, Decl(NonInitializedExportInInternalModule.ts, 20, 24))
    }
    
    // Shouldn't be filtered
    export var a1 = 1;
>a1 : Symbol(a1, Decl(NonInitializedExportInInternalModule.ts, 24, 14))

    export let b1 = 1;
>b1 : Symbol(b1, Decl(NonInitializedExportInInternalModule.ts, 25, 14))

    export var c1: string = 'a';
>c1 : Symbol(c1, Decl(NonInitializedExportInInternalModule.ts, 26, 14))

    export let d1: number = 1;
>d1 : Symbol(d1, Decl(NonInitializedExportInInternalModule.ts, 27, 14))

    class D {}
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))

    export var e1 = new D;
>e1 : Symbol(e1, Decl(NonInitializedExportInInternalModule.ts, 29, 14))
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))

    export let f1 = new D;
>f1 : Symbol(f1, Decl(NonInitializedExportInInternalModule.ts, 30, 14))
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))

    export var g1: D = new D;
>g1 : Symbol(g1, Decl(NonInitializedExportInInternalModule.ts, 31, 14))
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))

    export let h1: D = new D;
>h1 : Symbol(h1, Decl(NonInitializedExportInInternalModule.ts, 32, 14))
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))
>D : Symbol(D, Decl(NonInitializedExportInInternalModule.ts, 27, 30))
}
