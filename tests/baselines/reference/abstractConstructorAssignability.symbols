//// [tests/cases/compiler/abstractConstructorAssignability.ts] ////

=== abstractConstructorAssignability.ts ===
type ConcreteConstructor = new () => void;
>ConcreteConstructor : Symbol(ConcreteConstructor, Decl(abstractConstructorAssignability.ts, 0, 0))

type AbstractConstructor = abstract new () => void;
>AbstractConstructor : Symbol(AbstractConstructor, Decl(abstractConstructorAssignability.ts, 0, 42))

declare let concreteConstructor: ConcreteConstructor;
>concreteConstructor : Symbol(concreteConstructor, Decl(abstractConstructorAssignability.ts, 3, 11))
>ConcreteConstructor : Symbol(ConcreteConstructor, Decl(abstractConstructorAssignability.ts, 0, 0))

declare let abstractConstructor: AbstractConstructor;
>abstractConstructor : Symbol(abstractConstructor, Decl(abstractConstructorAssignability.ts, 4, 11))
>AbstractConstructor : Symbol(AbstractConstructor, Decl(abstractConstructorAssignability.ts, 0, 42))

concreteConstructor = abstractConstructor; // should error
>concreteConstructor : Symbol(concreteConstructor, Decl(abstractConstructorAssignability.ts, 3, 11))
>abstractConstructor : Symbol(abstractConstructor, Decl(abstractConstructorAssignability.ts, 4, 11))

abstractConstructor = concreteConstructor; // should work
>abstractConstructor : Symbol(abstractConstructor, Decl(abstractConstructorAssignability.ts, 4, 11))
>concreteConstructor : Symbol(concreteConstructor, Decl(abstractConstructorAssignability.ts, 3, 11))

class ConcreteClass {}
>ConcreteClass : Symbol(ConcreteClass, Decl(abstractConstructorAssignability.ts, 7, 42))

abstract class AbstractClass {}
>AbstractClass : Symbol(AbstractClass, Decl(abstractConstructorAssignability.ts, 9, 22))

declare let concreteClass: typeof ConcreteClass
>concreteClass : Symbol(concreteClass, Decl(abstractConstructorAssignability.ts, 12, 11))
>ConcreteClass : Symbol(ConcreteClass, Decl(abstractConstructorAssignability.ts, 7, 42))

declare let abstractClass: typeof AbstractClass
>abstractClass : Symbol(abstractClass, Decl(abstractConstructorAssignability.ts, 13, 11))
>AbstractClass : Symbol(AbstractClass, Decl(abstractConstructorAssignability.ts, 9, 22))

concreteClass = abstractClass; // should error
>concreteClass : Symbol(concreteClass, Decl(abstractConstructorAssignability.ts, 12, 11))
>abstractClass : Symbol(abstractClass, Decl(abstractConstructorAssignability.ts, 13, 11))

abstractClass = concreteClass; // should work
>abstractClass : Symbol(abstractClass, Decl(abstractConstructorAssignability.ts, 13, 11))
>concreteClass : Symbol(concreteClass, Decl(abstractConstructorAssignability.ts, 12, 11))

