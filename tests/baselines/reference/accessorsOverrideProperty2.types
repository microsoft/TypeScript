//// [tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty2.ts] ////

=== accessorsOverrideProperty2.ts ===
class Base {
>Base : Base
>     : ^^^^

  x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
}

class Derived extends Base {
>Derived : Derived
>        : ^^^^^^^
>Base : Base
>     : ^^^^

  get x() { return 2; } // should be an error
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

  set x(value) { console.log(`x was set to ${value}`); }
>x : number
>  : ^^^^^^
>value : number
>      : ^^^^^^
>console.log(`x was set to ${value}`) : void
>                                     : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>`x was set to ${value}` : string
>                        : ^^^^^^
>value : number
>      : ^^^^^^
}

const obj = new Derived(); // nothing printed
>obj : Derived
>    : ^^^^^^^
>new Derived() : Derived
>              : ^^^^^^^
>Derived : typeof Derived
>        : ^^^^^^^^^^^^^^

console.log(obj.x); // number
>console.log(obj.x) : void
>                   : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>obj.x : number
>      : ^^^^^^
>obj : Derived
>    : ^^^^^^^
>x : number
>  : ^^^^^^

