//// [tests/cases/compiler/aliasOnMergedModuleInterface.ts] ////

=== aliasOnMergedModuleInterface_1.ts ===
///<reference path='aliasOnMergedModuleInterface_0.ts' />
import foo = require("foo")
>foo : Symbol(foo, Decl(aliasOnMergedModuleInterface_1.ts, 0, 0))

var z: foo;
>z : Symbol(z, Decl(aliasOnMergedModuleInterface_1.ts, 2, 3))
>foo : Symbol(foo, Decl(aliasOnMergedModuleInterface_1.ts, 0, 0))

z.bar("hello"); // This should be ok
>z.bar : Symbol(foo.bar, Decl(aliasOnMergedModuleInterface_0.ts, 6, 17))
>z : Symbol(z, Decl(aliasOnMergedModuleInterface_1.ts, 2, 3))
>bar : Symbol(foo.bar, Decl(aliasOnMergedModuleInterface_0.ts, 6, 17))

var x: foo.A = foo.bar("hello"); // foo.A should be ok but foo.bar should be error
>x : Symbol(x, Decl(aliasOnMergedModuleInterface_1.ts, 4, 3))
>foo : Symbol(foo, Decl(aliasOnMergedModuleInterface_1.ts, 0, 0))
>A : Symbol(foo.A, Decl(aliasOnMergedModuleInterface_0.ts, 2, 17))

=== aliasOnMergedModuleInterface_0.ts ===
declare module "foo"
>"foo" : Symbol("foo", Decl(aliasOnMergedModuleInterface_0.ts, 0, 0))
{
    namespace B {
>B : Symbol(B, Decl(aliasOnMergedModuleInterface_0.ts, 1, 1), Decl(aliasOnMergedModuleInterface_0.ts, 5, 5))

        export interface A {
>A : Symbol(A, Decl(aliasOnMergedModuleInterface_0.ts, 2, 17))
        }
    }
    interface B {
>B : Symbol(B, Decl(aliasOnMergedModuleInterface_0.ts, 1, 1), Decl(aliasOnMergedModuleInterface_0.ts, 5, 5))

        bar(name: string): B.A;
>bar : Symbol(B.bar, Decl(aliasOnMergedModuleInterface_0.ts, 6, 17))
>name : Symbol(name, Decl(aliasOnMergedModuleInterface_0.ts, 7, 12))
>B : Symbol(B, Decl(aliasOnMergedModuleInterface_0.ts, 1, 1), Decl(aliasOnMergedModuleInterface_0.ts, 5, 5))
>A : Symbol(B.A, Decl(aliasOnMergedModuleInterface_0.ts, 2, 17))
    }
    export = B;
>B : Symbol(B, Decl(aliasOnMergedModuleInterface_0.ts, 1, 1), Decl(aliasOnMergedModuleInterface_0.ts, 5, 5))
}

