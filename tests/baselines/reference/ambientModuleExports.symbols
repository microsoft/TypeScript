//// [tests/cases/compiler/ambientModuleExports.ts] ////

=== ambientModuleExports.ts ===
declare namespace Foo {
>Foo : Symbol(Foo, Decl(ambientModuleExports.ts, 0, 0))

	function a():void;
>a : Symbol(a, Decl(ambientModuleExports.ts, 0, 23))

	var b:number;
>b : Symbol(b, Decl(ambientModuleExports.ts, 2, 4))

	class C {}
>C : Symbol(C, Decl(ambientModuleExports.ts, 2, 14))
}

Foo.a();
>Foo.a : Symbol(Foo.a, Decl(ambientModuleExports.ts, 0, 23))
>Foo : Symbol(Foo, Decl(ambientModuleExports.ts, 0, 0))
>a : Symbol(Foo.a, Decl(ambientModuleExports.ts, 0, 23))

Foo.b;
>Foo.b : Symbol(Foo.b, Decl(ambientModuleExports.ts, 2, 4))
>Foo : Symbol(Foo, Decl(ambientModuleExports.ts, 0, 0))
>b : Symbol(Foo.b, Decl(ambientModuleExports.ts, 2, 4))

var c = new Foo.C();
>c : Symbol(c, Decl(ambientModuleExports.ts, 8, 3))
>Foo.C : Symbol(Foo.C, Decl(ambientModuleExports.ts, 2, 14))
>Foo : Symbol(Foo, Decl(ambientModuleExports.ts, 0, 0))
>C : Symbol(Foo.C, Decl(ambientModuleExports.ts, 2, 14))

declare namespace Foo2 {
>Foo2 : Symbol(Foo2, Decl(ambientModuleExports.ts, 8, 20))

    export function a(): void;
>a : Symbol(a, Decl(ambientModuleExports.ts, 10, 24))

    export var b: number;
>b : Symbol(b, Decl(ambientModuleExports.ts, 12, 14))

    export class C { }
>C : Symbol(C, Decl(ambientModuleExports.ts, 12, 25))
}

Foo2.a();
>Foo2.a : Symbol(Foo2.a, Decl(ambientModuleExports.ts, 10, 24))
>Foo2 : Symbol(Foo2, Decl(ambientModuleExports.ts, 8, 20))
>a : Symbol(Foo2.a, Decl(ambientModuleExports.ts, 10, 24))

Foo2.b;
>Foo2.b : Symbol(Foo2.b, Decl(ambientModuleExports.ts, 12, 14))
>Foo2 : Symbol(Foo2, Decl(ambientModuleExports.ts, 8, 20))
>b : Symbol(Foo2.b, Decl(ambientModuleExports.ts, 12, 14))

var c2 = new Foo2.C();
>c2 : Symbol(c2, Decl(ambientModuleExports.ts, 18, 3))
>Foo2.C : Symbol(Foo2.C, Decl(ambientModuleExports.ts, 12, 25))
>Foo2 : Symbol(Foo2, Decl(ambientModuleExports.ts, 8, 20))
>C : Symbol(Foo2.C, Decl(ambientModuleExports.ts, 12, 25))

