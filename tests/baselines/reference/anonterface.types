//// [tests/cases/compiler/anonterface.ts] ////

=== anonterface.ts ===
module M {
>M : typeof M
>  : ^^^^^^^^

    export class C {
>C : C
>  : ^

        m(fn:{ (n:number):string; },n2:number):string {
>m : (fn: { (n: number): string; }, n2: number) => string
>  : ^  ^^                        ^^  ^^      ^^^^^      
>fn : (n: number) => string
>   : ^ ^^      ^^^^^      
>n : number
>  : ^^^^^^
>n2 : number
>   : ^^^^^^

            return fn(n2);
>fn(n2) : string
>       : ^^^^^^
>fn : (n: number) => string
>   : ^ ^^      ^^^^^      
>n2 : number
>   : ^^^^^^
        }
    }
}

var c=new M.C();
>c : M.C
>  : ^^^
>new M.C() : M.C
>          : ^^^
>M.C : typeof M.C
>    : ^^^^^^^^^^
>M : typeof M
>  : ^^^^^^^^
>C : typeof M.C
>  : ^^^^^^^^^^

c.m(function(n) { return "hello: "+n; },18);
>c.m(function(n) { return "hello: "+n; },18) : string
>                                            : ^^^^^^
>c.m : (fn: { (n: number): string; }, n2: number) => string
>    : ^  ^^                        ^^  ^^      ^^^^^      
>c : M.C
>  : ^^^
>m : (fn: { (n: number): string; }, n2: number) => string
>  : ^  ^^                        ^^  ^^      ^^^^^      
>function(n) { return "hello: "+n; } : (n: number) => string
>                                    : ^ ^^^^^^^^^^^^^^^^^^^
>n : number
>  : ^^^^^^
>"hello: "+n : string
>            : ^^^^^^
>"hello: " : "hello: "
>          : ^^^^^^^^^
>n : number
>  : ^^^^^^
>18 : 18
>   : ^^




