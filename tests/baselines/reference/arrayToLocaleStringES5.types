//// [tests/cases/compiler/arrayToLocaleStringES5.ts] ////

=== arrayToLocaleStringES5.ts ===
let str: string;
>str : string
>    : ^^^^^^

const arr = [1, 2, 3];
>arr : number[]
>    : ^^^^^^^^
>[1, 2, 3] : number[]
>          : ^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^
>3 : 3
>  : ^

str = arr.toLocaleString(); // OK
>str = arr.toLocaleString() : string
>                           : ^^^^^^
>str : string
>    : ^^^^^^
>arr.toLocaleString() : string
>                     : ^^^^^^
>arr.toLocaleString : () => string
>                   : ^^^^^^      
>arr : number[]
>    : ^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = arr.toLocaleString('en-US'); // should be error
>str = arr.toLocaleString('en-US') : string
>                                  : ^^^^^^
>str : string
>    : ^^^^^^
>arr.toLocaleString('en-US') : string
>                            : ^^^^^^
>arr.toLocaleString : () => string
>                   : ^^^^^^      
>arr : number[]
>    : ^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = arr.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = arr.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                          : ^^^^^^
>str : string
>    : ^^^^^^
>arr.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                    : ^^^^^^
>arr.toLocaleString : () => string
>                   : ^^^^^^      
>arr : number[]
>    : ^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const dates: readonly Date[] = [new Date(), new Date()];
>dates : readonly Date[]
>      : ^^^^^^^^^^^^^^^
>[new Date(), new Date()] : Date[]
>                         : ^^^^^^
>new Date() : Date
>           : ^^^^
>Date : DateConstructor
>     : ^^^^^^^^^^^^^^^
>new Date() : Date
>           : ^^^^
>Date : DateConstructor
>     : ^^^^^^^^^^^^^^^

str = dates.toLocaleString(); // OK
>str = dates.toLocaleString() : string
>                             : ^^^^^^
>str : string
>    : ^^^^^^
>dates.toLocaleString() : string
>                       : ^^^^^^
>dates.toLocaleString : () => string
>                     : ^^^^^^      
>dates : readonly Date[]
>      : ^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = dates.toLocaleString('fr'); // should be error
>str = dates.toLocaleString('fr') : string
>                                 : ^^^^^^
>str : string
>    : ^^^^^^
>dates.toLocaleString('fr') : string
>                           : ^^^^^^
>dates.toLocaleString : () => string
>                     : ^^^^^^      
>dates : readonly Date[]
>      : ^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'fr' : "fr"
>     : ^^^^

str = dates.toLocaleString('fr', { timeZone: 'UTC' }); // should be error
>str = dates.toLocaleString('fr', { timeZone: 'UTC' }) : string
>                                                      : ^^^^^^
>str : string
>    : ^^^^^^
>dates.toLocaleString('fr', { timeZone: 'UTC' }) : string
>                                                : ^^^^^^
>dates.toLocaleString : () => string
>                     : ^^^^^^      
>dates : readonly Date[]
>      : ^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'fr' : "fr"
>     : ^^^^
>{ timeZone: 'UTC' } : { timeZone: string; }
>                    : ^^^^^^^^^^^^^^^^^^^^^
>timeZone : string
>         : ^^^^^^
>'UTC' : "UTC"
>      : ^^^^^

const int8Array = new Int8Array(3);
>int8Array : Int8Array<ArrayBuffer>
>          : ^^^^^^^^^^^^^^^^^^^^^^
>new Int8Array(3) : Int8Array<ArrayBuffer>
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>Int8Array : Int8ArrayConstructor
>          : ^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = int8Array.toLocaleString(); // OK
>str = int8Array.toLocaleString() : string
>                                 : ^^^^^^
>str : string
>    : ^^^^^^
>int8Array.toLocaleString() : string
>                           : ^^^^^^
>int8Array.toLocaleString : () => string
>                         : ^^^^^^      
>int8Array : Int8Array<ArrayBuffer>
>          : ^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = int8Array.toLocaleString('en-US'); // should be error
>str = int8Array.toLocaleString('en-US') : string
>                                        : ^^^^^^
>str : string
>    : ^^^^^^
>int8Array.toLocaleString('en-US') : string
>                                  : ^^^^^^
>int8Array.toLocaleString : () => string
>                         : ^^^^^^      
>int8Array : Int8Array<ArrayBuffer>
>          : ^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = int8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = int8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                : ^^^^^^
>str : string
>    : ^^^^^^
>int8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                          : ^^^^^^
>int8Array.toLocaleString : () => string
>                         : ^^^^^^      
>int8Array : Int8Array<ArrayBuffer>
>          : ^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const uint8Array = new Uint8Array(3);
>uint8Array : Uint8Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>new Uint8Array(3) : Uint8Array<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^
>Uint8Array : Uint8ArrayConstructor
>           : ^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = uint8Array.toLocaleString(); // OK
>str = uint8Array.toLocaleString() : string
>                                  : ^^^^^^
>str : string
>    : ^^^^^^
>uint8Array.toLocaleString() : string
>                            : ^^^^^^
>uint8Array.toLocaleString : () => string
>                          : ^^^^^^      
>uint8Array : Uint8Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = uint8Array.toLocaleString('en-US'); // should be error
>str = uint8Array.toLocaleString('en-US') : string
>                                         : ^^^^^^
>str : string
>    : ^^^^^^
>uint8Array.toLocaleString('en-US') : string
>                                   : ^^^^^^
>uint8Array.toLocaleString : () => string
>                          : ^^^^^^      
>uint8Array : Uint8Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = uint8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = uint8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                 : ^^^^^^
>str : string
>    : ^^^^^^
>uint8Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                           : ^^^^^^
>uint8Array.toLocaleString : () => string
>                          : ^^^^^^      
>uint8Array : Uint8Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const uint8ClampedArray = new Uint8ClampedArray(3);
>uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new Uint8ClampedArray(3) : Uint8ClampedArray<ArrayBuffer>
>                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>Uint8ClampedArray : Uint8ClampedArrayConstructor
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = uint8ClampedArray.toLocaleString(); // OK
>str = uint8ClampedArray.toLocaleString() : string
>                                         : ^^^^^^
>str : string
>    : ^^^^^^
>uint8ClampedArray.toLocaleString() : string
>                                   : ^^^^^^
>uint8ClampedArray.toLocaleString : () => string
>                                 : ^^^^^^      
>uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = uint8ClampedArray.toLocaleString('en-US'); // should be error
>str = uint8ClampedArray.toLocaleString('en-US') : string
>                                                : ^^^^^^
>str : string
>    : ^^^^^^
>uint8ClampedArray.toLocaleString('en-US') : string
>                                          : ^^^^^^
>uint8ClampedArray.toLocaleString : () => string
>                                 : ^^^^^^      
>uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = uint8ClampedArray.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = uint8ClampedArray.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                        : ^^^^^^
>str : string
>    : ^^^^^^
>uint8ClampedArray.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                  : ^^^^^^
>uint8ClampedArray.toLocaleString : () => string
>                                 : ^^^^^^      
>uint8ClampedArray : Uint8ClampedArray<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const int16Array = new Int16Array(3);
>int16Array : Int16Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>new Int16Array(3) : Int16Array<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^
>Int16Array : Int16ArrayConstructor
>           : ^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = int16Array.toLocaleString(); // OK
>str = int16Array.toLocaleString() : string
>                                  : ^^^^^^
>str : string
>    : ^^^^^^
>int16Array.toLocaleString() : string
>                            : ^^^^^^
>int16Array.toLocaleString : () => string
>                          : ^^^^^^      
>int16Array : Int16Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = int16Array.toLocaleString('en-US'); // should be error
>str = int16Array.toLocaleString('en-US') : string
>                                         : ^^^^^^
>str : string
>    : ^^^^^^
>int16Array.toLocaleString('en-US') : string
>                                   : ^^^^^^
>int16Array.toLocaleString : () => string
>                          : ^^^^^^      
>int16Array : Int16Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = int16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = int16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                 : ^^^^^^
>str : string
>    : ^^^^^^
>int16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                           : ^^^^^^
>int16Array.toLocaleString : () => string
>                          : ^^^^^^      
>int16Array : Int16Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const uint16Array = new Uint16Array(3);
>uint16Array : Uint16Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>new Uint16Array(3) : Uint16Array<ArrayBuffer>
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^
>Uint16Array : Uint16ArrayConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = uint16Array.toLocaleString(); // OK
>str = uint16Array.toLocaleString() : string
>                                   : ^^^^^^
>str : string
>    : ^^^^^^
>uint16Array.toLocaleString() : string
>                             : ^^^^^^
>uint16Array.toLocaleString : () => string
>                           : ^^^^^^      
>uint16Array : Uint16Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = uint16Array.toLocaleString('en-US'); // should be error
>str = uint16Array.toLocaleString('en-US') : string
>                                          : ^^^^^^
>str : string
>    : ^^^^^^
>uint16Array.toLocaleString('en-US') : string
>                                    : ^^^^^^
>uint16Array.toLocaleString : () => string
>                           : ^^^^^^      
>uint16Array : Uint16Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = uint16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = uint16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                  : ^^^^^^
>str : string
>    : ^^^^^^
>uint16Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                            : ^^^^^^
>uint16Array.toLocaleString : () => string
>                           : ^^^^^^      
>uint16Array : Uint16Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const int32Array = new Int32Array(3);
>int32Array : Int32Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>new Int32Array(3) : Int32Array<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^
>Int32Array : Int32ArrayConstructor
>           : ^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = int32Array.toLocaleString(); // OK
>str = int32Array.toLocaleString() : string
>                                  : ^^^^^^
>str : string
>    : ^^^^^^
>int32Array.toLocaleString() : string
>                            : ^^^^^^
>int32Array.toLocaleString : () => string
>                          : ^^^^^^      
>int32Array : Int32Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = int32Array.toLocaleString('en-US'); // should be error
>str = int32Array.toLocaleString('en-US') : string
>                                         : ^^^^^^
>str : string
>    : ^^^^^^
>int32Array.toLocaleString('en-US') : string
>                                   : ^^^^^^
>int32Array.toLocaleString : () => string
>                          : ^^^^^^      
>int32Array : Int32Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = int32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = int32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                 : ^^^^^^
>str : string
>    : ^^^^^^
>int32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                           : ^^^^^^
>int32Array.toLocaleString : () => string
>                          : ^^^^^^      
>int32Array : Int32Array<ArrayBuffer>
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const uint32Array = new Uint32Array(3);
>uint32Array : Uint32Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>new Uint32Array(3) : Uint32Array<ArrayBuffer>
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^
>Uint32Array : Uint32ArrayConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = uint32Array.toLocaleString(); // OK
>str = uint32Array.toLocaleString() : string
>                                   : ^^^^^^
>str : string
>    : ^^^^^^
>uint32Array.toLocaleString() : string
>                             : ^^^^^^
>uint32Array.toLocaleString : () => string
>                           : ^^^^^^      
>uint32Array : Uint32Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = uint32Array.toLocaleString('en-US'); // should be error
>str = uint32Array.toLocaleString('en-US') : string
>                                          : ^^^^^^
>str : string
>    : ^^^^^^
>uint32Array.toLocaleString('en-US') : string
>                                    : ^^^^^^
>uint32Array.toLocaleString : () => string
>                           : ^^^^^^      
>uint32Array : Uint32Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = uint32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = uint32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                  : ^^^^^^
>str : string
>    : ^^^^^^
>uint32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                            : ^^^^^^
>uint32Array.toLocaleString : () => string
>                           : ^^^^^^      
>uint32Array : Uint32Array<ArrayBuffer>
>            : ^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const float32Array = new Float32Array(3);
>float32Array : Float32Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>new Float32Array(3) : Float32Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>Float32Array : Float32ArrayConstructor
>             : ^^^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = float32Array.toLocaleString(); // OK
>str = float32Array.toLocaleString() : string
>                                    : ^^^^^^
>str : string
>    : ^^^^^^
>float32Array.toLocaleString() : string
>                              : ^^^^^^
>float32Array.toLocaleString : () => string
>                            : ^^^^^^      
>float32Array : Float32Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = float32Array.toLocaleString('en-US'); // should be error
>str = float32Array.toLocaleString('en-US') : string
>                                           : ^^^^^^
>str : string
>    : ^^^^^^
>float32Array.toLocaleString('en-US') : string
>                                     : ^^^^^^
>float32Array.toLocaleString : () => string
>                            : ^^^^^^      
>float32Array : Float32Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = float32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = float32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                   : ^^^^^^
>str : string
>    : ^^^^^^
>float32Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                             : ^^^^^^
>float32Array.toLocaleString : () => string
>                            : ^^^^^^      
>float32Array : Float32Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

const float64Array = new Float64Array(3);
>float64Array : Float64Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>new Float64Array(3) : Float64Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>Float64Array : Float64ArrayConstructor
>             : ^^^^^^^^^^^^^^^^^^^^^^^
>3 : 3
>  : ^

str = float64Array.toLocaleString(); // OK
>str = float64Array.toLocaleString() : string
>                                    : ^^^^^^
>str : string
>    : ^^^^^^
>float64Array.toLocaleString() : string
>                              : ^^^^^^
>float64Array.toLocaleString : () => string
>                            : ^^^^^^      
>float64Array : Float64Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

str = float64Array.toLocaleString('en-US'); // should be error
>str = float64Array.toLocaleString('en-US') : string
>                                           : ^^^^^^
>str : string
>    : ^^^^^^
>float64Array.toLocaleString('en-US') : string
>                                     : ^^^^^^
>float64Array.toLocaleString : () => string
>                            : ^^^^^^      
>float64Array : Float64Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^

str = float64Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }); // should be error
>str = float64Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                                   : ^^^^^^
>str : string
>    : ^^^^^^
>float64Array.toLocaleString('en-US', { style: 'currency', currency: 'EUR' }) : string
>                                                                             : ^^^^^^
>float64Array.toLocaleString : () => string
>                            : ^^^^^^      
>float64Array : Float64Array<ArrayBuffer>
>             : ^^^^^^^^^^^^^^^^^^^^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      
>'en-US' : "en-US"
>        : ^^^^^^^
>{ style: 'currency', currency: 'EUR' } : { style: string; currency: string; }
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>style : string
>      : ^^^^^^
>'currency' : "currency"
>           : ^^^^^^^^^^
>currency : string
>         : ^^^^^^
>'EUR' : "EUR"
>      : ^^^^^

