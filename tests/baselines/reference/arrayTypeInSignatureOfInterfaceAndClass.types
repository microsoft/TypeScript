//// [tests/cases/compiler/arrayTypeInSignatureOfInterfaceAndClass.ts] ////

=== arrayTypeInSignatureOfInterfaceAndClass.ts ===
declare module WinJS {
>WinJS : typeof WinJS
>      : ^^^^^^^^^^^^

    class Promise<T> {
>Promise : Promise<T>
>        : ^^^^^^^^^^

        then<U>(success?: (value: T) => Promise<U>, error?: (error: any) => Promise<U>, progress?: (progress: any) => void): Promise<U>;
>then : <U>(success?: (value: T) => Promise<U>, error?: (error: any) => Promise<U>, progress?: (progress: any) => void) => Promise<U>
>     : ^ ^^       ^^^                        ^^     ^^^                          ^^        ^^^                       ^^^^^          
>success : (value: T) => Promise<U>
>        : ^     ^^ ^^^^^          
>value : T
>      : ^
>error : (error: any) => Promise<U>
>      : ^     ^^   ^^^^^          
>error : any
>progress : (progress: any) => void
>         : ^        ^^   ^^^^^    
>progress : any
    }
}
declare module Data {
>Data : typeof Data
>     : ^^^^^^^^^^^

    export interface IListItem<T> {
        itemIndex: number;
>itemIndex : number
>          : ^^^^^^

        key: any;
>key : any

        data: T;
>data : T
>     : ^

        group: any;
>group : any

        isHeader: boolean;
>isHeader : boolean
>         : ^^^^^^^

        cached: boolean;
>cached : boolean
>       : ^^^^^^^

        isNonSourceData: boolean;
>isNonSourceData : boolean
>                : ^^^^^^^

        preventAugmentation: boolean;
>preventAugmentation : boolean
>                    : ^^^^^^^
    }
    export interface IVirtualList<T> {
        //removeIndices: WinJS.Promise<IListItem<T>[]>;
        removeIndices(indices: number[], options?: any): WinJS.Promise<IListItem<T>[]>;
>removeIndices : (indices: number[], options?: any) => WinJS.Promise<IListItem<T>[]>
>              : ^       ^^        ^^       ^^^   ^^^^^                             
>indices : number[]
>        : ^^^^^^^^
>options : any
>WinJS : any
>      : ^^^
    }
    export class VirtualList<T> implements IVirtualList<T> {
>VirtualList : VirtualList<T>
>            : ^^^^^^^^^^^^^^

        //removeIndices: WinJS.Promise<IListItem<T>[]>;
        public removeIndices(indices: number[], options?: any): WinJS.Promise<IListItem<T>[]>;
>removeIndices : (indices: number[], options?: any) => WinJS.Promise<IListItem<T>[]>
>              : ^       ^^        ^^       ^^^   ^^^^^                             
>indices : number[]
>        : ^^^^^^^^
>options : any
>WinJS : any
>      : ^^^
    }
}
