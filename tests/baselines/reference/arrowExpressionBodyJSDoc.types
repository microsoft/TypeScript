//// [tests/cases/compiler/arrowExpressionBodyJSDoc.ts] ////

=== mytest.js ===
/**
 * @template T
 * @param {T|undefined} value value or not
 * @returns {T} result value
 */
const foo1 = value => /** @type {string} */({ ...value });
>foo1 : <T>(value: T | undefined) => T
>     : ^ ^^     ^^             ^^^^^ 
>value => /** @type {string} */({ ...value }) : <T>(value: T | undefined) => T
>                                             : ^ ^^     ^^             ^^^^^ 
>value : T | undefined
>      : ^^^^^^^^^^^^^
>({ ...value }) : string
>               : ^^^^^^
>{ ...value } : {}
>             : ^^
>value : T | undefined
>      : ^^^^^^^^^^^^^

/**
 * @template T
 * @param {T|undefined} value value or not
 * @returns {T} result value
 */
const foo2 = value => /** @type {string} */(/** @type {T} */({ ...value }));
>foo2 : <T>(value: T | undefined) => T
>     : ^ ^^     ^^             ^^^^^ 
>value => /** @type {string} */(/** @type {T} */({ ...value })) : <T>(value: T | undefined) => T
>                                                               : ^ ^^     ^^             ^^^^^ 
>value : T | undefined
>      : ^^^^^^^^^^^^^
>(/** @type {T} */({ ...value })) : string
>                                 : ^^^^^^
>({ ...value }) : T
>               : ^
>{ ...value } : {}
>             : ^^
>value : T | undefined
>      : ^^^^^^^^^^^^^

