//// [tests/cases/conformance/expressions/asOperator/asOpEmitParens.ts] ////

=== asOpEmitParens.ts ===
declare var x;
>x : any

// Must emit as (x + 1) * 3
(x + 1 as number) * 3;
>(x + 1 as number) * 3 : number
>                      : ^^^^^^
>(x + 1 as number) : number
>                  : ^^^^^^
>x + 1 as number : number
>                : ^^^^^^
>x + 1 : any
>x : any
>1 : 1
>  : ^
>3 : 3
>  : ^

// Should still emit as x.y
(x as any).y;
>(x as any).y : any
>(x as any) : any
>           : ^^^
>x as any : any
>x : any
>y : any
>  : ^^^

// Emit as new (x())
new (x() as any);
>new (x() as any) : any
>(x() as any) : any
>x() as any : any
>x() : any
>x : any

