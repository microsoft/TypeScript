//// [tests/cases/compiler/assignToExistingClass.ts] ////

=== assignToExistingClass.ts ===
namespace Test {
>Test : Symbol(Test, Decl(assignToExistingClass.ts, 0, 0))

    class Mocked {
>Mocked : Symbol(Mocked, Decl(assignToExistingClass.ts, 0, 16))

        myProp: string;
>myProp : Symbol(Mocked.myProp, Decl(assignToExistingClass.ts, 1, 18))
    }

    class Tester {
>Tester : Symbol(Tester, Decl(assignToExistingClass.ts, 3, 5))

        willThrowError() {
>willThrowError : Symbol(Tester.willThrowError, Decl(assignToExistingClass.ts, 5, 18))

            Mocked = Mocked || function () { // => Error: Invalid left-hand side of assignment expression.
>Mocked : Symbol(Mocked, Decl(assignToExistingClass.ts, 0, 16))
>Mocked : Symbol(Mocked, Decl(assignToExistingClass.ts, 0, 16))

                return { myProp: "test" };
>myProp : Symbol(myProp, Decl(assignToExistingClass.ts, 8, 24))

            };
        }
    }
 
}

