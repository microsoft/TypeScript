//// [tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignaturesWithOptionalParameters.ts] ////

=== assignmentCompatWithConstructSignaturesWithOptionalParameters.ts ===
// call signatures in derived types must have the same or fewer optional parameters as the base type

interface Base { 
    a: new () => number;
>a : new () => number
>  : ^^^^^^^^^^      

    a2: new (x?: number) => number;
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>x : number
>  : ^^^^^^

    a3: new (x: number) => number;
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>x : number
>  : ^^^^^^

    a4: new (x: number, y?: number) => number;
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

    a5: new (x?: number, y?: number) => number;
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

    a6: new (x: number, y: number) => number;
>a6 : new (x: number, y: number) => number
>   : ^^^^^ ^^      ^^ ^^      ^^^^^      
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^
}
var b: Base;
>b : Base
>  : ^^^^

var a: new () => number;
>a : new () => number
>  : ^^^^^^^^^^      

    a = b.a; // ok
>a = b.a : new () => number
>        : ^^^^^^^^^^      
>a : new () => number
>  : ^^^^^^^^^^      
>b.a : new () => number
>    : ^^^^^^^^^^      
>b : Base
>  : ^^^^
>a : new () => number
>  : ^^^^^^^^^^      

    a = b.a2; // ok
>a = b.a2 : new (x?: number) => number
>         : ^^^^^ ^^^      ^^^^^      
>a : new () => number
>  : ^^^^^^^^^^      
>b.a2 : new (x?: number) => number
>     : ^^^^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      

    a = b.a3; // error
>a = b.a3 : new (x: number) => number
>         : ^^^^^ ^^      ^^^^^      
>a : new () => number
>  : ^^^^^^^^^^      
>b.a3 : new (x: number) => number
>     : ^^^^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      

    a = b.a4; // error
>a = b.a4 : new (x: number, y?: number) => number
>         : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>a : new () => number
>  : ^^^^^^^^^^      
>b.a4 : new (x: number, y?: number) => number
>     : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      

    a = b.a5; // ok
>a = b.a5 : new (x?: number, y?: number) => number
>         : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>a : new () => number
>  : ^^^^^^^^^^      
>b.a5 : new (x?: number, y?: number) => number
>     : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      

    a = b.a6; // error
>a = b.a6 : new (x: number, y: number) => number
>         : ^^^^^ ^^      ^^ ^^      ^^^^^      
>a : new () => number
>  : ^^^^^^^^^^      
>b.a6 : new (x: number, y: number) => number
>     : ^^^^^ ^^      ^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a6 : new (x: number, y: number) => number
>   : ^^^^^ ^^      ^^ ^^      ^^^^^      

var a2: new (x?: number) => number; 
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>x : number
>  : ^^^^^^

    a2 = b.a; // ok
>a2 = b.a : new () => number
>         : ^^^^^^^^^^      
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>b.a : new () => number
>    : ^^^^^^^^^^      
>b : Base
>  : ^^^^
>a : new () => number
>  : ^^^^^^^^^^      

    a2 = b.a2; // ok
>a2 = b.a2 : new (x?: number) => number
>          : ^^^^^ ^^^      ^^^^^      
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>b.a2 : new (x?: number) => number
>     : ^^^^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      

    a2 = b.a3; // ok
>a2 = b.a3 : new (x: number) => number
>          : ^^^^^ ^^      ^^^^^      
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>b.a3 : new (x: number) => number
>     : ^^^^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      

    a2 = b.a4; // ok
>a2 = b.a4 : new (x: number, y?: number) => number
>          : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>b.a4 : new (x: number, y?: number) => number
>     : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      

    a2 = b.a5; // ok
>a2 = b.a5 : new (x?: number, y?: number) => number
>          : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>b.a5 : new (x?: number, y?: number) => number
>     : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      

    a2 = b.a6; // error
>a2 = b.a6 : new (x: number, y: number) => number
>          : ^^^^^ ^^      ^^ ^^      ^^^^^      
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      
>b.a6 : new (x: number, y: number) => number
>     : ^^^^^ ^^      ^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a6 : new (x: number, y: number) => number
>   : ^^^^^ ^^      ^^ ^^      ^^^^^      

var a3: new (x: number) => number; 
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>x : number
>  : ^^^^^^

    a3 = b.a; // ok
>a3 = b.a : new () => number
>         : ^^^^^^^^^^      
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>b.a : new () => number
>    : ^^^^^^^^^^      
>b : Base
>  : ^^^^
>a : new () => number
>  : ^^^^^^^^^^      

    a3 = b.a2; // ok
>a3 = b.a2 : new (x?: number) => number
>          : ^^^^^ ^^^      ^^^^^      
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>b.a2 : new (x?: number) => number
>     : ^^^^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      

    a3 = b.a3; // ok
>a3 = b.a3 : new (x: number) => number
>          : ^^^^^ ^^      ^^^^^      
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>b.a3 : new (x: number) => number
>     : ^^^^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      

    a3 = b.a4; // ok
>a3 = b.a4 : new (x: number, y?: number) => number
>          : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>b.a4 : new (x: number, y?: number) => number
>     : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      

    a3 = b.a5; // ok
>a3 = b.a5 : new (x?: number, y?: number) => number
>          : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>b.a5 : new (x?: number, y?: number) => number
>     : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      

    a3 = b.a6; // error
>a3 = b.a6 : new (x: number, y: number) => number
>          : ^^^^^ ^^      ^^ ^^      ^^^^^      
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      
>b.a6 : new (x: number, y: number) => number
>     : ^^^^^ ^^      ^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a6 : new (x: number, y: number) => number
>   : ^^^^^ ^^      ^^ ^^      ^^^^^      

var a4: new (x: number, y?: number) => number;
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

    a4 = b.a; // ok
>a4 = b.a : new () => number
>         : ^^^^^^^^^^      
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b.a : new () => number
>    : ^^^^^^^^^^      
>b : Base
>  : ^^^^
>a : new () => number
>  : ^^^^^^^^^^      

    a4 = b.a2; // ok
>a4 = b.a2 : new (x?: number) => number
>          : ^^^^^ ^^^      ^^^^^      
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b.a2 : new (x?: number) => number
>     : ^^^^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      

    a4 = b.a3; // ok
>a4 = b.a3 : new (x: number) => number
>          : ^^^^^ ^^      ^^^^^      
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b.a3 : new (x: number) => number
>     : ^^^^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      

    a4 = b.a4; // ok
>a4 = b.a4 : new (x: number, y?: number) => number
>          : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b.a4 : new (x: number, y?: number) => number
>     : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      

    a4 = b.a5; // ok
>a4 = b.a5 : new (x?: number, y?: number) => number
>          : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b.a5 : new (x?: number, y?: number) => number
>     : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      

    a4 = b.a6; // ok
>a4 = b.a6 : new (x: number, y: number) => number
>          : ^^^^^ ^^      ^^ ^^      ^^^^^      
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b.a6 : new (x: number, y: number) => number
>     : ^^^^^ ^^      ^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a6 : new (x: number, y: number) => number
>   : ^^^^^ ^^      ^^ ^^      ^^^^^      

var a5: new (x?: number, y?: number) => number;
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

    a5 = b.a; // ok
>a5 = b.a : new () => number
>         : ^^^^^^^^^^      
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b.a : new () => number
>    : ^^^^^^^^^^      
>b : Base
>  : ^^^^
>a : new () => number
>  : ^^^^^^^^^^      

    a5 = b.a2; // ok
>a5 = b.a2 : new (x?: number) => number
>          : ^^^^^ ^^^      ^^^^^      
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b.a2 : new (x?: number) => number
>     : ^^^^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a2 : new (x?: number) => number
>   : ^^^^^ ^^^      ^^^^^      

    a5 = b.a3; // ok
>a5 = b.a3 : new (x: number) => number
>          : ^^^^^ ^^      ^^^^^      
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b.a3 : new (x: number) => number
>     : ^^^^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a3 : new (x: number) => number
>   : ^^^^^ ^^      ^^^^^      

    a5 = b.a4; // ok
>a5 = b.a4 : new (x: number, y?: number) => number
>          : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b.a4 : new (x: number, y?: number) => number
>     : ^^^^^ ^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a4 : new (x: number, y?: number) => number
>   : ^^^^^ ^^      ^^ ^^^      ^^^^^      

    a5 = b.a5; // ok
>a5 = b.a5 : new (x?: number, y?: number) => number
>          : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b.a5 : new (x?: number, y?: number) => number
>     : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b : Base
>  : ^^^^
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      

    a5 = b.a6; // ok
>a5 = b.a6 : new (x: number, y: number) => number
>          : ^^^^^ ^^      ^^ ^^      ^^^^^      
>a5 : new (x?: number, y?: number) => number
>   : ^^^^^ ^^^      ^^ ^^^      ^^^^^      
>b.a6 : new (x: number, y: number) => number
>     : ^^^^^ ^^      ^^ ^^      ^^^^^      
>b : Base
>  : ^^^^
>a6 : new (x: number, y: number) => number
>   : ^^^^^ ^^      ^^ ^^      ^^^^^      

