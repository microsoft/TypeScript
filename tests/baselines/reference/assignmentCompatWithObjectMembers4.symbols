//// [tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers4.ts] ////

=== assignmentCompatWithObjectMembers4.ts ===
// members N and M of types S and T have the same name, same accessibility, same optionality, and N is not assignable M

namespace OnlyDerived {
>OnlyDerived : Symbol(OnlyDerived, Decl(assignmentCompatWithObjectMembers4.ts, 0, 0))

    class Base { foo: string; }
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 2, 23))
>foo : Symbol(Base.foo, Decl(assignmentCompatWithObjectMembers4.ts, 3, 16))

    class Derived extends Base { bar: string; }
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembers4.ts, 3, 31))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 2, 23))
>bar : Symbol(Derived.bar, Decl(assignmentCompatWithObjectMembers4.ts, 4, 32))

    class Derived2 extends Base { baz: string; }
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 4, 47))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 2, 23))
>baz : Symbol(Derived2.baz, Decl(assignmentCompatWithObjectMembers4.ts, 5, 33))

    class S { foo: Derived; }
>S : Symbol(S, Decl(assignmentCompatWithObjectMembers4.ts, 5, 48))
>foo : Symbol(S.foo, Decl(assignmentCompatWithObjectMembers4.ts, 7, 13))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembers4.ts, 3, 31))

    class T { foo: Derived2; }
>T : Symbol(T, Decl(assignmentCompatWithObjectMembers4.ts, 7, 29))
>foo : Symbol(T.foo, Decl(assignmentCompatWithObjectMembers4.ts, 8, 13))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 4, 47))

    var s: S;
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 9, 7))
>S : Symbol(S, Decl(assignmentCompatWithObjectMembers4.ts, 5, 48))

    var t: T;
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 10, 7))
>T : Symbol(T, Decl(assignmentCompatWithObjectMembers4.ts, 7, 29))

    interface S2 { foo: Derived; }
>S2 : Symbol(S2, Decl(assignmentCompatWithObjectMembers4.ts, 10, 13))
>foo : Symbol(S2.foo, Decl(assignmentCompatWithObjectMembers4.ts, 12, 18))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembers4.ts, 3, 31))

    interface T2 { foo: Derived2; }
>T2 : Symbol(T2, Decl(assignmentCompatWithObjectMembers4.ts, 12, 34))
>foo : Symbol(T2.foo, Decl(assignmentCompatWithObjectMembers4.ts, 13, 18))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 4, 47))

    var s2: S2;
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))
>S2 : Symbol(S2, Decl(assignmentCompatWithObjectMembers4.ts, 10, 13))

    var t2: T2;
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 15, 7))
>T2 : Symbol(T2, Decl(assignmentCompatWithObjectMembers4.ts, 12, 34))

    var a: { foo: Derived; }
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 17, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 17, 12))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembers4.ts, 3, 31))

    var b: { foo: Derived2; }
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 18, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 18, 12))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 4, 47))

    var a2 = { foo: new Derived() };
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 20, 14))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembers4.ts, 3, 31))

    var b2 = { foo: new Derived2() };
>b2 : Symbol(b2, Decl(assignmentCompatWithObjectMembers4.ts, 21, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 21, 14))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 4, 47))

    s = t; // error
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 9, 7))
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 10, 7))

    t = s; // error
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 10, 7))
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 9, 7))

    s = s2; // ok
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 9, 7))
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))

    s = a2; // ok
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 9, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))

    s2 = t2; // error
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 15, 7))

    t2 = s2; // error
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 15, 7))
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))

    s2 = t; // error
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 10, 7))

    s2 = b; // error
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 18, 7))

    s2 = a2; // ok
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))

    a = b; // error
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 17, 7))
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 18, 7))

    b = a; // error
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 18, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 17, 7))

    a = s; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 17, 7))
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 9, 7))

    a = s2; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 17, 7))
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 14, 7))

    a = a2; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 17, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))

    a2 = b2; // error
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))
>b2 : Symbol(b2, Decl(assignmentCompatWithObjectMembers4.ts, 21, 7))

    b2 = a2; // error
>b2 : Symbol(b2, Decl(assignmentCompatWithObjectMembers4.ts, 21, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))

    a2 = b; // error
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 18, 7))

    a2 = t2; // error
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 15, 7))

    a2 = t; // error
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 20, 7))
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 10, 7))
}

namespace WithBase {
>WithBase : Symbol(WithBase, Decl(assignmentCompatWithObjectMembers4.ts, 45, 1))

    class Base { foo: string; }
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))
>foo : Symbol(Base.foo, Decl(assignmentCompatWithObjectMembers4.ts, 48, 16))

    class Derived extends Base { bar: string; }
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembers4.ts, 48, 31))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))
>bar : Symbol(Derived.bar, Decl(assignmentCompatWithObjectMembers4.ts, 49, 32))

    class Derived2 extends Base { baz: string; }
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 49, 47))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))
>baz : Symbol(Derived2.baz, Decl(assignmentCompatWithObjectMembers4.ts, 50, 33))

    class S { foo: Base; }
>S : Symbol(S, Decl(assignmentCompatWithObjectMembers4.ts, 50, 48))
>foo : Symbol(S.foo, Decl(assignmentCompatWithObjectMembers4.ts, 52, 13))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))

    class T { foo: Derived2; }
>T : Symbol(T, Decl(assignmentCompatWithObjectMembers4.ts, 52, 26))
>foo : Symbol(T.foo, Decl(assignmentCompatWithObjectMembers4.ts, 53, 13))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 49, 47))

    var s: S;
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 54, 7))
>S : Symbol(S, Decl(assignmentCompatWithObjectMembers4.ts, 50, 48))

    var t: T;
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 55, 7))
>T : Symbol(T, Decl(assignmentCompatWithObjectMembers4.ts, 52, 26))

    interface S2 { foo: Base; }
>S2 : Symbol(S2, Decl(assignmentCompatWithObjectMembers4.ts, 55, 13))
>foo : Symbol(S2.foo, Decl(assignmentCompatWithObjectMembers4.ts, 57, 18))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))

    interface T2 { foo: Derived2; }
>T2 : Symbol(T2, Decl(assignmentCompatWithObjectMembers4.ts, 57, 31))
>foo : Symbol(T2.foo, Decl(assignmentCompatWithObjectMembers4.ts, 58, 18))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 49, 47))

    var s2: S2;
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))
>S2 : Symbol(S2, Decl(assignmentCompatWithObjectMembers4.ts, 55, 13))

    var t2: T2;
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 60, 7))
>T2 : Symbol(T2, Decl(assignmentCompatWithObjectMembers4.ts, 57, 31))

    var a: { foo: Base; }
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 62, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 62, 12))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))

    var b: { foo: Derived2; }
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 63, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 63, 12))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 49, 47))

    var a2 = { foo: new Base() };
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 65, 14))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembers4.ts, 47, 20))

    var b2 = { foo: new Derived2() };
>b2 : Symbol(b2, Decl(assignmentCompatWithObjectMembers4.ts, 66, 7))
>foo : Symbol(foo, Decl(assignmentCompatWithObjectMembers4.ts, 66, 14))
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembers4.ts, 49, 47))

    s = t; // ok
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 54, 7))
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 55, 7))

    t = s; // error
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 55, 7))
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 54, 7))

    s = s2; // ok
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 54, 7))
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))

    s = a2; // ok
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 54, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))

    s2 = t2; // ok
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 60, 7))

    t2 = s2; // error
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 60, 7))
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))

    s2 = t; // ok
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 55, 7))

    s2 = b; // ok
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 63, 7))

    s2 = a2; // ok
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))

    a = b; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 62, 7))
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 63, 7))

    b = a; // error
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 63, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 62, 7))

    a = s; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 62, 7))
>s : Symbol(s, Decl(assignmentCompatWithObjectMembers4.ts, 54, 7))

    a = s2; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 62, 7))
>s2 : Symbol(s2, Decl(assignmentCompatWithObjectMembers4.ts, 59, 7))

    a = a2; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembers4.ts, 62, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))

    a2 = b2; // ok
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))
>b2 : Symbol(b2, Decl(assignmentCompatWithObjectMembers4.ts, 66, 7))

    b2 = a2; // error
>b2 : Symbol(b2, Decl(assignmentCompatWithObjectMembers4.ts, 66, 7))
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))

    a2 = b; // ok
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))
>b : Symbol(b, Decl(assignmentCompatWithObjectMembers4.ts, 63, 7))

    a2 = t2; // ok
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))
>t2 : Symbol(t2, Decl(assignmentCompatWithObjectMembers4.ts, 60, 7))

    a2 = t; // ok
>a2 : Symbol(a2, Decl(assignmentCompatWithObjectMembers4.ts, 65, 7))
>t : Symbol(t, Decl(assignmentCompatWithObjectMembers4.ts, 55, 7))
}
