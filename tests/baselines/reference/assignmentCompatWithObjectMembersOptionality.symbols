//// [tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersOptionality.ts] ////

=== assignmentCompatWithObjectMembersOptionality.ts ===
// Derived member is not optional but base member is, should be ok

class Base { foo: string; }
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))
>foo : Symbol(Base.foo, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 12))

class Derived extends Base { bar: string; }
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 27))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))
>bar : Symbol(Derived.bar, Decl(assignmentCompatWithObjectMembersOptionality.ts, 3, 28))

class Derived2 extends Derived { baz: string; }
>Derived2 : Symbol(Derived2, Decl(assignmentCompatWithObjectMembersOptionality.ts, 3, 43))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 27))
>baz : Symbol(Derived2.baz, Decl(assignmentCompatWithObjectMembersOptionality.ts, 4, 32))

namespace TargetHasOptional {
>TargetHasOptional : Symbol(TargetHasOptional, Decl(assignmentCompatWithObjectMembersOptionality.ts, 4, 47))

    // targets
    interface C {
>C : Symbol(C, Decl(assignmentCompatWithObjectMembersOptionality.ts, 6, 29))

        opt?: Base
>opt : Symbol(C.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 8, 17))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))
    }
    var c: C;
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))
>C : Symbol(C, Decl(assignmentCompatWithObjectMembersOptionality.ts, 6, 29))

    var a: { opt?: Base; }
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))
>opt : Symbol(opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 12))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))

    var b: typeof a = { opt: new Base() }
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))
>opt : Symbol(opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 23))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))

    // sources
    interface D {
>D : Symbol(D, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 41))

        opt: Base;
>opt : Symbol(D.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 17, 17))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))
    }
    interface E {
>E : Symbol(E, Decl(assignmentCompatWithObjectMembersOptionality.ts, 19, 5))

        opt: Derived;
>opt : Symbol(E.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 20, 17))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 27))
    }
    interface F {
>F : Symbol(F, Decl(assignmentCompatWithObjectMembersOptionality.ts, 22, 5))

        opt?: Derived;
>opt : Symbol(F.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 23, 17))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 27))
    }
    var d: D;
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 26, 7))
>D : Symbol(D, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 41))

    var e: E;
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 27, 7))
>E : Symbol(E, Decl(assignmentCompatWithObjectMembersOptionality.ts, 19, 5))

    var f: F;
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 28, 7))
>F : Symbol(F, Decl(assignmentCompatWithObjectMembersOptionality.ts, 22, 5))

    // all ok
    c = d;
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 26, 7))

    c = e;
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 27, 7))

    c = f;
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 28, 7))

    c = a;
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))

    a = d;
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 26, 7))

    a = e;
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 27, 7))

    a = f;
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 28, 7))

    a = c;
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))

    b = d;
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 7))
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 26, 7))

    b = e;
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 7))
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 27, 7))

    b = f;
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 7))
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 28, 7))

    b = a;
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 13, 7))

    b = c;
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 14, 7))
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 11, 7))
}

namespace SourceHasOptional {
>SourceHasOptional : Symbol(SourceHasOptional, Decl(assignmentCompatWithObjectMembersOptionality.ts, 46, 1))

    // targets
    interface C {
>C : Symbol(C, Decl(assignmentCompatWithObjectMembersOptionality.ts, 48, 29))

        opt: Base
>opt : Symbol(C.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 50, 17))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))
    }
    var c: C;
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))
>C : Symbol(C, Decl(assignmentCompatWithObjectMembersOptionality.ts, 48, 29))

    var a: { opt: Base; }
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))
>opt : Symbol(opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 12))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))

    var b = { opt: new Base() }
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 7))
>opt : Symbol(opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 13))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))

    // sources
    interface D {
>D : Symbol(D, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 31))

        opt?: Base;
>opt : Symbol(D.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 59, 17))
>Base : Symbol(Base, Decl(assignmentCompatWithObjectMembersOptionality.ts, 0, 0))
    }
    interface E {
>E : Symbol(E, Decl(assignmentCompatWithObjectMembersOptionality.ts, 61, 5))

        opt?: Derived;
>opt : Symbol(E.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 62, 17))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 27))
    }
    interface F {
>F : Symbol(F, Decl(assignmentCompatWithObjectMembersOptionality.ts, 64, 5))

        opt: Derived;
>opt : Symbol(F.opt, Decl(assignmentCompatWithObjectMembersOptionality.ts, 65, 17))
>Derived : Symbol(Derived, Decl(assignmentCompatWithObjectMembersOptionality.ts, 2, 27))
    }
    var d: D;
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 68, 7))
>D : Symbol(D, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 31))

    var e: E;
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 69, 7))
>E : Symbol(E, Decl(assignmentCompatWithObjectMembersOptionality.ts, 61, 5))

    var f: F;
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 70, 7))
>F : Symbol(F, Decl(assignmentCompatWithObjectMembersOptionality.ts, 64, 5))

    c = d; // error
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 68, 7))

    c = e; // error
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 69, 7))

    c = f; // ok
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 70, 7))

    c = a; // ok
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))

    a = d; // error
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 68, 7))

    a = e; // error
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 69, 7))

    a = f; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 70, 7))

    a = c; // ok
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))

    b = d; // error
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 7))
>d : Symbol(d, Decl(assignmentCompatWithObjectMembersOptionality.ts, 68, 7))

    b = e; // error
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 7))
>e : Symbol(e, Decl(assignmentCompatWithObjectMembersOptionality.ts, 69, 7))

    b = f; // ok
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 7))
>f : Symbol(f, Decl(assignmentCompatWithObjectMembersOptionality.ts, 70, 7))

    b = a; // ok
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 7))
>a : Symbol(a, Decl(assignmentCompatWithObjectMembersOptionality.ts, 55, 7))

    b = c; // ok
>b : Symbol(b, Decl(assignmentCompatWithObjectMembersOptionality.ts, 56, 7))
>c : Symbol(c, Decl(assignmentCompatWithObjectMembersOptionality.ts, 53, 7))
}
