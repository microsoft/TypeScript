//// [tests/cases/compiler/assignmentCompatability5.ts] ////

=== assignmentCompatability5.ts ===
namespace __test1__ {
>__test1__ : Symbol(__test1__, Decl(assignmentCompatability5.ts, 0, 0))

    export interface interfaceWithPublicAndOptional<T,U> { one: T; two?: U; };  var obj4: interfaceWithPublicAndOptional<number,string> = { one: 1 };;
>interfaceWithPublicAndOptional : Symbol(interfaceWithPublicAndOptional, Decl(assignmentCompatability5.ts, 0, 21))
>T : Symbol(T, Decl(assignmentCompatability5.ts, 1, 52))
>U : Symbol(U, Decl(assignmentCompatability5.ts, 1, 54))
>one : Symbol(interfaceWithPublicAndOptional.one, Decl(assignmentCompatability5.ts, 1, 58))
>T : Symbol(T, Decl(assignmentCompatability5.ts, 1, 52))
>two : Symbol(interfaceWithPublicAndOptional.two, Decl(assignmentCompatability5.ts, 1, 66))
>U : Symbol(U, Decl(assignmentCompatability5.ts, 1, 54))
>obj4 : Symbol(obj4, Decl(assignmentCompatability5.ts, 1, 83))
>interfaceWithPublicAndOptional : Symbol(interfaceWithPublicAndOptional, Decl(assignmentCompatability5.ts, 0, 21))
>one : Symbol(one, Decl(assignmentCompatability5.ts, 1, 139))

    export var __val__obj4 = obj4;
>__val__obj4 : Symbol(__val__obj4, Decl(assignmentCompatability5.ts, 2, 14))
>obj4 : Symbol(obj4, Decl(assignmentCompatability5.ts, 1, 83))
}
namespace __test2__ {
>__test2__ : Symbol(__test2__, Decl(assignmentCompatability5.ts, 3, 1))

    export                   interface interfaceOne<T> { one: T; };                var obj1: interfaceOne<number> = { one: 1 };;
>interfaceOne : Symbol(interfaceOne, Decl(assignmentCompatability5.ts, 4, 21))
>T : Symbol(T, Decl(assignmentCompatability5.ts, 5, 52))
>one : Symbol(interfaceOne.one, Decl(assignmentCompatability5.ts, 5, 56))
>T : Symbol(T, Decl(assignmentCompatability5.ts, 5, 52))
>obj1 : Symbol(obj1, Decl(assignmentCompatability5.ts, 5, 86))
>interfaceOne : Symbol(interfaceOne, Decl(assignmentCompatability5.ts, 4, 21))
>one : Symbol(one, Decl(assignmentCompatability5.ts, 5, 117))

    export var __val__obj1 = obj1;
>__val__obj1 : Symbol(__val__obj1, Decl(assignmentCompatability5.ts, 6, 14))
>obj1 : Symbol(obj1, Decl(assignmentCompatability5.ts, 5, 86))
}
__test2__.__val__obj1 = __test1__.__val__obj4
>__test2__.__val__obj1 : Symbol(__test2__.__val__obj1, Decl(assignmentCompatability5.ts, 6, 14))
>__test2__ : Symbol(__test2__, Decl(assignmentCompatability5.ts, 3, 1))
>__val__obj1 : Symbol(__test2__.__val__obj1, Decl(assignmentCompatability5.ts, 6, 14))
>__test1__.__val__obj4 : Symbol(__test1__.__val__obj4, Decl(assignmentCompatability5.ts, 2, 14))
>__test1__ : Symbol(__test1__, Decl(assignmentCompatability5.ts, 0, 0))
>__val__obj4 : Symbol(__test1__.__val__obj4, Decl(assignmentCompatability5.ts, 2, 14))

