//// [tests/cases/compiler/assignmentToInstantiationExpression.ts] ////

=== assignmentToInstantiationExpression.ts ===
let obj: { fn?: <T>() => T } = {};
>obj : { fn?: <T>() => T; }
>    : ^^^^^^^          ^^^
>fn : (<T>() => T) | undefined
>   : ^^ ^^^^^^^ ^^^^^^^^^^^^^
>{} : {}
>   : ^^

obj.fn<number> = () => 1234;
>obj.fn<number> = () => 1234 : () => number
>                            : ^^^^^^^^^^^^
>obj.fn<number> : (() => number) | undefined
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^^
>obj.fn : (<T>() => T) | undefined
>       : ^^ ^^^^^^^ ^^^^^^^^^^^^^
>obj : { fn?: <T>() => T; }
>    : ^^^^^^^          ^^^
>fn : (<T>() => T) | undefined
>   : ^^ ^^^^^^^ ^^^^^^^^^^^^^
>() => 1234 : () => number
>           : ^^^^^^^^^^^^
>1234 : 1234
>     : ^^^^


let getValue: <T>() => T;
>getValue : <T>() => T
>         : ^ ^^^^^^^ 

getValue<number> = () => 1234;
>getValue<number> = () => 1234 : () => number
>                              : ^^^^^^^^^^^^
>getValue<number> : () => number
>                 : ^^^^^^^^^^^^
>getValue : <T>() => T
>         : ^ ^^^^^^^ 
>() => 1234 : () => number
>           : ^^^^^^^^^^^^
>1234 : 1234
>     : ^^^^


let getValue2!: <T>() => T;
>getValue2 : <T>() => T
>          : ^ ^^^^^^^ 

getValue2<number> = () => 1234;
>getValue2<number> = () => 1234 : () => number
>                               : ^^^^^^^^^^^^
>getValue2<number> : () => number
>                  : ^^^^^^^^^^^^
>getValue2 : <T>() => T
>          : ^ ^^^^^^^ 
>() => 1234 : () => number
>           : ^^^^^^^^^^^^
>1234 : 1234
>     : ^^^^

