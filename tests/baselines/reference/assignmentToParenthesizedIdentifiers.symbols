//// [tests/cases/conformance/expressions/valuesAndReferences/assignmentToParenthesizedIdentifiers.ts] ////

=== assignmentToParenthesizedIdentifiers.ts ===
var x: number;
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 0, 3))

x = 3; // OK
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 0, 3))

(x) = 3; // OK
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 0, 3))

x = ''; // Error
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 0, 3))

(x) = ''; // Error
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 0, 3))

namespace M {
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))

    export var y: number;
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
}
M.y = 3; // OK
>M.y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))

(M).y = 3; // OK
>(M).y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))

(M.y) = 3; // OK
>M.y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))

M.y = ''; // Error
>M.y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))

(M).y = ''; // Error
>(M).y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))

(M.y) = ''; // Error
>M.y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(M.y, Decl(assignmentToParenthesizedIdentifiers.ts, 7, 14))

M = { y: 3 }; // Error
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 16, 5))

(M) = { y: 3 }; // Error
>M : Symbol(M, Decl(assignmentToParenthesizedIdentifiers.ts, 4, 9))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 7))

namespace M2 {
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))

    export namespace M3 {
>M3 : Symbol(M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))

        export var x: number;
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 21, 18))
    }

    M3 = { x: 3 }; // Error
>M3 : Symbol(M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 24, 10))
}
M2.M3 = { x: 3 }; // OK
>M2.M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))
>M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 26, 9))

(M2).M3 = { x: 3 }; // OK
>(M2).M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))
>M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 27, 11))

(M2.M3) = { x: 3 }; // OK
>M2.M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))
>M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 28, 11))

M2.M3 = { x: '' }; // Error
>M2.M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))
>M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 30, 9))

(M2).M3 = { x: '' }; // Error
>(M2).M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))
>M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 31, 11))

(M2.M3) = { x: '' }; // Error
>M2.M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>M2 : Symbol(M2, Decl(assignmentToParenthesizedIdentifiers.ts, 17, 15))
>M3 : Symbol(M2.M3, Decl(assignmentToParenthesizedIdentifiers.ts, 19, 14))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 32, 11))


function fn() { }
>fn : Symbol(fn, Decl(assignmentToParenthesizedIdentifiers.ts, 32, 20))

fn = () => 3; // Bug 823548: Should be error (fn is not a reference)
>fn : Symbol(fn, Decl(assignmentToParenthesizedIdentifiers.ts, 32, 20))

(fn) = () => 3; // Should be error
>fn : Symbol(fn, Decl(assignmentToParenthesizedIdentifiers.ts, 32, 20))

function fn2(x: number, y: { t: number }) {
>fn2 : Symbol(fn2, Decl(assignmentToParenthesizedIdentifiers.ts, 37, 15))
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 13))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    x = 3;
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 13))

    (x) = 3; // OK
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 13))

    x = ''; // Error
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 13))

    (x) = ''; // Error
>x : Symbol(x, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 13))

    (y).t = 3; // OK
>(y).t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y.t) = 3; // OK
>y.t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y).t = ''; // Error
>(y).t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y.t) = ''; // Error
>y.t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>t : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    y['t'] = 3; // OK
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>'t' : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y)['t'] = 3; // OK
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>'t' : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y['t']) = 3; // OK
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>'t' : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    y['t'] = ''; // Error
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>'t' : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y)['t'] = ''; // Error
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>'t' : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))

    (y['t']) = ''; // Error
>y : Symbol(y, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 23))
>'t' : Symbol(t, Decl(assignmentToParenthesizedIdentifiers.ts, 39, 28))
}

enum E {
>E : Symbol(E, Decl(assignmentToParenthesizedIdentifiers.ts, 56, 1))

    A
>A : Symbol(E.A, Decl(assignmentToParenthesizedIdentifiers.ts, 58, 8))
}
E = undefined; // Error
>E : Symbol(E, Decl(assignmentToParenthesizedIdentifiers.ts, 56, 1))
>undefined : Symbol(undefined)

(E) = undefined; // Error
>E : Symbol(E, Decl(assignmentToParenthesizedIdentifiers.ts, 56, 1))
>undefined : Symbol(undefined)

class C {
>C : Symbol(C, Decl(assignmentToParenthesizedIdentifiers.ts, 62, 16))

}

C = undefined; // Error
>C : Symbol(C, Decl(assignmentToParenthesizedIdentifiers.ts, 62, 16))
>undefined : Symbol(undefined)

(C) = undefined; // Error
>C : Symbol(C, Decl(assignmentToParenthesizedIdentifiers.ts, 62, 16))
>undefined : Symbol(undefined)

