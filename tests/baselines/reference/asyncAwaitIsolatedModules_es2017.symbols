//// [tests/cases/conformance/async/es2017/asyncAwaitIsolatedModules_es2017.ts] ////

=== asyncAwaitIsolatedModules_es2017.ts ===
import { MyPromise } from "missing";
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

declare var p: Promise<number>;
>p : Symbol(p, Decl(asyncAwaitIsolatedModules_es2017.ts, 2, 11))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

declare var mp: MyPromise<number>;
>mp : Symbol(mp, Decl(asyncAwaitIsolatedModules_es2017.ts, 3, 11))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

async function f0() { }
>f0 : Symbol(f0, Decl(asyncAwaitIsolatedModules_es2017.ts, 3, 34))

async function f1(): Promise<void> { }
>f1 : Symbol(f1, Decl(asyncAwaitIsolatedModules_es2017.ts, 5, 23))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

async function f3(): MyPromise<void> { }
>f3 : Symbol(f3, Decl(asyncAwaitIsolatedModules_es2017.ts, 6, 38))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

let f4 = async function() { }
>f4 : Symbol(f4, Decl(asyncAwaitIsolatedModules_es2017.ts, 9, 3))

let f5 = async function(): Promise<void> { }
>f5 : Symbol(f5, Decl(asyncAwaitIsolatedModules_es2017.ts, 10, 3))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

let f6 = async function(): MyPromise<void> { }
>f6 : Symbol(f6, Decl(asyncAwaitIsolatedModules_es2017.ts, 11, 3))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

let f7 = async () => { };
>f7 : Symbol(f7, Decl(asyncAwaitIsolatedModules_es2017.ts, 13, 3))

let f8 = async (): Promise<void> => { };
>f8 : Symbol(f8, Decl(asyncAwaitIsolatedModules_es2017.ts, 14, 3))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

let f9 = async (): MyPromise<void> => { }; 
>f9 : Symbol(f9, Decl(asyncAwaitIsolatedModules_es2017.ts, 15, 3))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

let f10 = async () => p;
>f10 : Symbol(f10, Decl(asyncAwaitIsolatedModules_es2017.ts, 16, 3))
>p : Symbol(p, Decl(asyncAwaitIsolatedModules_es2017.ts, 2, 11))

let f11 = async () => mp;
>f11 : Symbol(f11, Decl(asyncAwaitIsolatedModules_es2017.ts, 17, 3))
>mp : Symbol(mp, Decl(asyncAwaitIsolatedModules_es2017.ts, 3, 11))

let f12 = async (): Promise<number> => mp;
>f12 : Symbol(f12, Decl(asyncAwaitIsolatedModules_es2017.ts, 18, 3))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>mp : Symbol(mp, Decl(asyncAwaitIsolatedModules_es2017.ts, 3, 11))

let f13 = async (): MyPromise<number> => p;
>f13 : Symbol(f13, Decl(asyncAwaitIsolatedModules_es2017.ts, 19, 3))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))
>p : Symbol(p, Decl(asyncAwaitIsolatedModules_es2017.ts, 2, 11))

let o = {
>o : Symbol(o, Decl(asyncAwaitIsolatedModules_es2017.ts, 21, 3))

	async m1() { },
>m1 : Symbol(m1, Decl(asyncAwaitIsolatedModules_es2017.ts, 21, 9))

	async m2(): Promise<void> { },
>m2 : Symbol(m2, Decl(asyncAwaitIsolatedModules_es2017.ts, 22, 16))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

	async m3(): MyPromise<void> { }
>m3 : Symbol(m3, Decl(asyncAwaitIsolatedModules_es2017.ts, 23, 31))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

};

class C {
>C : Symbol(C, Decl(asyncAwaitIsolatedModules_es2017.ts, 25, 2))

	async m1() { }
>m1 : Symbol(C.m1, Decl(asyncAwaitIsolatedModules_es2017.ts, 27, 9))

	async m2(): Promise<void> { }
>m2 : Symbol(C.m2, Decl(asyncAwaitIsolatedModules_es2017.ts, 28, 15))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

	async m3(): MyPromise<void> { }
>m3 : Symbol(C.m3, Decl(asyncAwaitIsolatedModules_es2017.ts, 29, 30))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))

	static async m4() { }
>m4 : Symbol(C.m4, Decl(asyncAwaitIsolatedModules_es2017.ts, 30, 32))

	static async m5(): Promise<void> { }
>m5 : Symbol(C.m5, Decl(asyncAwaitIsolatedModules_es2017.ts, 31, 22))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

	static async m6(): MyPromise<void> { }
>m6 : Symbol(C.m6, Decl(asyncAwaitIsolatedModules_es2017.ts, 32, 37))
>MyPromise : Symbol(MyPromise, Decl(asyncAwaitIsolatedModules_es2017.ts, 0, 8))
}

namespace M {
>M : Symbol(M, Decl(asyncAwaitIsolatedModules_es2017.ts, 34, 1))

	export async function f1() { }
>f1 : Symbol(f1, Decl(asyncAwaitIsolatedModules_es2017.ts, 36, 13))
}
