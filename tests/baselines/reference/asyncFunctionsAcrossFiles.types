//// [tests/cases/compiler/asyncFunctionsAcrossFiles.ts] ////

=== a.ts ===
import { b } from './b';
>b : { f: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

export const a = {
>a : { f: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    f: async () => {        await b.f();    }} : { f: () => Promise<void>; }
>                                                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

    f: async () => {
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>async () => {        await b.f();    } : () => Promise<void>
>                                       : ^^^^^^^^^^^^^^^^^^^

        await b.f();
>await b.f() : void
>            : ^^^^
>b.f() : Promise<void>
>      : ^^^^^^^^^^^^^
>b.f : () => Promise<void>
>    : ^^^^^^^^^^^^^^^^^^^
>b : { f: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
    }
};
=== b.ts ===
import { a } from './a';
>a : { f: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

export const b = {
>b : { f: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    f: async () => {        await a.f();    }} : { f: () => Promise<void>; }
>                                                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

    f: async () => {
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>async () => {        await a.f();    } : () => Promise<void>
>                                       : ^^^^^^^^^^^^^^^^^^^

        await a.f();
>await a.f() : void
>            : ^^^^
>a.f() : Promise<void>
>      : ^^^^^^^^^^^^^
>a.f : () => Promise<void>
>    : ^^^^^^^^^^^^^^^^^^^
>a : { f: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
    }
};
