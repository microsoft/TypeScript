//// [tests/cases/compiler/augmentedTypesEnum3.ts] ////

=== augmentedTypesEnum3.ts ===
module E {
>E : Symbol(E, Decl(augmentedTypesEnum3.ts, 0, 0), Decl(augmentedTypesEnum3.ts, 2, 1))

    var t;
>t : Symbol(t, Decl(augmentedTypesEnum3.ts, 1, 7))
}
enum E { }
>E : Symbol(E, Decl(augmentedTypesEnum3.ts, 0, 0), Decl(augmentedTypesEnum3.ts, 2, 1))

enum F { }
>F : Symbol(F, Decl(augmentedTypesEnum3.ts, 3, 10), Decl(augmentedTypesEnum3.ts, 5, 10))

module F { var t; }
>F : Symbol(F, Decl(augmentedTypesEnum3.ts, 3, 10), Decl(augmentedTypesEnum3.ts, 5, 10))
>t : Symbol(t, Decl(augmentedTypesEnum3.ts, 6, 14))

module A {
>A : Symbol(A, Decl(augmentedTypesEnum3.ts, 6, 19), Decl(augmentedTypesEnum3.ts, 10, 1), Decl(augmentedTypesEnum3.ts, 16, 1))

    var o;
>o : Symbol(o, Decl(augmentedTypesEnum3.ts, 9, 7))
}
enum A {
>A : Symbol(A, Decl(augmentedTypesEnum3.ts, 6, 19), Decl(augmentedTypesEnum3.ts, 10, 1), Decl(augmentedTypesEnum3.ts, 16, 1))

    b
>b : Symbol(A.b, Decl(augmentedTypesEnum3.ts, 11, 8))
}
enum A {
>A : Symbol(A, Decl(augmentedTypesEnum3.ts, 13, 1))

    c
>c : Symbol(A.c, Decl(augmentedTypesEnum3.ts, 14, 8))
}
module A {
>A : Symbol(A, Decl(augmentedTypesEnum3.ts, 6, 19), Decl(augmentedTypesEnum3.ts, 10, 1), Decl(augmentedTypesEnum3.ts, 16, 1))

    var p;
>p : Symbol(p, Decl(augmentedTypesEnum3.ts, 18, 7))
}
