//// [tests/cases/compiler/augmentedTypesModules2.ts] ////

=== augmentedTypesModules2.ts ===
// module then function
module m2 { }
function m2() { }; // ok since the module is not instantiated
>m2 : () => void
>   : ^^^^^^^^^^

module m2a { var y = 2; }
>m2a : typeof m2a
>    : ^^^^^^^^^^
>y : number
>  : ^^^^^^
>2 : 2
>  : ^

function m2a() { }; // error since the module is instantiated
>m2a : typeof m2a
>    : ^^^^^^^^^^

module m2b { export var y = 2; }
>m2b : typeof m2b
>    : ^^^^^^^^^^
>y : number
>  : ^^^^^^
>2 : 2
>  : ^

function m2b() { };  // error since the module is instantiated
>m2b : typeof m2b
>    : ^^^^^^^^^^

function m2c() { }; 
>m2c : typeof m2c
>    : ^^^^^^^^^^

module m2c { export var y = 2; } 
>m2c : typeof m2c
>    : ^^^^^^^^^^
>y : number
>  : ^^^^^^
>2 : 2
>  : ^

module m2cc { export var y = 2; }
>m2cc : typeof m2cc
>     : ^^^^^^^^^^^
>y : number
>  : ^^^^^^
>2 : 2
>  : ^

function m2cc() { }; // error to have module first
>m2cc : typeof m2cc
>     : ^^^^^^^^^^^

module m2d { }
declare function m2d(): void; 
>m2d : () => void
>    : ^^^^^^    

declare function m2e(): void; 
>m2e : () => void
>    : ^^^^^^    

module m2e { }

function m2f() { };
>m2f : () => void
>    : ^^^^^^^^^^

module m2f { export interface I { foo(): void } } 
>foo : () => void
>    : ^^^^^^    

function m2g() { };
>m2g : typeof m2g
>    : ^^^^^^^^^^

module m2g { export class C { foo() { } } } 
>m2g : typeof m2g
>    : ^^^^^^^^^^
>C : C
>  : ^
>foo : () => void
>    : ^^^^^^^^^^

