//// [tests/cases/compiler/augmentedTypesModules3b.ts] ////

=== augmentedTypesModules3b.ts ===
class m3b { foo() { } }
>m3b : Symbol(m3b, Decl(augmentedTypesModules3b.ts, 0, 0), Decl(augmentedTypesModules3b.ts, 0, 23))
>foo : Symbol(m3b.foo, Decl(augmentedTypesModules3b.ts, 0, 11))

namespace m3b { var y = 2; }
>m3b : Symbol(m3b, Decl(augmentedTypesModules3b.ts, 0, 0), Decl(augmentedTypesModules3b.ts, 0, 23))
>y : Symbol(y, Decl(augmentedTypesModules3b.ts, 1, 19))

class m3c { foo() { } }
>m3c : Symbol(m3c, Decl(augmentedTypesModules3b.ts, 1, 28), Decl(augmentedTypesModules3b.ts, 3, 23))
>foo : Symbol(m3c.foo, Decl(augmentedTypesModules3b.ts, 3, 11))

namespace m3c { export var y = 2; } 
>m3c : Symbol(m3c, Decl(augmentedTypesModules3b.ts, 1, 28), Decl(augmentedTypesModules3b.ts, 3, 23))
>y : Symbol(y, Decl(augmentedTypesModules3b.ts, 4, 26))

declare class m3d { foo(): void }
>m3d : Symbol(m3d, Decl(augmentedTypesModules3b.ts, 4, 35), Decl(augmentedTypesModules3b.ts, 6, 33))
>foo : Symbol(m3d.foo, Decl(augmentedTypesModules3b.ts, 6, 19))

namespace m3d { export var y = 2; } 
>m3d : Symbol(m3d, Decl(augmentedTypesModules3b.ts, 4, 35), Decl(augmentedTypesModules3b.ts, 6, 33))
>y : Symbol(y, Decl(augmentedTypesModules3b.ts, 7, 26))

namespace m3e { export var y = 2; } 
>m3e : Symbol(m3e, Decl(augmentedTypesModules3b.ts, 7, 35), Decl(augmentedTypesModules3b.ts, 9, 35))
>y : Symbol(y, Decl(augmentedTypesModules3b.ts, 9, 26))

declare class m3e { foo(): void } 
>m3e : Symbol(m3e, Decl(augmentedTypesModules3b.ts, 7, 35), Decl(augmentedTypesModules3b.ts, 9, 35))
>foo : Symbol(m3e.foo, Decl(augmentedTypesModules3b.ts, 10, 19))

declare class m3f { foo(): void }
>m3f : Symbol(m3f, Decl(augmentedTypesModules3b.ts, 10, 33), Decl(augmentedTypesModules3b.ts, 12, 33))
>foo : Symbol(m3f.foo, Decl(augmentedTypesModules3b.ts, 12, 19))

namespace m3f { export interface I { foo(): void } }
>m3f : Symbol(m3f, Decl(augmentedTypesModules3b.ts, 10, 33), Decl(augmentedTypesModules3b.ts, 12, 33))
>I : Symbol(I, Decl(augmentedTypesModules3b.ts, 13, 15))
>foo : Symbol(I.foo, Decl(augmentedTypesModules3b.ts, 13, 36))

declare class m3g { foo(): void }
>m3g : Symbol(m3g, Decl(augmentedTypesModules3b.ts, 13, 52), Decl(augmentedTypesModules3b.ts, 15, 33))
>foo : Symbol(m3g.foo, Decl(augmentedTypesModules3b.ts, 15, 19))

namespace m3g { export class C { foo() { } } }
>m3g : Symbol(m3g, Decl(augmentedTypesModules3b.ts, 13, 52), Decl(augmentedTypesModules3b.ts, 15, 33))
>C : Symbol(C, Decl(augmentedTypesModules3b.ts, 16, 15))
>foo : Symbol(C.foo, Decl(augmentedTypesModules3b.ts, 16, 32))

