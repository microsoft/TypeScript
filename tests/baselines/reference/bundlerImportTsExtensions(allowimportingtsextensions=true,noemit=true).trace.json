[
    "======== Resolving module './a' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/a', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/project/a.ts' exists - use it as a name resolution result.",
    "======== Module name './a' was successfully resolved to '/project/a.ts'. ========",
    "======== Resolving module './a.js' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/a.js', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/a.js' has a '.js' extension - stripping it.",
    "File '/project/a.ts' exists - use it as a name resolution result.",
    "======== Module name './a.js' was successfully resolved to '/project/a.ts'. ========",
    "======== Resolving module './a.ts' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/a.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/a.ts' has a '.ts' extension - stripping it.",
    "File '/project/a.ts' exists - use it as a name resolution result.",
    "======== Module name './a.ts' was successfully resolved to '/project/a.ts'. ========",
    "======== Resolving module './b' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/b', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/project/b.ts' exists - use it as a name resolution result.",
    "======== Module name './b' was successfully resolved to '/project/b.ts'. ========",
    "======== Resolving module './b.js' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/b.js', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/b.js' has a '.js' extension - stripping it.",
    "File '/project/b.ts' exists - use it as a name resolution result.",
    "======== Module name './b.js' was successfully resolved to '/project/b.ts'. ========",
    "======== Resolving module './b.ts' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/b.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/b.ts' has a '.ts' extension - stripping it.",
    "File '/project/b.ts' exists - use it as a name resolution result.",
    "======== Module name './b.ts' was successfully resolved to '/project/b.ts'. ========",
    "======== Resolving module './b.d.ts' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/b.d.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/b.d.ts' has a '.d.ts' extension - stripping it.",
    "File '/project/b.ts' exists - use it as a name resolution result.",
    "======== Module name './b.d.ts' was successfully resolved to '/project/b.ts'. ========",
    "======== Resolving module './c.ts' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/c.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/c.ts' has a '.ts' extension - stripping it.",
    "File '/project/c.ts' exists - use it as a name resolution result.",
    "======== Module name './c.ts' was successfully resolved to '/project/c.ts'. ========",
    "======== Resolving module './c.tsx' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/c.tsx', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/c.tsx' has a '.tsx' extension - stripping it.",
    "File '/project/c.tsx' exists - use it as a name resolution result.",
    "======== Module name './c.tsx' was successfully resolved to '/project/c.tsx'. ========",
    "======== Resolving module './d' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/d', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/project/d.ts' does not exist.",
    "File '/project/d.tsx' does not exist.",
    "File '/project/d.d.ts' does not exist.",
    "File '/project/d.js' does not exist.",
    "File '/project/d.jsx' does not exist.",
    "File '/project/d/package.json' does not exist.",
    "File '/project/d/index.ts' exists - use it as a name resolution result.",
    "======== Module name './d' was successfully resolved to '/project/d/index.ts'. ========",
    "======== Resolving module './d/index' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/d/index', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/project/d/index.ts' exists - use it as a name resolution result.",
    "======== Module name './d/index' was successfully resolved to '/project/d/index.ts'. ========",
    "======== Resolving module './d/index.ts' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/d/index.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/d/index.ts' has a '.ts' extension - stripping it.",
    "File '/project/d/index.ts' exists - use it as a name resolution result.",
    "======== Module name './d/index.ts' was successfully resolved to '/project/d/index.ts'. ========",
    "======== Resolving module './e' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/e', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/project/e.ts' exists - use it as a name resolution result.",
    "======== Module name './e' was successfully resolved to '/project/e.ts'. ========",
    "======== Resolving module './e.txt' from '/project/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/e.txt', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/e.txt' has a '.txt' extension - stripping it.",
    "File '/project/e.d.txt.ts' does not exist.",
    "File '/project/e.txt.ts' exists - use it as a name resolution result.",
    "======== Module name './e.txt' was successfully resolved to '/project/e.txt.ts'. ========",
    "======== Resolving module './a.ts' from '/project/types.d.ts'. ========",
    "Resolution for module './a.ts' was found in cache from location '/project'.",
    "======== Module name './a.ts' was successfully resolved to '/project/a.ts'. ========",
    "======== Resolving module './a.d.ts' from '/project/types.d.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/project/a.d.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/project/a.d.ts' has a '.d.ts' extension - stripping it.",
    "File '/project/a.ts' exists - use it as a name resolution result.",
    "======== Module name './a.d.ts' was successfully resolved to '/project/a.ts'. ========"
]