[
    "======== Resolving module './dir' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/dir', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/dir.ts' does not exist.",
    "File '/dir.tsx' does not exist.",
    "File '/dir.d.ts' does not exist.",
    "File '/dir.js' does not exist.",
    "File '/dir.jsx' does not exist.",
    "File '/dir/package.json' does not exist.",
    "File '/dir/index.ts' exists - use it as a name resolution result.",
    "======== Module name './dir' was successfully resolved to '/dir/index.ts'. ========",
    "======== Resolving module './dir/index' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/dir/index', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/dir/index.ts' exists - use it as a name resolution result.",
    "======== Module name './dir/index' was successfully resolved to '/dir/index.ts'. ========",
    "======== Resolving module './dir/index.js' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/dir/index.js', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/dir/index.js' has a '.js' extension - stripping it.",
    "File '/dir/index.ts' exists - use it as a name resolution result.",
    "======== Module name './dir/index.js' was successfully resolved to '/dir/index.ts'. ========",
    "======== Resolving module './dir/index.ts' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/dir/index.ts', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File name '/dir/index.ts' has a '.ts' extension - stripping it.",
    "File '/dir/index.ts' exists - use it as a name resolution result.",
    "======== Module name './dir/index.ts' was successfully resolved to '/dir/index.ts'. ========",
    "======== Resolving module './redirect' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/redirect', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/redirect.ts' does not exist.",
    "File '/redirect.tsx' does not exist.",
    "File '/redirect.d.ts' does not exist.",
    "File '/redirect.js' does not exist.",
    "File '/redirect.jsx' does not exist.",
    "Found 'package.json' at '/redirect/package.json'.",
    "'package.json' does not have a 'typesVersions' field.",
    "'package.json' does not have a 'typings' field.",
    "'package.json' does not have a 'types' field.",
    "'package.json' has 'main' field '../foo' that references '/foo'.",
    "Loading module as file / folder, candidate module location '/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/foo.ts' does not exist.",
    "File '/foo.tsx' does not exist.",
    "File '/foo.d.ts' does not exist.",
    "File '/foo.js' does not exist.",
    "File '/foo.jsx' does not exist.",
    "File '/foo/index.ts' exists - use it as a name resolution result.",
    "======== Module name './redirect' was successfully resolved to '/foo/index.ts'. ========",
    "======== Resolving module './redirect/index' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/redirect/index', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/redirect/index.ts' does not exist.",
    "File '/redirect/index.tsx' does not exist.",
    "File '/redirect/index.d.ts' does not exist.",
    "File '/redirect/index.js' does not exist.",
    "File '/redirect/index.jsx' does not exist.",
    "Directory '/redirect/index' does not exist, skipping all lookups in it.",
    "======== Module name './redirect/index' was not resolved. ========",
    "======== Resolving module './types/esm' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/types/esm', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/types/esm.ts' does not exist.",
    "File '/types/esm.tsx' does not exist.",
    "File '/types/esm.d.ts' exists - use it as a name resolution result.",
    "======== Module name './types/esm' was successfully resolved to '/types/esm.d.ts'. ========",
    "======== Resolving module './types/cjs' from '/main.ts'. ========",
    "Explicitly specified module resolution kind: 'Bundler'.",
    "Resolving in CJS mode with conditions 'import', 'types'.",
    "Loading module as file / folder, candidate module location '/types/cjs', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/types/cjs.ts' does not exist.",
    "File '/types/cjs.tsx' does not exist.",
    "File '/types/cjs.d.ts' exists - use it as a name resolution result.",
    "======== Module name './types/cjs' was successfully resolved to '/types/cjs.d.ts'. ========"
]