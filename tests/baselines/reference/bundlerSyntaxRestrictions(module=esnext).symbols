//// [tests/cases/conformance/moduleResolution/bundler/bundlerSyntaxRestrictions.ts] ////

=== /node_modules/@types/node/index.d.ts ===
declare var require: (...args: any[]) => any;
>require : Symbol(require, Decl(index.d.ts, 0, 11))
>args : Symbol(args, Decl(index.d.ts, 0, 22))

=== /ambient.d.ts ===
declare module "fs" {
>"fs" : Symbol("fs", Decl(ambient.d.ts, 0, 0))

    export function readFileSync(path: string, encoding?: string): string;
>readFileSync : Symbol(readFileSync, Decl(ambient.d.ts, 0, 21))
>path : Symbol(path, Decl(ambient.d.ts, 1, 33))
>encoding : Symbol(encoding, Decl(ambient.d.ts, 1, 46))
}
declare module "path" {
>"path" : Symbol("path", Decl(ambient.d.ts, 2, 1))

    import fs = require("fs"); // ok
>fs : Symbol(fs, Decl(ambient.d.ts, 3, 23))

    namespace path {
>path : Symbol(path, Decl(ambient.d.ts, 4, 30))

        export const sep: string;
>sep : Symbol(sep, Decl(ambient.d.ts, 6, 20))
    }
    export = path; // ok
>path : Symbol(path, Decl(ambient.d.ts, 4, 30))
}

=== /mainJs.js ===
import {} from "./a";
import("./a");
>"./a" : Symbol(_, Decl(a.ts, 0, 0))

const _ = require("./a");
>_ : Symbol(_, Decl(mainJs.js, 2, 5))
>require : Symbol(require, Decl(index.d.ts, 0, 11))
>"./a" : Symbol(_, Decl(a.ts, 0, 0))

_.a; // any
>_.a : Symbol(_.a, Decl(a.ts, 0, 12))
>_ : Symbol(_, Decl(mainJs.js, 2, 5))
>a : Symbol(_.a, Decl(a.ts, 0, 12))

=== /main.ts ===
import {} from "./a";
import _ = require("./a"); // Error in esnext
>_ : Symbol(_, Decl(main.ts, 0, 21))

export = {}; // Error
export {};

=== /a.ts ===
export const a = "a";
>a : Symbol(a, Decl(a.ts, 0, 12))

