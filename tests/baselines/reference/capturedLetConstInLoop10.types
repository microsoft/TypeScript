//// [tests/cases/compiler/capturedLetConstInLoop10.ts] ////

=== capturedLetConstInLoop10.ts ===
class A {
>A : A
>  : ^

    foo() {
>foo : () => void
>    : ^^^^^^^^^^

        for (let x of [0]) {
>x : number
>  : ^^^^^^
>[0] : number[]
>    : ^^^^^^^^
>0 : 0
>  : ^

            let f = function() { return x; };
>f : () => number
>  : ^^^^^^^^^^^^
>function() { return x; } : () => number
>                         : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^

            this.bar(f());
>this.bar(f()) : void
>              : ^^^^
>this.bar : (a: number) => void
>         : ^ ^^      ^^^^^^^^^
>this : this
>     : ^^^^
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>f() : number
>    : ^^^^^^
>f : () => number
>  : ^^^^^^^^^^^^
        }
    }
    bar(a: number) {
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>a : number
>  : ^^^^^^
    }

    baz() {
>baz : () => void
>    : ^^^^^^^^^^

        for (let x of [1]) {
>x : number
>  : ^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^

            let a = function() {  return x; };
>a : () => number
>  : ^^^^^^^^^^^^
>function() {  return x; } : () => number
>                          : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^

            for (let y of [1]) {
>y : number
>  : ^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^

                let b = function() { return y; };
>b : () => number
>  : ^^^^^^^^^^^^
>function() { return y; } : () => number
>                         : ^^^^^^^^^^^^
>y : number
>  : ^^^^^^

                this.bar(b());
>this.bar(b()) : void
>              : ^^^^
>this.bar : (a: number) => void
>         : ^ ^^      ^^^^^^^^^
>this : this
>     : ^^^^
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>b() : number
>    : ^^^^^^
>b : () => number
>  : ^^^^^^^^^^^^
            }
            this.bar(a());
>this.bar(a()) : void
>              : ^^^^
>this.bar : (a: number) => void
>         : ^ ^^      ^^^^^^^^^
>this : this
>     : ^^^^
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>a() : number
>    : ^^^^^^
>a : () => number
>  : ^^^^^^^^^^^^
        }
    }
    baz2() {
>baz2 : () => void
>     : ^^^^^^^^^^

        for (let x of [1]) {
>x : number
>  : ^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^

            let a = function() {  return x; };
>a : () => number
>  : ^^^^^^^^^^^^
>function() {  return x; } : () => number
>                          : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^

            this.bar(a());
>this.bar(a()) : void
>              : ^^^^
>this.bar : (a: number) => void
>         : ^ ^^      ^^^^^^^^^
>this : this
>     : ^^^^
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>a() : number
>    : ^^^^^^
>a : () => number
>  : ^^^^^^^^^^^^

            for (let y of [1]) {
>y : number
>  : ^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^

                let b = function() { return y; };
>b : () => number
>  : ^^^^^^^^^^^^
>function() { return y; } : () => number
>                         : ^^^^^^^^^^^^
>y : number
>  : ^^^^^^

                this.bar(b());
>this.bar(b()) : void
>              : ^^^^
>this.bar : (a: number) => void
>         : ^ ^^      ^^^^^^^^^
>this : this
>     : ^^^^
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>b() : number
>    : ^^^^^^
>b : () => number
>  : ^^^^^^^^^^^^
            }
        }
    }
}

class B {
>B : B
>  : ^

    foo() {
>foo : () => void
>    : ^^^^^^^^^^

        let a =
>a : () => void
>  : ^^^^^^^^^^

            () => {
>() => {                for (let x of [0]) {                    let f = () => x;                    this.bar(f());                }            } : () => void
>                                                                                                                                                : ^^^^^^^^^^

                for (let x of [0]) {
>x : number
>  : ^^^^^^
>[0] : number[]
>    : ^^^^^^^^
>0 : 0
>  : ^

                    let f = () => x;
>f : () => number
>  : ^^^^^^^^^^^^
>() => x : () => number
>        : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^

                    this.bar(f());
>this.bar(f()) : void
>              : ^^^^
>this.bar : (a: number) => void
>         : ^ ^^      ^^^^^^^^^
>this : this
>     : ^^^^
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>f() : number
>    : ^^^^^^
>f : () => number
>  : ^^^^^^^^^^^^
                }
            }
    }
    bar(a: number) {
>bar : (a: number) => void
>    : ^ ^^      ^^^^^^^^^
>a : number
>  : ^^^^^^
    }
}
