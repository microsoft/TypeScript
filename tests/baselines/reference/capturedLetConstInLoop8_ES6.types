//// [tests/cases/compiler/capturedLetConstInLoop8_ES6.ts] ////

=== capturedLetConstInLoop8_ES6.ts ===
function foo() {
>foo : () => "123" | "456"
>    : ^^^^^^^^^^^^^^^^^^^

    l0:
>l0 : any
>   : ^^^

    for (let z = 0; z < 1; ++z) {
>z : number
>  : ^^^^^^
>0 : 0
>  : ^
>z < 1 : boolean
>      : ^^^^^^^
>z : number
>  : ^^^^^^
>1 : 1
>  : ^
>++z : number
>    : ^^^^^^
>z : number
>  : ^^^^^^

        l1:
>l1 : any
>   : ^^^

        for (let x = 0; x < 1; ++x) {
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>x < 1 : boolean
>      : ^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>++x : number
>    : ^^^^^^
>x : number
>  : ^^^^^^

            ll1:
>ll1 : any
>    : ^^^

            for (let y = 0; y < 1; ++y) {
>y : number
>  : ^^^^^^
>0 : 0
>  : ^
>y < 1 : boolean
>      : ^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^
>++y : number
>    : ^^^^^^
>y : number
>  : ^^^^^^

                (function() { return x + y });
>(function() { return x + y }) : () => number
>                              : ^^^^^^^^^^^^
>function() { return x + y } : () => number
>                            : ^^^^^^^^^^^^
>x + y : number
>      : ^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

                (() => x + y);
>(() => x + y) : () => number
>              : ^^^^^^^^^^^^
>() => x + y : () => number
>            : ^^^^^^^^^^^^
>x + y : number
>      : ^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

                    break;
                }
                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

                    break l1;
>l1 : any
>   : ^^^
                }
                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

                    break ll1;
>ll1 : any
>    : ^^^
                }
                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

                    continue l0;
>l0 : any
>   : ^^^
                }

                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                    continue;
                }
                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                    continue l1;
>l1 : any
>   : ^^^
                }
                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                    continue ll1;
>ll1 : any
>    : ^^^
                }
                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                    return "123"
>"123" : "123"
>      : ^^^^^
                }
                if (x == 3) {
>x == 3 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>3 : 3
>  : ^

                    return;
                }
            }
            if (x == 1) {
>x == 1 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

                break;
            }
            if (x == 1) {
>x == 1 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

                break l1;
>l1 : any
>   : ^^^
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                continue;
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                continue l1;
>l1 : any
>   : ^^^
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                continue l0;
>l0 : any
>   : ^^^
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

                return "456";
>"456" : "456"
>      : ^^^^^
            }
            if (x == 3) {
>x == 3 : boolean
>       : ^^^^^^^
>x : number
>  : ^^^^^^
>3 : 3
>  : ^

                return;
            }
        }
    }
}

function foo_c() {
>foo_c : () => "123" | "456"
>      : ^^^^^^^^^^^^^^^^^^^

    l0:
>l0 : any
>   : ^^^

    for (const z = 0; z < 1;) {
>z : 0
>  : ^
>0 : 0
>  : ^
>z < 1 : boolean
>      : ^^^^^^^
>z : 0
>  : ^
>1 : 1
>  : ^

        l1:
>l1 : any
>   : ^^^

        for (const x = 0; x < 1;) {
>x : 0
>  : ^
>0 : 0
>  : ^
>x < 1 : boolean
>      : ^^^^^^^
>x : 0
>  : ^
>1 : 1
>  : ^

            ll1:
>ll1 : any
>    : ^^^

            for (const y = 0; y < 1;) {
>y : 0
>  : ^
>0 : 0
>  : ^
>y < 1 : boolean
>      : ^^^^^^^
>y : 0
>  : ^
>1 : 1
>  : ^

                (function() { return x + y });
>(function() { return x + y }) : () => number
>                              : ^^^^^^^^^^^^
>function() { return x + y } : () => number
>                            : ^^^^^^^^^^^^
>x + y : number
>      : ^^^^^^
>x : 0
>  : ^
>y : 0
>  : ^

                (() => x + y);
>(() => x + y) : () => number
>              : ^^^^^^^^^^^^
>() => x + y : () => number
>            : ^^^^^^^^^^^^
>x + y : number
>      : ^^^^^^
>x : 0
>  : ^
>y : 0
>  : ^

                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : 0
>  : ^
>1 : 1
>  : ^

                    break;
                }
                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : 0
>  : ^
>1 : 1
>  : ^

                    break l1;
>l1 : any
>   : ^^^
                }
                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : 0
>  : ^
>1 : 1
>  : ^

                    break ll1;
>ll1 : any
>    : ^^^
                }
                if (y == 1) {
>y == 1 : boolean
>       : ^^^^^^^
>y : 0
>  : ^
>1 : 1
>  : ^

                    continue l0;
>l0 : any
>   : ^^^
                }

                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                    continue;
                }
                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                    continue l1;
>l1 : any
>   : ^^^
                }
                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                    continue ll1;
>ll1 : any
>    : ^^^
                }
                if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                    return "123"
>"123" : "123"
>      : ^^^^^
                }
                if (x == 3) {
>x == 3 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>3 : 3
>  : ^

                    return;
                }
            }
            if (x == 1) {
>x == 1 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>1 : 1
>  : ^

                break;
            }
            if (x == 1) {
>x == 1 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>1 : 1
>  : ^

                break l1;
>l1 : any
>   : ^^^
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                continue;
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                continue l1;
>l1 : any
>   : ^^^
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                continue l0;
>l0 : any
>   : ^^^
            }
            if (x == 2) {
>x == 2 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>2 : 2
>  : ^

                return "456";
>"456" : "456"
>      : ^^^^^
            }
            if (x == 3) {
>x == 3 : boolean
>       : ^^^^^^^
>x : 0
>  : ^
>3 : 3
>  : ^

                return;
            }
        }
    }
}

