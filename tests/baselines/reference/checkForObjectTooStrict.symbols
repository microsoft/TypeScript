//// [tests/cases/compiler/checkForObjectTooStrict.ts] ////

=== checkForObjectTooStrict.ts ===
namespace Foo {
>Foo : Symbol(Foo, Decl(checkForObjectTooStrict.ts, 0, 0))

    export class Object {
>Object : Symbol(Object, Decl(checkForObjectTooStrict.ts, 0, 15))

    }

}

 

class Bar extends Foo.Object { // should work
>Bar : Symbol(Bar, Decl(checkForObjectTooStrict.ts, 6, 1))
>Foo.Object : Symbol(Foo.Object, Decl(checkForObjectTooStrict.ts, 0, 15))
>Foo : Symbol(Foo, Decl(checkForObjectTooStrict.ts, 0, 0))
>Object : Symbol(Foo.Object, Decl(checkForObjectTooStrict.ts, 0, 15))

    constructor () {

        super();
>super : Symbol(Foo.Object, Decl(checkForObjectTooStrict.ts, 0, 15))

    }

}


class Baz extends Object {
>Baz : Symbol(Baz, Decl(checkForObjectTooStrict.ts, 18, 1))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

    constructor () { // ERROR, as expected

        super();
>super : Symbol(ObjectConstructor, Decl(lib.es5.d.ts, --, --))

    }

}

