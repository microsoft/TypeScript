//// [tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractFactoryFunction.ts] ////

=== classAbstractFactoryFunction.ts ===
class A {}
>A : A
>  : ^

abstract class B extends A {}
>B : B
>  : ^
>A : A
>  : ^

function NewA(Factory: typeof A) {
>NewA : (Factory: typeof A) => A
>     : ^       ^^        ^^^^^^
>Factory : typeof A
>        : ^^^^^^^^
>A : typeof A
>  : ^^^^^^^^

    return new A;
>new A : A
>      : ^
>A : typeof A
>  : ^^^^^^^^
}

function NewB(Factory: typeof B) {
>NewB : (Factory: typeof B) => any
>     : ^       ^^        ^^^^^^^^
>Factory : typeof B
>        : ^^^^^^^^
>B : typeof B
>  : ^^^^^^^^

    return new B;
>new B : any
>      : ^^^
>B : typeof B
>  : ^^^^^^^^
}

NewA(A);
>NewA(A) : A
>        : ^
>NewA : (Factory: typeof A) => A
>     : ^       ^^        ^^^^^^
>A : typeof A
>  : ^^^^^^^^

NewA(B);
>NewA(B) : A
>        : ^
>NewA : (Factory: typeof A) => A
>     : ^       ^^        ^^^^^^
>B : typeof B
>  : ^^^^^^^^

NewB(A);
>NewB(A) : any
>        : ^^^
>NewB : (Factory: typeof B) => any
>     : ^       ^^        ^^^^^^^^
>A : typeof A
>  : ^^^^^^^^

NewB(B);
>NewB(B) : any
>        : ^^^
>NewB : (Factory: typeof B) => any
>     : ^       ^^        ^^^^^^^^
>B : typeof B
>  : ^^^^^^^^

