//// [tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractUsingAbstractMethods2.ts] ////

=== classAbstractUsingAbstractMethods2.ts ===
class A {
>A : A
>  : ^

    abstract foo();
>foo : () => any
>    : ^^^^^^^^^
}

class B extends A  {}
>B : B
>  : ^
>A : A
>  : ^

abstract class C extends A {}
>C : C
>  : ^
>A : A
>  : ^

class D extends A {
>D : D
>  : ^
>A : A
>  : ^

    foo() {}
>foo : () => void
>    : ^^^^^^^^^^
}

abstract class E extends A {
>E : E
>  : ^
>A : A
>  : ^

    foo() {}
>foo : () => void
>    : ^^^^^^^^^^
}

abstract class AA {
>AA : AA
>   : ^^

    abstract foo();
>foo : () => any
>    : ^^^^^^^^^
}

class BB extends AA  {}
>BB : BB
>   : ^^
>AA : AA
>   : ^^

abstract class CC extends AA {}
>CC : CC
>   : ^^
>AA : AA
>   : ^^

class DD extends AA {
>DD : DD
>   : ^^
>AA : AA
>   : ^^

    foo() {}
>foo : () => void
>    : ^^^^^^^^^^
}
