//// [tests/cases/conformance/classes/constructorDeclarations/classConstructorAccessibility.ts] ////

=== classConstructorAccessibility.ts ===
class C {
>C : Symbol(C, Decl(classConstructorAccessibility.ts, 0, 0))

    public constructor(public x: number) { }
>x : Symbol(C.x, Decl(classConstructorAccessibility.ts, 1, 23))
}

class D {
>D : Symbol(D, Decl(classConstructorAccessibility.ts, 2, 1))

    private constructor(public x: number) { }
>x : Symbol(D.x, Decl(classConstructorAccessibility.ts, 5, 24))
}

class E {
>E : Symbol(E, Decl(classConstructorAccessibility.ts, 6, 1))

    protected constructor(public x: number) { }
>x : Symbol(E.x, Decl(classConstructorAccessibility.ts, 9, 26))
}

var c = new C(1);
>c : Symbol(c, Decl(classConstructorAccessibility.ts, 12, 3))
>C : Symbol(C, Decl(classConstructorAccessibility.ts, 0, 0))

var d = new D(1); // error
>d : Symbol(d, Decl(classConstructorAccessibility.ts, 13, 3))
>D : Symbol(D, Decl(classConstructorAccessibility.ts, 2, 1))

var e = new E(1); // error
>e : Symbol(e, Decl(classConstructorAccessibility.ts, 14, 3))
>E : Symbol(E, Decl(classConstructorAccessibility.ts, 6, 1))

namespace Generic {
>Generic : Symbol(Generic, Decl(classConstructorAccessibility.ts, 14, 17))

    class C<T> {
>C : Symbol(C, Decl(classConstructorAccessibility.ts, 16, 19))
>T : Symbol(T, Decl(classConstructorAccessibility.ts, 17, 12))

        public constructor(public x: T) { }
>x : Symbol(C.x, Decl(classConstructorAccessibility.ts, 18, 27))
>T : Symbol(T, Decl(classConstructorAccessibility.ts, 17, 12))
    }

    class D<T> {
>D : Symbol(D, Decl(classConstructorAccessibility.ts, 19, 5))
>T : Symbol(T, Decl(classConstructorAccessibility.ts, 21, 12))

        private constructor(public x: T) { }
>x : Symbol(D.x, Decl(classConstructorAccessibility.ts, 22, 28))
>T : Symbol(T, Decl(classConstructorAccessibility.ts, 21, 12))
    }

    class E<T> {
>E : Symbol(E, Decl(classConstructorAccessibility.ts, 23, 5))
>T : Symbol(T, Decl(classConstructorAccessibility.ts, 25, 12))

        protected constructor(public x: T) { }
>x : Symbol(E.x, Decl(classConstructorAccessibility.ts, 26, 30))
>T : Symbol(T, Decl(classConstructorAccessibility.ts, 25, 12))
    }

    var c = new C(1);
>c : Symbol(c, Decl(classConstructorAccessibility.ts, 29, 7))
>C : Symbol(C, Decl(classConstructorAccessibility.ts, 16, 19))

    var d = new D(1); // error
>d : Symbol(d, Decl(classConstructorAccessibility.ts, 30, 7))
>D : Symbol(D, Decl(classConstructorAccessibility.ts, 19, 5))

    var e = new E(1); // error
>e : Symbol(e, Decl(classConstructorAccessibility.ts, 31, 7))
>E : Symbol(E, Decl(classConstructorAccessibility.ts, 23, 5))
}

