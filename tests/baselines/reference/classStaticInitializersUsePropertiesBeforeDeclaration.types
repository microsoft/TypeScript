//// [tests/cases/compiler/classStaticInitializersUsePropertiesBeforeDeclaration.ts] ////

=== classStaticInitializersUsePropertiesBeforeDeclaration.ts ===
class Foo {
>Foo : Foo
>    : ^^^

    static enumMember = Enum.A;
>enumMember : Enum
>           : ^^^^
>Enum.A : Enum
>       : ^^^^
>Enum : typeof Enum
>     : ^^^^^^^^^^^
>A : Enum
>  : ^^^^

    static objLiteralMember = ObjLiteral.A;
>objLiteralMember : number
>                 : ^^^^^^
>ObjLiteral.A : number
>             : ^^^^^^
>ObjLiteral : { A: number; }
>           : ^^^^^^^^^^^^^^
>A : number
>  : ^^^^^^

    static namespaceMember = Namespace.A;
>namespaceMember : number
>                : ^^^^^^
>Namespace.A : number
>            : ^^^^^^
>Namespace : typeof Namespace
>          : ^^^^^^^^^^^^^^^^
>A : number
>  : ^^^^^^
}

enum Enum {
>Enum : Enum
>     : ^^^^

    A
>A : Enum.A
>  : ^^^^^^
}

const ObjLiteral = {
>ObjLiteral : { A: number; }
>           : ^^^^^^^^^^^^^^
>{    A: 0} : { A: number; }
>           : ^^^^^^^^^^^^^^

    A: 0
>A : number
>  : ^^^^^^
>0 : 0
>  : ^

};

namespace Namespace {
>Namespace : typeof Namespace
>          : ^^^^^^^^^^^^^^^^

    export let A = 0
>A : number
>  : ^^^^^^
>0 : 0
>  : ^
}

