//// [tests/cases/compiler/cloduleAndTypeParameters.ts] ////

=== cloduleAndTypeParameters.ts ===
class Foo<T extends Foo.Bar> {
>Foo : Symbol(Foo, Decl(cloduleAndTypeParameters.ts, 0, 0), Decl(cloduleAndTypeParameters.ts, 3, 1))
>T : Symbol(T, Decl(cloduleAndTypeParameters.ts, 0, 10))
>Foo : Symbol(Foo, Decl(cloduleAndTypeParameters.ts, 0, 0), Decl(cloduleAndTypeParameters.ts, 3, 1))
>Bar : Symbol(Foo.Bar, Decl(cloduleAndTypeParameters.ts, 5, 15))

  constructor() {
  }
}

namespace Foo {
>Foo : Symbol(Foo, Decl(cloduleAndTypeParameters.ts, 0, 0), Decl(cloduleAndTypeParameters.ts, 3, 1))

  export interface Bar {
>Bar : Symbol(Bar, Decl(cloduleAndTypeParameters.ts, 5, 15))

    bar(): void;
>bar : Symbol(Bar.bar, Decl(cloduleAndTypeParameters.ts, 6, 24))
  }

  export class Baz {
>Baz : Symbol(Baz, Decl(cloduleAndTypeParameters.ts, 8, 3))
  }
}
