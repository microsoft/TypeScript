//// [tests/cases/compiler/cloduleWithDuplicateMember1.ts] ////

=== cloduleWithDuplicateMember1.ts ===
class C {
>C : Symbol(C, Decl(cloduleWithDuplicateMember1.ts, 0, 0), Decl(cloduleWithDuplicateMember1.ts, 6, 1), Decl(cloduleWithDuplicateMember1.ts, 10, 1))

    get x() { return 1; }
>x : Symbol(C.x, Decl(cloduleWithDuplicateMember1.ts, 0, 9))

    static get x() {
>x : Symbol(C.x, Decl(cloduleWithDuplicateMember1.ts, 1, 25))

        return '';
    }
    static foo() { }
>foo : Symbol(C.foo, Decl(cloduleWithDuplicateMember1.ts, 4, 5))
}

namespace C {
>C : Symbol(C, Decl(cloduleWithDuplicateMember1.ts, 0, 0), Decl(cloduleWithDuplicateMember1.ts, 6, 1), Decl(cloduleWithDuplicateMember1.ts, 10, 1))

    export var x = 1;
>x : Symbol(x, Decl(cloduleWithDuplicateMember1.ts, 9, 14))
}
namespace C {
>C : Symbol(C, Decl(cloduleWithDuplicateMember1.ts, 0, 0), Decl(cloduleWithDuplicateMember1.ts, 6, 1), Decl(cloduleWithDuplicateMember1.ts, 10, 1))

    export function foo() { }
>foo : Symbol(foo, Decl(cloduleWithDuplicateMember1.ts, 11, 13))

    export function x() { }
>x : Symbol(x, Decl(cloduleWithDuplicateMember1.ts, 12, 29))
}
