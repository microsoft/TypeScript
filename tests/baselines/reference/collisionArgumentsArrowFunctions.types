//// [tests/cases/compiler/collisionArgumentsArrowFunctions.ts] ////

=== collisionArgumentsArrowFunctions.ts ===
var f1 = (i: number, ...arguments) => { //arguments is error
>f1 : (i: number, ...arguments: any[]) => void
>   : ^ ^^      ^^^^^         ^^^^^^^^^^^^^^^^
>(i: number, ...arguments) => { //arguments is error    var arguments: any[]; // no error} : (i: number, ...arguments: any[]) => void
>                                                                                          : ^ ^^      ^^^^^         ^^^^^^^^^^^^^^^^
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    var arguments: any[]; // no error
>arguments : any[]
>          : ^^^^^
}
var f12 = (arguments: number, ...rest) => { //arguments is error
>f12 : (arguments: number, ...rest: any[]) => void
>    : ^         ^^      ^^^^^    ^^^^^^^^^^^^^^^^
>(arguments: number, ...rest) => { //arguments is error    var arguments = 10; // no error} : (arguments: number, ...rest: any[]) => void
>                                                                                           : ^         ^^      ^^^^^    ^^^^^^^^^^^^^^^^
>arguments : number
>          : ^^^^^^
>rest : any[]
>     : ^^^^^

    var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
}
var f1NoError = (arguments: number) => { // no error
>f1NoError : (arguments: number) => void
>          : ^         ^^      ^^^^^^^^^
>(arguments: number) => { // no error    var arguments = 10; // no error} : (arguments: number) => void
>                                                                         : ^         ^^      ^^^^^^^^^
>arguments : number
>          : ^^^^^^

    var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
}

var f2 = (...restParameters) => {
>f2 : (...restParameters: any[]) => void
>   : ^^^^              ^^^^^^^^^^^^^^^^
>(...restParameters) => {    var arguments = 10; // No Error} : (...restParameters: any[]) => void
>                                                             : ^^^^              ^^^^^^^^^^^^^^^^
>restParameters : any[]
>               : ^^^^^

    var arguments = 10; // No Error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
}
var f2NoError = () => {
>f2NoError : () => void
>          : ^^^^^^^^^^
>() => {    var arguments = 10; // no error} : () => void
>                                            : ^^^^^^^^^^

    var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
}
