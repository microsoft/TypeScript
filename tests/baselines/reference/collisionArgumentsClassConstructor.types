//// [tests/cases/compiler/collisionArgumentsClassConstructor.ts] ////

=== collisionArgumentsClassConstructor.ts ===
// Constructors
class c1 {
>c1 : c1
>   : ^^

    constructor(i: number, ...arguments) { // error
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

        var arguments: any[]; // no error
>arguments : any[]
>          : ^^^^^
    }
}
class c12 {
>c12 : c12
>    : ^^^

    constructor(arguments: number, ...rest) { // error
>arguments : number
>          : ^^^^^^
>rest : any[]
>     : ^^^^^

        var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
    }
}
class c1NoError {
>c1NoError : c1NoError
>          : ^^^^^^^^^

    constructor(arguments: number) { // no error
>arguments : number
>          : ^^^^^^

        var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
    }
}

class c2 {
>c2 : c2
>   : ^^

    constructor(...restParameters) {
>restParameters : any[]
>               : ^^^^^

        var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
    }
}
class c2NoError {
>c2NoError : c2NoError
>          : ^^^^^^^^^

    constructor() {
        var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
    }
}

class c3 {
>c3 : c3
>   : ^^

    constructor(public arguments: number, ...restParameters) { //arguments is error
>arguments : number
>          : ^^^^^^
>restParameters : any[]
>               : ^^^^^

        var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
    }
}
class c3NoError {
>c3NoError : c3NoError
>          : ^^^^^^^^^

    constructor(public arguments: number) { // no error
>arguments : number
>          : ^^^^^^

        var arguments = 10; // no error
>arguments : number
>          : ^^^^^^
>10 : 10
>   : ^^
    }
}

declare class c4 {
>c4 : c4
>   : ^^

    constructor(i: number, ...arguments); // No error - no code gen
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^
}
declare class c42 {
>c42 : c42
>    : ^^^

    constructor(arguments: number, ...rest); // No error - no code gen
>arguments : number
>          : ^^^^^^
>rest : any[]
>     : ^^^^^
}
declare class c4NoError {
>c4NoError : c4NoError
>          : ^^^^^^^^^

    constructor(arguments: number);  // no error
>arguments : number
>          : ^^^^^^
}

class c5 {
>c5 : c5
>   : ^^

    constructor(i: number, ...arguments); // no codegen no error
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    constructor(i: string, ...arguments); // no codegen no error
>i : string
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    constructor(i: any, ...arguments) { // error
>i : any
>  : ^^^
>arguments : any[]
>          : ^^^^^

        var arguments: any[]; // no error
>arguments : any[]
>          : ^^^^^
    }
}

class c52 {
>c52 : c52
>    : ^^^

    constructor(arguments: number, ...rest); // no codegen no error
>arguments : number
>          : ^^^^^^
>rest : any[]
>     : ^^^^^

    constructor(arguments: string, ...rest); // no codegen no error
>arguments : string
>          : ^^^^^^
>rest : any[]
>     : ^^^^^

    constructor(arguments: any, ...rest) { // error
>arguments : any
>          : ^^^
>rest : any[]
>     : ^^^^^

        var arguments: any; // no error
>arguments : any
>          : ^^^
    }
}

class c5NoError {
>c5NoError : c5NoError
>          : ^^^^^^^^^

    constructor(arguments: number); // no error
>arguments : number
>          : ^^^^^^

    constructor(arguments: string); // no error
>arguments : string
>          : ^^^^^^

    constructor(arguments: any) { // no error
>arguments : any
>          : ^^^

        var arguments: any; // no error
>arguments : any
>          : ^^^
    }
}

declare class c6 {
>c6 : c6
>   : ^^

    constructor(i: number, ...arguments); // no codegen no error
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    constructor(i: string, ...arguments); // no codegen no error
>i : string
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^
}
declare class c62 {
>c62 : c62
>    : ^^^

    constructor(arguments: number, ...rest); // no codegen no error
>arguments : number
>          : ^^^^^^
>rest : any[]
>     : ^^^^^

    constructor(arguments: string, ...rest); // no codegen no error
>arguments : string
>          : ^^^^^^
>rest : any[]
>     : ^^^^^
}

declare class c6NoError {
>c6NoError : c6NoError
>          : ^^^^^^^^^

    constructor(arguments: number); // no error
>arguments : number
>          : ^^^^^^

    constructor(arguments: string); // no error
>arguments : string
>          : ^^^^^^
}
