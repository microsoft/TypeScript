//// [tests/cases/compiler/collisionArgumentsInType.ts] ////

=== collisionArgumentsInType.ts ===
var v1: (i: number, ...arguments) => void; // no error - no code gen
>v1 : (i: number, ...arguments: any[]) => void
>   : ^ ^^      ^^^^^         ^^^^^^^^^^^^    
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

var v12: (arguments: number, ...restParameters) => void; // no error - no code gen
>v12 : (arguments: number, ...restParameters: any[]) => void
>    : ^         ^^      ^^^^^              ^^^^^^^^^^^^    
>arguments : number
>          : ^^^^^^
>restParameters : any[]
>               : ^^^^^

var v2: {
>v2 : { (arguments: number, ...restParameters: any[]): any; new (arguments: number, ...restParameters: any[]): any; foo(arguments: number, ...restParameters: any[]): any; prop: (arguments: number, ...restParameters: any) => void; }
>   : ^^^         ^^      ^^^^^              ^^^^^^^^^^^^^^^^^^^^         ^^      ^^^^^              ^^^^^^^^^^^^^^^^^^^         ^^      ^^^^^              ^^^^^^^^^^^^^^^^^^^^^                                       ^^^         ^^^

    (arguments: number, ...restParameters); // no error - no code gen
>arguments : number
>          : ^^^^^^
>restParameters : any[]
>               : ^^^^^

    new (arguments: number, ...restParameters); // no error - no code gen
>arguments : number
>          : ^^^^^^
>restParameters : any[]
>               : ^^^^^

    foo(arguments: number, ...restParameters); // no error - no code gen
>foo : (arguments: number, ...restParameters: any[]) => any
>    : ^         ^^      ^^^^^              ^^^^^^^^^^^^^^^
>arguments : number
>          : ^^^^^^
>restParameters : any[]
>               : ^^^^^

    prop: (arguments: number, ...restParameters) => void; // no error - no code gen
>prop : (arguments: number, ...restParameters: any[]) => void
>     : ^         ^^      ^^^^^              ^^^^^^^^^^^^    
>arguments : number
>          : ^^^^^^
>restParameters : any[]
>               : ^^^^^
}
var v21: {
>v21 : { (i: number, ...arguments: any[]): any; new (i: number, ...arguments: any[]): any; foo(i: number, ...arguments: any[]): any; prop: (i: number, ...arguments: any) => void; }
>    : ^^^ ^^      ^^^^^         ^^^^^^^^^^^^^^^^^^^^ ^^      ^^^^^         ^^^^^^^^^^^^^^^^^^^ ^^      ^^^^^         ^^^^^^^^^^^^^^^^^^^^^                          ^^^         ^^^

    (i: number, ...arguments); // no error - no code gen
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    new (i: number, ...arguments); // no error - no code gen
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    foo(i: number, ...arguments); // no error - no code gen
>foo : (i: number, ...arguments: any[]) => any
>    : ^ ^^      ^^^^^         ^^^^^^^^^^^^^^^
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^

    prop: (i: number, ...arguments) => void; // no error - no code gen
>prop : (i: number, ...arguments: any[]) => void
>     : ^ ^^      ^^^^^         ^^^^^^^^^^^^    
>i : number
>  : ^^^^^^
>arguments : any[]
>          : ^^^^^
}
