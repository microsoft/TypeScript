//// [tests/cases/compiler/collisionCodeGenModuleWithAccessorChildren.ts] ////

=== collisionCodeGenModuleWithAccessorChildren.ts ===
module M {
>M : typeof M
>  : ^^^^^^^^

    export var x = 3;
>x : number
>  : ^^^^^^
>3 : 3
>  : ^

    class c {
>c : c
>  : ^

        private y;
>y : any

        set Z(M) {
>Z : any
>M : any

            this.y = x;
>this.y = x : number
>           : ^^^^^^
>this.y : any
>this : this
>     : ^^^^
>y : any
>  : ^^^
>x : number
>  : ^^^^^^
        }
    }
}

module M {
>M : typeof M
>  : ^^^^^^^^

    class d {
>d : d
>  : ^

        private y;
>y : any

        set Z(p) {
>Z : any
>p : any

            var M = 10;
>M : number
>  : ^^^^^^
>10 : 10
>   : ^^

            this.y = x;
>this.y = x : number
>           : ^^^^^^
>this.y : any
>this : this
>     : ^^^^
>y : any
>  : ^^^
>x : number
>  : ^^^^^^
        }
    }
}

module M { // Shouldnt be _M
>M : typeof M
>  : ^^^^^^^^

    class e {
>e : e
>  : ^

        private y;
>y : any

        set M(p) {
>M : any
>p : any

            this.y = x;
>this.y = x : number
>           : ^^^^^^
>this.y : any
>this : this
>     : ^^^^
>y : any
>  : ^^^
>x : number
>  : ^^^^^^
        }
    }
}

module M {
>M : typeof M
>  : ^^^^^^^^

    class f {
>f : f
>  : ^

        get Z() {
>Z : number
>  : ^^^^^^

            var M = 10;
>M : number
>  : ^^^^^^
>10 : 10
>   : ^^

            return x;
>x : number
>  : ^^^^^^
        }
    }
}

module M { // Shouldnt be _M
>M : typeof M
>  : ^^^^^^^^

    class e {
>e : e
>  : ^

        get M() {
>M : number
>  : ^^^^^^

            return x;
>x : number
>  : ^^^^^^
        }
    }
}
