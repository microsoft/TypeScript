//// [tests/cases/compiler/collisionCodeGenModuleWithMethodChildren.ts] ////

=== collisionCodeGenModuleWithMethodChildren.ts ===
namespace M {
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 0, 0), Decl(collisionCodeGenModuleWithMethodChildren.ts, 5, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 14, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 24, 1))

    export var x = 3;
>x : Symbol(x, Decl(collisionCodeGenModuleWithMethodChildren.ts, 1, 14))

    class c {
>c : Symbol(c, Decl(collisionCodeGenModuleWithMethodChildren.ts, 1, 21))

        fn(M, p = x) { }
>fn : Symbol(c.fn, Decl(collisionCodeGenModuleWithMethodChildren.ts, 2, 13))
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 3, 11))
>p : Symbol(p, Decl(collisionCodeGenModuleWithMethodChildren.ts, 3, 13))
>x : Symbol(x, Decl(collisionCodeGenModuleWithMethodChildren.ts, 1, 14))
    }
}

namespace M {
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 0, 0), Decl(collisionCodeGenModuleWithMethodChildren.ts, 5, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 14, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 24, 1))

    class d {
>d : Symbol(d, Decl(collisionCodeGenModuleWithMethodChildren.ts, 7, 13))

        fn2() {
>fn2 : Symbol(d.fn2, Decl(collisionCodeGenModuleWithMethodChildren.ts, 8, 13))

            var M;
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 10, 15))

            var p = x;
>p : Symbol(p, Decl(collisionCodeGenModuleWithMethodChildren.ts, 11, 15))
>x : Symbol(x, Decl(collisionCodeGenModuleWithMethodChildren.ts, 1, 14))
        }
    }
}

namespace M {
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 0, 0), Decl(collisionCodeGenModuleWithMethodChildren.ts, 5, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 14, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 24, 1))

    class e {
>e : Symbol(e, Decl(collisionCodeGenModuleWithMethodChildren.ts, 16, 13))

        fn3() {
>fn3 : Symbol(e.fn3, Decl(collisionCodeGenModuleWithMethodChildren.ts, 17, 13))

            function M() {
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 18, 15))

                var p = x;
>p : Symbol(p, Decl(collisionCodeGenModuleWithMethodChildren.ts, 20, 19))
>x : Symbol(x, Decl(collisionCodeGenModuleWithMethodChildren.ts, 1, 14))
            }
        }
    }
}

namespace M { // Shouldnt bn _M
>M : Symbol(M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 0, 0), Decl(collisionCodeGenModuleWithMethodChildren.ts, 5, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 14, 1), Decl(collisionCodeGenModuleWithMethodChildren.ts, 24, 1))

    class f {
>f : Symbol(f, Decl(collisionCodeGenModuleWithMethodChildren.ts, 26, 13))

        M() {
>M : Symbol(f.M, Decl(collisionCodeGenModuleWithMethodChildren.ts, 27, 13))
        }
    }
}
