//// [tests/cases/compiler/collisionRestParameterInType.ts] ////

=== collisionRestParameterInType.ts ===
var v1: (_i: number, ...restParameters) => void; // no error - no code gen
>v1 : (_i: number, ...restParameters: any[]) => void
>   : ^  ^^      ^^^^^              ^^^^^^^^^^^^    
>_i : number
>   : ^^^^^^
>restParameters : any[]
>               : ^^^^^

var v2: {
>v2 : { (_i: number, ...restParameters: any[]): any; new (_i: number, ...restParameters: any[]): any; foo(_i: number, ...restParameters: any[]): any; prop: (_i: number, ...restParameters: any) => void; }
>   : ^^^  ^^      ^^^^^              ^^^^^^^^^^^^^^^^^^^^  ^^      ^^^^^              ^^^^^^^^^^^^^^^^^^^  ^^      ^^^^^              ^^^^^^^^^^^^^^^^^^^^^                                ^^^         ^^^

    (_i: number, ...restParameters); // no error - no code gen
>_i : number
>   : ^^^^^^
>restParameters : any[]
>               : ^^^^^

    new (_i: number, ...restParameters); // no error - no code gen
>_i : number
>   : ^^^^^^
>restParameters : any[]
>               : ^^^^^

    foo(_i: number, ...restParameters); // no error - no code gen
>foo : (_i: number, ...restParameters: any[]) => any
>    : ^  ^^      ^^^^^              ^^^^^^^^^^^^^^^
>_i : number
>   : ^^^^^^
>restParameters : any[]
>               : ^^^^^

    prop: (_i: number, ...restParameters) => void; // no error - no code gen
>prop : (_i: number, ...restParameters: any[]) => void
>     : ^  ^^      ^^^^^              ^^^^^^^^^^^^    
>_i : number
>   : ^^^^^^
>restParameters : any[]
>               : ^^^^^
}
