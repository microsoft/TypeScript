//// [tests/cases/compiler/collisionThisExpressionAndLocalVarInAccessors.ts] ////

=== collisionThisExpressionAndLocalVarInAccessors.ts ===
class class1 {
>class1 : class1
>       : ^^^^^^

    get a(): number {
>a : number
>  : ^^^^^^

        var x2 = {
>x2 : { doStuff: (callback: any) => () => any; }
>   : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^
>{            doStuff: (callback) => () => {                var _this = 2;                return callback(this);            }        } : { doStuff: (callback: any) => () => any; }
>                                                                                                                                      : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^

            doStuff: (callback) => () => {
>doStuff : (callback: any) => () => any
>        : ^        ^^^^^^^^^^^^^^^^^^^
>(callback) => () => {                var _this = 2;                return callback(this);            } : (callback: any) => () => any
>                                                                                                       : ^        ^^^^^^^^^^^^^^^^^^^
>callback : any
>() => {                var _this = 2;                return callback(this);            } : () => any
>                                                                                         : ^^^^^^^^^

                var _this = 2;
>_this : number
>      : ^^^^^^
>2 : 2
>  : ^

                return callback(this);
>callback(this) : any
>callback : any
>this : this
>     : ^^^^
            }
        }

        return 10;
>10 : 10
>   : ^^
    }
    set a(val: number) {
>a : number
>  : ^^^^^^
>val : number
>    : ^^^^^^

        var x2 = {
>x2 : { doStuff: (callback: any) => () => any; }
>   : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^
>{            doStuff: (callback) => () => {                var _this = 2;                return callback(this);            }        } : { doStuff: (callback: any) => () => any; }
>                                                                                                                                      : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^

            doStuff: (callback) => () => {
>doStuff : (callback: any) => () => any
>        : ^        ^^^^^^^^^^^^^^^^^^^
>(callback) => () => {                var _this = 2;                return callback(this);            } : (callback: any) => () => any
>                                                                                                       : ^        ^^^^^^^^^^^^^^^^^^^
>callback : any
>() => {                var _this = 2;                return callback(this);            } : () => any
>                                                                                         : ^^^^^^^^^

                var _this = 2;
>_this : number
>      : ^^^^^^
>2 : 2
>  : ^

                return callback(this);
>callback(this) : any
>callback : any
>this : this
>     : ^^^^
            }
        }

    }
}

class class2 {
>class2 : class2
>       : ^^^^^^

    get a(): number {
>a : number
>  : ^^^^^^

        var _this = 2;
>_this : number
>      : ^^^^^^
>2 : 2
>  : ^

        var x2 = {
>x2 : { doStuff: (callback: any) => () => any; }
>   : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^
>{            doStuff: (callback) => () => {                return callback(this);            }        } : { doStuff: (callback: any) => () => any; }
>                                                                                                        : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^

            doStuff: (callback) => () => {
>doStuff : (callback: any) => () => any
>        : ^        ^^^^^^^^^^^^^^^^^^^
>(callback) => () => {                return callback(this);            } : (callback: any) => () => any
>                                                                         : ^        ^^^^^^^^^^^^^^^^^^^
>callback : any
>() => {                return callback(this);            } : () => any
>                                                           : ^^^^^^^^^

                return callback(this);
>callback(this) : any
>callback : any
>this : this
>     : ^^^^
            }
        }

        return 10;
>10 : 10
>   : ^^
    }
    set a(val: number) {
>a : number
>  : ^^^^^^
>val : number
>    : ^^^^^^

        var _this = 2;
>_this : number
>      : ^^^^^^
>2 : 2
>  : ^

        var x2 = {
>x2 : { doStuff: (callback: any) => () => any; }
>   : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^
>{            doStuff: (callback) => () => {                return callback(this);            }        } : { doStuff: (callback: any) => () => any; }
>                                                                                                        : ^^^^^^^^^^^^        ^^^^^^^^^^^^^^^^^^^^^^

            doStuff: (callback) => () => {
>doStuff : (callback: any) => () => any
>        : ^        ^^^^^^^^^^^^^^^^^^^
>(callback) => () => {                return callback(this);            } : (callback: any) => () => any
>                                                                         : ^        ^^^^^^^^^^^^^^^^^^^
>callback : any
>() => {                return callback(this);            } : () => any
>                                                           : ^^^^^^^^^

                return callback(this);
>callback(this) : any
>callback : any
>this : this
>     : ^^^^
            }
        }

    }
}
