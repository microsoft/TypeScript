//// [tests/cases/compiler/commentsModules.ts] ////

=== commentsModules.ts ===
/** Module comment*/
namespace m1 {
>m1 : Symbol(m1, Decl(commentsModules.ts, 0, 0))

    /** b's comment*/
    export var b: number;
>b : Symbol(b, Decl(commentsModules.ts, 3, 14))

    /** foo's comment*/
    function foo() {
>foo : Symbol(foo, Decl(commentsModules.ts, 3, 25))

        return b;
>b : Symbol(b, Decl(commentsModules.ts, 3, 14))
    }
    /** m2 comments*/
    export namespace m2 {
>m2 : Symbol(m2, Decl(commentsModules.ts, 7, 5))

        /** class comment;*/
        export class c {
>c : Symbol(c, Decl(commentsModules.ts, 9, 25))

        };
        /** i*/
        export var i = new c();
>i : Symbol(i, Decl(commentsModules.ts, 14, 18))
>c : Symbol(c, Decl(commentsModules.ts, 9, 25))
    }
    /** exported function*/
    export function fooExport() {
>fooExport : Symbol(fooExport, Decl(commentsModules.ts, 15, 5))

        return foo();
>foo : Symbol(foo, Decl(commentsModules.ts, 3, 25))
    }

    // shouldn't appear
    export function foo2Export(/**hm*/ a: string) {
>foo2Export : Symbol(foo2Export, Decl(commentsModules.ts, 19, 5))
>a : Symbol(a, Decl(commentsModules.ts, 22, 31))
    }

    /** foo3Export
     * comment
     */
    export function foo3Export() {
>foo3Export : Symbol(foo3Export, Decl(commentsModules.ts, 23, 5))
    }

    /** foo4Export
     * comment
     */
    function foo4Export() {
>foo4Export : Symbol(foo4Export, Decl(commentsModules.ts, 29, 5))
    }
} // trailing comment module
m1.fooExport();
>m1.fooExport : Symbol(m1.fooExport, Decl(commentsModules.ts, 15, 5))
>m1 : Symbol(m1, Decl(commentsModules.ts, 0, 0))
>fooExport : Symbol(m1.fooExport, Decl(commentsModules.ts, 15, 5))

var myvar = new m1.m2.c();
>myvar : Symbol(myvar, Decl(commentsModules.ts, 38, 3))
>m1.m2.c : Symbol(m1.m2.c, Decl(commentsModules.ts, 9, 25))
>m1.m2 : Symbol(m1.m2, Decl(commentsModules.ts, 7, 5))
>m1 : Symbol(m1, Decl(commentsModules.ts, 0, 0))
>m2 : Symbol(m1.m2, Decl(commentsModules.ts, 7, 5))
>c : Symbol(m1.m2.c, Decl(commentsModules.ts, 9, 25))

/** module comment of m2.m3*/
namespace m2.m3 {
>m2 : Symbol(m2, Decl(commentsModules.ts, 38, 26))
>m3 : Symbol(m3, Decl(commentsModules.ts, 40, 13))

    /** Exported class comment*/
    export class c {
>c : Symbol(c, Decl(commentsModules.ts, 40, 17))
    }
} /* trailing dotted module comment*/
new m2.m3.c();
>m2.m3.c : Symbol(m2.m3.c, Decl(commentsModules.ts, 40, 17))
>m2.m3 : Symbol(m2.m3, Decl(commentsModules.ts, 40, 13))
>m2 : Symbol(m2, Decl(commentsModules.ts, 38, 26))
>m3 : Symbol(m2.m3, Decl(commentsModules.ts, 40, 13))
>c : Symbol(m2.m3.c, Decl(commentsModules.ts, 40, 17))

/** module comment of m3.m4.m5*/
namespace m3.m4.m5 {
>m3 : Symbol(m3, Decl(commentsModules.ts, 45, 14))
>m4 : Symbol(m4, Decl(commentsModules.ts, 47, 13))
>m5 : Symbol(m5, Decl(commentsModules.ts, 47, 16))

    /** Exported class comment*/
    export class c {
>c : Symbol(c, Decl(commentsModules.ts, 47, 20))
    }
} // trailing dotted module 2
new m3.m4.m5.c();
>m3.m4.m5.c : Symbol(m3.m4.m5.c, Decl(commentsModules.ts, 47, 20))
>m3.m4.m5 : Symbol(m3.m4.m5, Decl(commentsModules.ts, 47, 16))
>m3.m4 : Symbol(m3.m4, Decl(commentsModules.ts, 47, 13))
>m3 : Symbol(m3, Decl(commentsModules.ts, 45, 14))
>m4 : Symbol(m3.m4, Decl(commentsModules.ts, 47, 13))
>m5 : Symbol(m3.m4.m5, Decl(commentsModules.ts, 47, 16))
>c : Symbol(m3.m4.m5.c, Decl(commentsModules.ts, 47, 20))

/** module comment of m4.m5.m6*/
namespace m4.m5.m6 {
>m4 : Symbol(m4, Decl(commentsModules.ts, 52, 17))
>m5 : Symbol(m5, Decl(commentsModules.ts, 54, 13))
>m6 : Symbol(m6, Decl(commentsModules.ts, 54, 16))

    export namespace m7 {
>m7 : Symbol(m7, Decl(commentsModules.ts, 54, 20))

        /** Exported class comment*/
        export class c {
>c : Symbol(c, Decl(commentsModules.ts, 55, 25))
        }
    } /* trailing inner module */ /* multiple comments*/
}
new m4.m5.m6.m7.c();
>m4.m5.m6.m7.c : Symbol(m4.m5.m6.m7.c, Decl(commentsModules.ts, 55, 25))
>m4.m5.m6.m7 : Symbol(m4.m5.m6.m7, Decl(commentsModules.ts, 54, 20))
>m4.m5.m6 : Symbol(m4.m5.m6, Decl(commentsModules.ts, 54, 16))
>m4.m5 : Symbol(m4.m5, Decl(commentsModules.ts, 54, 13))
>m4 : Symbol(m4, Decl(commentsModules.ts, 52, 17))
>m5 : Symbol(m4.m5, Decl(commentsModules.ts, 54, 13))
>m6 : Symbol(m4.m5.m6, Decl(commentsModules.ts, 54, 16))
>m7 : Symbol(m4.m5.m6.m7, Decl(commentsModules.ts, 54, 20))
>c : Symbol(m4.m5.m6.m7.c, Decl(commentsModules.ts, 55, 25))

/** module comment of m5.m6.m7*/
namespace m5.m6.m7 {
>m5 : Symbol(m5, Decl(commentsModules.ts, 61, 20))
>m6 : Symbol(m6, Decl(commentsModules.ts, 63, 13))
>m7 : Symbol(m7, Decl(commentsModules.ts, 63, 16))

    /** module m8 comment*/
    export namespace m8 {
>m8 : Symbol(m8, Decl(commentsModules.ts, 63, 20))

        /** Exported class comment*/
        export class c {
>c : Symbol(c, Decl(commentsModules.ts, 65, 25))
        }
    }
}
new m5.m6.m7.m8.c();
>m5.m6.m7.m8.c : Symbol(m5.m6.m7.m8.c, Decl(commentsModules.ts, 65, 25))
>m5.m6.m7.m8 : Symbol(m5.m6.m7.m8, Decl(commentsModules.ts, 63, 20))
>m5.m6.m7 : Symbol(m5.m6.m7, Decl(commentsModules.ts, 63, 16))
>m5.m6 : Symbol(m5.m6, Decl(commentsModules.ts, 63, 13))
>m5 : Symbol(m5, Decl(commentsModules.ts, 61, 20))
>m6 : Symbol(m5.m6, Decl(commentsModules.ts, 63, 13))
>m7 : Symbol(m5.m6.m7, Decl(commentsModules.ts, 63, 16))
>m8 : Symbol(m5.m6.m7.m8, Decl(commentsModules.ts, 63, 20))
>c : Symbol(m5.m6.m7.m8.c, Decl(commentsModules.ts, 65, 25))

namespace m6.m7 {
>m6 : Symbol(m6, Decl(commentsModules.ts, 71, 20))
>m7 : Symbol(m7, Decl(commentsModules.ts, 72, 13))

    export namespace m8 {
>m8 : Symbol(m8, Decl(commentsModules.ts, 72, 17))

        /** Exported class comment*/
        export class c {
>c : Symbol(c, Decl(commentsModules.ts, 73, 25))
        }
    }
}
new m6.m7.m8.c();
>m6.m7.m8.c : Symbol(m6.m7.m8.c, Decl(commentsModules.ts, 73, 25))
>m6.m7.m8 : Symbol(m6.m7.m8, Decl(commentsModules.ts, 72, 17))
>m6.m7 : Symbol(m6.m7, Decl(commentsModules.ts, 72, 13))
>m6 : Symbol(m6, Decl(commentsModules.ts, 71, 20))
>m7 : Symbol(m6.m7, Decl(commentsModules.ts, 72, 13))
>m8 : Symbol(m6.m7.m8, Decl(commentsModules.ts, 72, 17))
>c : Symbol(m6.m7.m8.c, Decl(commentsModules.ts, 73, 25))

namespace m7.m8 {
>m7 : Symbol(m7, Decl(commentsModules.ts, 79, 17))
>m8 : Symbol(m8, Decl(commentsModules.ts, 80, 13))

    /** module m9 comment*/
    export namespace m9 {
>m9 : Symbol(m9, Decl(commentsModules.ts, 80, 17))

        /** Exported class comment*/
        export class c {
>c : Symbol(c, Decl(commentsModules.ts, 82, 25))
        }

        /** class d */
        class d {
>d : Symbol(d, Decl(commentsModules.ts, 85, 9))
        }

        // class e
        export class e {
>e : Symbol(e, Decl(commentsModules.ts, 89, 9))
        }
    }
}
new m7.m8.m9.c();
>m7.m8.m9.c : Symbol(m7.m8.m9.c, Decl(commentsModules.ts, 82, 25))
>m7.m8.m9 : Symbol(m7.m8.m9, Decl(commentsModules.ts, 80, 17))
>m7.m8 : Symbol(m7.m8, Decl(commentsModules.ts, 80, 13))
>m7 : Symbol(m7, Decl(commentsModules.ts, 79, 17))
>m8 : Symbol(m7.m8, Decl(commentsModules.ts, 80, 13))
>m9 : Symbol(m7.m8.m9, Decl(commentsModules.ts, 80, 17))
>c : Symbol(m7.m8.m9.c, Decl(commentsModules.ts, 82, 25))

