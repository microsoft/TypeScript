//// [tests/cases/compiler/commentsMultiModuleMultiFile.ts] ////

=== commentsMultiModuleMultiFile_1.ts ===
import m = require('commentsMultiModuleMultiFile_0');
>m : Symbol(m, Decl(commentsMultiModuleMultiFile_1.ts, 0, 0))

/** this is multi module 3 comment*/
export namespace multiM {
>multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_1.ts, 0, 53))

    /** class d comment*/
    export class d {
>d : Symbol(d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 25))
    }

    /// class f comment
    export class f {
>f : Symbol(f, Decl(commentsMultiModuleMultiFile_1.ts, 5, 5))
    }
}
new multiM.d();
>multiM.d : Symbol(multiM.d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 25))
>multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_1.ts, 0, 53))
>d : Symbol(multiM.d, Decl(commentsMultiModuleMultiFile_1.ts, 2, 25))

=== commentsMultiModuleMultiFile_0.ts ===
/** this is multi declare module*/
export namespace multiM {
>multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))

    /// class b comment
    export class b {
>b : Symbol(b, Decl(commentsMultiModuleMultiFile_0.ts, 1, 25))
    }
}
/** thi is multi module 2*/
export namespace multiM {
>multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))

    /** class c comment*/
    export class c {
>c : Symbol(c, Decl(commentsMultiModuleMultiFile_0.ts, 7, 25))
    }

    // class e comment
    export class e {
>e : Symbol(e, Decl(commentsMultiModuleMultiFile_0.ts, 10, 5))
    }
}

new multiM.b();
>multiM.b : Symbol(multiM.b, Decl(commentsMultiModuleMultiFile_0.ts, 1, 25))
>multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))
>b : Symbol(multiM.b, Decl(commentsMultiModuleMultiFile_0.ts, 1, 25))

new multiM.c();
>multiM.c : Symbol(multiM.c, Decl(commentsMultiModuleMultiFile_0.ts, 7, 25))
>multiM : Symbol(multiM, Decl(commentsMultiModuleMultiFile_0.ts, 0, 0), Decl(commentsMultiModuleMultiFile_0.ts, 5, 1))
>c : Symbol(multiM.c, Decl(commentsMultiModuleMultiFile_0.ts, 7, 25))

