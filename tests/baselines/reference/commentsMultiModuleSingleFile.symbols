//// [tests/cases/compiler/commentsMultiModuleSingleFile.ts] ////

=== commentsMultiModuleSingleFile.ts ===
/** this is multi declare module*/
namespace multiM {
>multiM : Symbol(multiM, Decl(commentsMultiModuleSingleFile.ts, 0, 0), Decl(commentsMultiModuleSingleFile.ts, 9, 1))

    /** class b*/
    export class b {
>b : Symbol(b, Decl(commentsMultiModuleSingleFile.ts, 1, 18))
    }

    // class d
    export class d {
>d : Symbol(d, Decl(commentsMultiModuleSingleFile.ts, 4, 5))
    }
}

/// this is multi module 2
namespace multiM {
>multiM : Symbol(multiM, Decl(commentsMultiModuleSingleFile.ts, 0, 0), Decl(commentsMultiModuleSingleFile.ts, 9, 1))

    /** class c comment*/
    export class c {
>c : Symbol(c, Decl(commentsMultiModuleSingleFile.ts, 12, 18))
    }

    /// class e
    export class e {
>e : Symbol(e, Decl(commentsMultiModuleSingleFile.ts, 15, 5))
    }
}
new multiM.b();
>multiM.b : Symbol(multiM.b, Decl(commentsMultiModuleSingleFile.ts, 1, 18))
>multiM : Symbol(multiM, Decl(commentsMultiModuleSingleFile.ts, 0, 0), Decl(commentsMultiModuleSingleFile.ts, 9, 1))
>b : Symbol(multiM.b, Decl(commentsMultiModuleSingleFile.ts, 1, 18))

new multiM.c();
>multiM.c : Symbol(multiM.c, Decl(commentsMultiModuleSingleFile.ts, 12, 18))
>multiM : Symbol(multiM, Decl(commentsMultiModuleSingleFile.ts, 0, 0), Decl(commentsMultiModuleSingleFile.ts, 9, 1))
>c : Symbol(multiM.c, Decl(commentsMultiModuleSingleFile.ts, 12, 18))

