//// [tests/cases/compiler/comparableRelationBidirectional.ts] ////

=== comparableRelationBidirectional.ts ===
enum AutomationMode {
>AutomationMode : AutomationMode
>               : ^^^^^^^^^^^^^^

    NONE = "",
>NONE : AutomationMode.NONE
>     : ^^^^^^^^^^^^^^^^^^^
>"" : ""
>   : ^^

    TIME = "time",
>TIME : AutomationMode.TIME
>     : ^^^^^^^^^^^^^^^^^^^
>"time" : "time"
>       : ^^^^^^

    SYSTEM = "system",
>SYSTEM : AutomationMode.SYSTEM
>       : ^^^^^^^^^^^^^^^^^^^^^
>"system" : "system"
>         : ^^^^^^^^

    LOCATION = "location",
>LOCATION : AutomationMode.LOCATION
>         : ^^^^^^^^^^^^^^^^^^^^^^^
>"location" : "location"
>           : ^^^^^^^^^^
}

interface ThemePreset {
    id: string;
>id : string
>   : ^^^^^^
}

interface Automation {
    mode: AutomationMode;
>mode : AutomationMode
>     : ^^^^^^^^^^^^^^
}

interface UserSettings {
    presets: ThemePreset[];
>presets : ThemePreset[]
>        : ^^^^^^^^^^^^^

    automation: Automation;
>automation : Automation
>           : ^^^^^^^^^^
}

interface ExtensionData {
    settings: UserSettings;
>settings : UserSettings
>         : ^^^^^^^^^^^^
}

export function getMockData(): ExtensionData {
>getMockData : () => ExtensionData
>            : ^^^^^^             

    return {
>{        settings: {            presets: [],            automation: {                mode: "",            },        } as UserSettings,    } : { settings: UserSettings; }
>                                                                                                                                            : ^^^^^^^^^^^^            ^^^

        settings: {
>settings : UserSettings
>         : ^^^^^^^^^^^^
>{            presets: [],            automation: {                mode: "",            },        } as UserSettings : UserSettings
>                                                                                                                   : ^^^^^^^^^^^^
>{            presets: [],            automation: {                mode: "",            },        } : { presets: never[]; automation: { mode: ""; }; }
>                                                                                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

            presets: [],
>presets : never[]
>        : ^^^^^^^
>[] : never[]
>   : ^^^^^^^

            automation: {
>automation : { mode: ""; }
>           : ^^^^^^^^^^^^^
>{                mode: "",            } : { mode: ""; }
>                                        : ^^^^^^^^^^^^^

                mode: "",
>mode : ""
>     : ^^
>"" : ""
>   : ^^

            },
        } as UserSettings,
    }
}

