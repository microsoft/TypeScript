//// [tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithIdenticalTypeParameter.ts] ////

=== comparisonOperatorWithIdenticalTypeParameter.ts ===
function foo<T>(t: T) {
>foo : <T>(t: T) => void
>    : ^ ^^ ^^ ^^^^^^^^^
>t : T
>  : ^

    var r1 = t < t;
>r1 : boolean
>   : ^^^^^^^
>t < t : boolean
>      : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r2 = t > t;
>r2 : boolean
>   : ^^^^^^^
>t > t : boolean
>      : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r3 = t <= t;
>r3 : boolean
>   : ^^^^^^^
>t <= t : boolean
>       : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r4 = t >= t;
>r4 : boolean
>   : ^^^^^^^
>t >= t : boolean
>       : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r5 = t == t;
>r5 : boolean
>   : ^^^^^^^
>t == t : boolean
>       : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r6 = t != t;
>r6 : boolean
>   : ^^^^^^^
>t != t : boolean
>       : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r7 = t === t;
>r7 : boolean
>   : ^^^^^^^
>t === t : boolean
>        : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^

    var r8 = t !== t;
>r8 : boolean
>   : ^^^^^^^
>t !== t : boolean
>        : ^^^^^^^
>t : T
>  : ^
>t : T
>  : ^
}
