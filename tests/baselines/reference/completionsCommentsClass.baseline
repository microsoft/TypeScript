// === Completions ===
=== /tests/cases/fourslash/completionsCommentsClass.ts ===
// /** This is class c2 without constructor*/
// class c2 {
// }
// var i2 = new c2();
// var i2_c = c2;
// class c3 {
//     /** Constructor comment*/
//     constructor() {
//     }
// }
// var i3 = new c3();
// var i3_c = c3;
// /** Class comment*/
// class c4 {
//     /** Constructor comment*/
//     constructor() {
//     }
// }
// var i4 = new c4();
// var i4_c = c4;
// /** Class with statics*/
// class c5 {
//     static s1: number;
// }
// var i5 = new c5();
// var i5_c = c5;
// /** class with statics and constructor*/
// class c6 {
//     /** s1 comment*/
//     static s1: number;
//     /** constructor comment*/
//     constructor() {
//     }
// }
// var i6 = new c6();
// var i6_c = c6;
// 
// ^
// | ----------------------------------------------------------------------
// | class a
// | class c2
// | class c3
// | class c4
// | class c5
// | class c6
// | var i2: c2
// | var i2_c: typeof c2
// | var i3: c3
// | var i3_c: typeof c3
// | var i4: c4
// | var i4_c: typeof c4
// | var i5: c5
// | var i5_c: typeof c5
// | var i6: c6
// | var i6_c: typeof c6
// | namespace m
// | var myVar: m.m2.c1
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// class a {
//     /**
//     constructor for a
//     @param a this is my a
//     */
//     constructor(a: string) {
//     }
// }
// new a("Hello");
// module m {
//     export module m2 {
//         /** class comment */
//         export class c1 {
//             /** constructor comment*/
//             constructor() {
//             }
//         }
//     }
// }
// var myVar = new m.m2.c1();

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClass.ts",
      "position": 599,
      "name": "26"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "a",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "c2",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c2",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is class c2 without constructor",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c3",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c3",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "c4",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c4",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "Class comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c5",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c5",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "Class with statics",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c6",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c6",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "class with statics and constructor",
              "kind": "text"
            }
          ]
        },
        {
          "name": "i2",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c2",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i2_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i2_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c2",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i3",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c3",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i3_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i3_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c3",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i4",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c4",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i4_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i4_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c4",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i5",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c5",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i5_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i5_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c5",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i6",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c6",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i6_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i6_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c6",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "m",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "m",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "myVar",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "myVar",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "m",
              "kind": "moduleName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "m2",
              "kind": "moduleName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  }
]