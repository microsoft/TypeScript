// === Completions ===
=== /tests/cases/fourslash/completionsCommentsClassMembers.ts ===
// /** This is comment for c1*/
// class c1 {
//     /** p1 is property of c1*/
//     public p1: number;
//     /** sum with property*/
//     public p2(/** number to add*/b: number) {
//         return this.p1 + b;
//                     ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                          ^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     /** getter property 1*/
//     public get p3() {
//         return this.p2(this.p1);
//                     ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                             ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//     }
//     /** setter property 1*/
//     public set p3(/** this is value*/value: number) {
//         this.p1 = this.p2(value);
//              ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                        ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                           ^^^^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     /** pp1 is property of c1*/
//     private pp1: number;
//     /** sum with property*/
//     private pp2(/** number to add*/b: number) {
//         return this.p1 + b;
//                     ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                          ^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     /** getter property 2*/
//     private get pp3() {
//         return this.pp2(this.pp1);
//                     ^^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                              ^^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//     }
//     /** setter property 2*/
//     private set pp3( /** this is value*/value: number) {
//         this.pp1 = this.pp2(value);
//              ^^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                         ^^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.nc_pp1: number
// | (method) c1.nc_pp2(b: number): number
// | (property) c1.nc_pp3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | (property) c1.pp1: number
// | (method) c1.pp2(b: number): number
// | (property) c1.pp3: number
// | ----------------------------------------------------------------------
//                             ^^^^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     /** Constructor method*/
//     constructor() {
//     }
//     /** s1 is static property of c1*/
//     static s1: number;
//     /** static sum with property*/
//     static s2(/** number to add*/b: number) {
//         return c1.s1 + b;
//                ^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//                   ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_s1: number
// | (method) c1.nc_s2(b: number): number
// | (property) c1.nc_s3: number
// | (property) c1.s1: number
// | (method) c1.s2(b: number): number
// | (property) c1.s3: number
// | (method) Function.apply(this: Function, thisArg: any, argArray?: any): any
// | (property) Function.arguments: any
// | (method) Function.bind(this: Function, thisArg: any, ...argArray: any[]): any
// | (method) Function.call(this: Function, thisArg: any, ...argArray: any[]): any
// | (property) Function.caller: Function
// | (property) Function.length: number
// | (property) c1.prototype: c1
// | (method) Function.toString(): string
// | ----------------------------------------------------------------------
//                        ^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     /** static getter property*/
//     static get s3() {
//         return c1.s2(c1.s1);
//                ^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//                   ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_s1: number
// | (method) c1.nc_s2(b: number): number
// | (property) c1.nc_s3: number
// | (property) c1.s1: number
// | (method) c1.s2(b: number): number
// | (property) c1.s3: number
// | (method) Function.apply(this: Function, thisArg: any, argArray?: any): any
// | (property) Function.arguments: any
// | (method) Function.bind(this: Function, thisArg: any, ...argArray: any[]): any
// | (method) Function.call(this: Function, thisArg: any, ...argArray: any[]): any
// | (property) Function.caller: Function
// | (property) Function.length: number
// | (property) c1.prototype: c1
// | (method) Function.toString(): string
// | ----------------------------------------------------------------------
//                      ^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//                         ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_s1: number
// | (method) c1.nc_s2(b: number): number
// | (property) c1.nc_s3: number
// | (property) c1.s1: number
// | (method) c1.s2(b: number): number
// | (property) c1.s3: number
// | (method) Function.apply(this: Function, thisArg: any, argArray?: any): any
// | (property) Function.arguments: any
// | (method) Function.bind(this: Function, thisArg: any, ...argArray: any[]): any
// | (method) Function.call(this: Function, thisArg: any, ...argArray: any[]): any
// | (property) Function.caller: Function
// | (property) Function.length: number
// | (property) c1.prototype: c1
// | (method) Function.toString(): string
// | ----------------------------------------------------------------------
//     }
//     /** setter property 3*/
//     static set s3( /** this is value*/value: number) {
//         c1.s1 = c1.s2(value);
//         ^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//            ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_s1: number
// | (method) c1.nc_s2(b: number): number
// | (property) c1.nc_s3: number
// | (property) c1.s1: number
// | (method) c1.s2(b: number): number
// | (property) c1.s3: number
// | (method) Function.apply(this: Function, thisArg: any, argArray?: any): any
// | (property) Function.arguments: any
// | (method) Function.bind(this: Function, thisArg: any, ...argArray: any[]): any
// | (method) Function.call(this: Function, thisArg: any, ...argArray: any[]): any
// | (property) Function.caller: Function
// | (property) Function.length: number
// | (property) c1.prototype: c1
// | (method) Function.toString(): string
// | ----------------------------------------------------------------------
//                 ^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//                    ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_s1: number
// | (method) c1.nc_s2(b: number): number
// | (property) c1.nc_s3: number
// | (property) c1.s1: number
// | (method) c1.s2(b: number): number
// | (property) c1.s3: number
// | (method) Function.apply(this: Function, thisArg: any, argArray?: any): any
// | (property) Function.arguments: any
// | (method) Function.bind(this: Function, thisArg: any, ...argArray: any[]): any
// | (method) Function.call(this: Function, thisArg: any, ...argArray: any[]): any
// | (property) Function.caller: Function
// | (property) Function.length: number
// | (property) c1.prototype: c1
// | (method) Function.toString(): string
// | ----------------------------------------------------------------------
//                       ^^^^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     public nc_p1: number;
//     public nc_p2(b: number) {
//         return this.nc_p1 + b;
//                             ^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     public get nc_p3() {
//         return this.nc_p2(this.nc_p1);
//     }
//     public set nc_p3(value: number) {
//         this.nc_p1 = this.nc_p2(value);
//                                 ^^^^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     private nc_pp1: number;
//     private nc_pp2(b: number) {
//         return this.nc_pp1 + b;
//                              ^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     private get nc_pp3() {
//         return this.nc_pp2(this.nc_pp1);
//     }
//     private set nc_pp3(value: number) {
//         this.nc_pp1 = this.nc_pp2(value);
//                                   ^^^^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     static nc_s1: number;
//     static nc_s2(b: number) {
//         return c1.nc_s1 + b;
//                           ^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | (parameter) b: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
//     static get nc_s3() {
//         return c1.nc_s2(c1.nc_s1);
//     }
//     static set nc_s3(value: number) {
//         c1.nc_s1 = c1.nc_s2(value);
//                             ^^^^^
// | ----------------------------------------------------------------------
// | (local var) arguments: IArguments
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | (parameter) value: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
// }
// var i1 = new c1();
// var i1_p = i1.p1;
//               ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_p1: number
// | (method) c1.nc_p2(b: number): number
// | (property) c1.nc_p3: number
// | (property) c1.p1: number
// | (method) c1.p2(b: number): number
// | (property) c1.p3: number
// | ----------------------------------------------------------------------
// var i1_f = i1.p2;
// var i1_r = i1.p2(20);
// var i1_prop = i1.p3;
// i1.p3 = i1_prop;
// var i1_nc_p = i1.nc_p1;
// var i1_ncf = i1.nc_p2;
// var i1_ncr = i1.nc_p2(20);
// var i1_ncprop = i1.nc_p3;
// i1.nc_p3 = i1_ncprop;
// var i1_s_p = c1.s1;
//              ^^
// | ----------------------------------------------------------------------
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//                 ^^
// | ----------------------------------------------------------------------
// | (property) c1.nc_s1: number
// | (method) c1.nc_s2(b: number): number
// | (property) c1.nc_s3: number
// | (property) c1.s1: number
// | (method) c1.s2(b: number): number
// | (property) c1.s3: number
// | (method) Function.apply(this: Function, thisArg: any, argArray?: any): any
// | (property) Function.arguments: any
// | (method) Function.bind(this: Function, thisArg: any, ...argArray: any[]): any
// | (method) Function.call(this: Function, thisArg: any, ...argArray: any[]): any
// | (property) Function.caller: Function
// | (property) Function.length: number
// | (property) c1.prototype: c1
// | (method) Function.toString(): string
// | ----------------------------------------------------------------------
// var i1_s_f = c1.s2;
// var i1_s_r = c1.s2(20);
// var i1_s_prop = c1.s3;
// c1.s3 = i1_s_prop;
// var i1_s_nc_p = c1.nc_s1;
// var i1_s_ncf = c1.nc_s2;
// var i1_s_ncr = c1.nc_s2(20);
// var i1_s_ncprop = c1.nc_s3;
// c1.nc_s3 = i1_s_ncprop;
// var i1_c = c1;
// 
// ^
// | ----------------------------------------------------------------------
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// class cProperties {
//     private val: number;
//     /** getter only property*/
//     public get p1() {
//         return this.val;
//     }
//     public get nc_p1() {
//         return this.val;
//     }
//     /**setter only property*/
//     public set p2(value: number) {
//         this.val = value;
//     }
//     public set nc_p2(value: number) {
//         this.val = value;
//     }
// }
// var cProperties_i = new cProperties();
// cProperties_i.p2 = cProperties_i.p1;
//               ^^
// | ----------------------------------------------------------------------
// | (property) cProperties.nc_p1: number
// | (property) cProperties.nc_p2: number
// | (property) cProperties.p1: number
// | (property) cProperties.p2: number
// | ----------------------------------------------------------------------
// cProperties_i.nc_p2 = cProperties_i.nc_p1;
// class cWithConstructorProperty {
//     /**
//     * this is class cWithConstructorProperty's constructor
//     * @param a this is first parameter a
//     */
//     constructor(/**more info about a*/public a: number) {
//         var bbbb = 10;
//         this.a = a + 2 + bbbb;
//              ^
// | ----------------------------------------------------------------------
// | (property) cWithConstructorProperty.a: number
// | ----------------------------------------------------------------------
//                  ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | (local var) arguments: IArguments
// | (local var) bbbb: number
// | class c1
// | class cProperties
// | var cProperties_i: cProperties
// | class cWithConstructorProperty
// | var i1: c1
// | var i1_c: typeof c1
// | var i1_f: (b: number) => number
// | var i1_nc_p: number
// | var i1_ncf: (b: number) => number
// | var i1_ncprop: number
// | var i1_ncr: number
// | var i1_p: number
// | var i1_prop: number
// | var i1_r: number
// | var i1_s_f: (b: number) => number
// | var i1_s_nc_p: number
// | var i1_s_ncf: (b: number) => number
// | var i1_s_ncprop: number
// | var i1_s_ncr: number
// | var i1_s_p: number
// | var i1_s_prop: number
// | var i1_s_r: number
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     }
// }

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 188,
      "name": "4"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 188,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 193,
      "name": "5"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 193,
        "length": 1
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "number to add",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 272,
      "name": "7"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 272,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 280,
      "name": "9"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 280,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 386,
      "name": "11"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 386,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 396,
      "name": "12"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 396,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 399,
      "name": "13"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 399,
        "length": 5
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is value",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 566,
      "name": "16"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 566,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 571,
      "name": "17"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 571,
        "length": 1
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "number to add",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 652,
      "name": "19"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 652,
        "length": 3
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 661,
      "name": "21"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 661,
        "length": 3
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 771,
      "name": "23"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 771,
        "length": 3
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 782,
      "name": "24"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 782,
        "length": 3
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp1",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "pp1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp2",
          "kind": "method",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "pp3",
          "kind": "property",
          "kindModifiers": "private",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "pp3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 2",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 2",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 786,
      "name": "25"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 786,
        "length": 5
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is value",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1012,
      "name": "29"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1012,
        "length": 2
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "number to add",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1015,
      "name": "30"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1015,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "s1 is static property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static getter property",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 3",
              "kind": "text"
            }
          ]
        },
        {
          "name": "apply",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "apply",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the this object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A set of arguments to be passed to the function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "bind",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "bind",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer inside the new function.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the new function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "call",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "call",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls a method of an object, substituting another object for the current object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the current object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "caller",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "caller",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "prototype",
          "kind": "property",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "prototype",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a function.",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1020,
      "name": "31"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1020,
        "length": 1
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "number to add",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1099,
      "name": "33"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1099,
        "length": 2
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1102,
      "name": "34"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1102,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "s1 is static property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static getter property",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 3",
              "kind": "text"
            }
          ]
        },
        {
          "name": "apply",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "apply",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the this object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A set of arguments to be passed to the function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "bind",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "bind",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer inside the new function.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the new function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "call",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "call",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls a method of an object, substituting another object for the current object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the current object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "caller",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "caller",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "prototype",
          "kind": "property",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "prototype",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a function.",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1105,
      "name": "35"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 1105,
        "length": 2
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1108,
      "name": "36"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1108,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "s1 is static property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static getter property",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 3",
              "kind": "text"
            }
          ]
        },
        {
          "name": "apply",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "apply",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the this object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A set of arguments to be passed to the function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "bind",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "bind",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer inside the new function.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the new function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "call",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "call",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls a method of an object, substituting another object for the current object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the current object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "caller",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "caller",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "prototype",
          "kind": "property",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "prototype",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a function.",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1210,
      "name": "38"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1210,
        "length": 2
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is value",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1213,
      "name": "39"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1213,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "s1 is static property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static getter property",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 3",
              "kind": "text"
            }
          ]
        },
        {
          "name": "apply",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "apply",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the this object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A set of arguments to be passed to the function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "bind",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "bind",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer inside the new function.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the new function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "call",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "call",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls a method of an object, substituting another object for the current object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the current object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "caller",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "caller",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "prototype",
          "kind": "property",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "prototype",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a function.",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1218,
      "name": "40"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 1218,
        "length": 2
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is value",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1221,
      "name": "41"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1221,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "s1 is static property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static getter property",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 3",
              "kind": "text"
            }
          ]
        },
        {
          "name": "apply",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "apply",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the this object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A set of arguments to be passed to the function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "bind",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "bind",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer inside the new function.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the new function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "call",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "call",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls a method of an object, substituting another object for the current object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the current object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "caller",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "caller",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "prototype",
          "kind": "property",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "prototype",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a function.",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1224,
      "name": "42"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 1224,
        "length": 5
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is value",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1322,
      "name": "45"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1322,
        "length": 1
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1471,
      "name": "49"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 1471,
        "length": 5
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1574,
      "name": "52"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1574,
        "length": 1
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1731,
      "name": "56"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 1731,
        "length": 5
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1827,
      "name": "59"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1827,
        "length": 1
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 1968,
      "name": "63"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 1968,
        "length": 5
      },
      "entries": [
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "value",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 2017,
      "name": "67"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 2017,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "p1 is property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "method",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p3",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter property 1",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 1",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 2234,
      "name": "87"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 2234,
        "length": 2
      },
      "entries": [
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 2237,
      "name": "88"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 2237,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "s1",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "s1 is static property of c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s2",
          "kind": "method",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s2",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static sum with property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "s3",
          "kind": "property",
          "kindModifiers": "static",
          "sortText": "10",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "s3",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "static getter property",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "setter property 3",
              "kind": "text"
            }
          ]
        },
        {
          "name": "apply",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "apply",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the this object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A set of arguments to be passed to the function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "bind",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "bind",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer inside the new function.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the new function.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "call",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "call",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "thisArg",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "argArray",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Calls a method of an object, substituting another object for the current object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The object to be used as the current object.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "argArray",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A list of arguments to be passed to the method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "caller",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "caller",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "prototype",
          "kind": "property",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "prototype",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a function.",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 2474,
      "name": "109"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 2882,
      "name": "110"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 2882,
        "length": 2
      },
      "entries": [
        {
          "name": "nc_p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "nc_p2",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "nc_p2",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "p1",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p1",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "getter only property",
              "kind": "text"
            }
          ]
        },
        {
          "name": "p2",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "p2",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "setter only property",
              "kind": "text"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 3190,
      "name": "114"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 3190,
        "length": 1
      },
      "entries": [
        {
          "name": "a",
          "kind": "property",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "more info about a",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "this is first parameter a",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is first parameter a",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsClassMembers.ts",
      "position": 3194,
      "name": "115"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 3194,
        "length": 1
      },
      "entries": [
        {
          "name": "a",
          "kind": "parameter",
          "kindModifiers": "public",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "more info about a",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "this is first parameter a",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is first parameter a",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "bbbb",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bbbb",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "c1",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": [
            {
              "text": "This is comment for c1",
              "kind": "text"
            }
          ]
        },
        {
          "name": "cProperties",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cProperties_i",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties_i",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cProperties",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "cWithConstructorProperty",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "cWithConstructorProperty",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_c",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_c",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "typeof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c1",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_f",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_f",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_nc_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_nc_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncf",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncf",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncprop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncprop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_ncr",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_ncr",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_p",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_p",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_prop",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_prop",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "i1_s_r",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "i1_s_r",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  }
]