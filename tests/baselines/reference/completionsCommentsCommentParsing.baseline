// === Completions ===
=== /tests/cases/fourslash/completionsCommentsCommentParsing.ts ===
// /// This is simple /// comments
// function simple() {
// }
// 
// simple( );
// 
// /// multiLine /// Comments
// /// This is example of multiline /// comments
// /// Another multiLine
// function multiLine() {
// }
// multiLine( );
// 
// /** this is eg of single line jsdoc style comment */
// function jsDocSingleLine() {
// }
// jsDocSingleLine();
// 
// 
// /** this is multiple line jsdoc stule comment
// *New line1
// *New Line2*/
// function jsDocMultiLine() {
// }
// jsDocMultiLine();
// 
// /** multiple line jsdoc comments no longer merge
// *New line1
// *New Line2*/
// /** Shoul mege this line as well
// * and this too*/ /** Another this one too*/
// function jsDocMultiLineMerge() {
// }
// jsDocMultiLineMerge();
// 
// 
// /// Triple slash comment
// /** jsdoc comment */
// function jsDocMixedComments1() {
// }
// jsDocMixedComments1();
// 
// /// Triple slash comment
// /** jsdoc comment */ /** another jsDocComment*/
// function jsDocMixedComments2() {
// }
// jsDocMixedComments2();
// 
// /** jsdoc comment */ /*** triplestar jsDocComment*/
// /// Triple slash comment
// function jsDocMixedComments3() {
// }
// jsDocMixedComments3();
// 
// /** jsdoc comment */ /** another jsDocComment*/
// /// Triple slash comment
// /// Triple slash comment 2
// function jsDocMixedComments4() {
// }
// jsDocMixedComments4();
// 
// /// Triple slash comment 1
// /** jsdoc comment */ /** another jsDocComment*/
// /// Triple slash comment
// /// Triple slash comment 2
// function jsDocMixedComments5() {
// }
// jsDocMixedComments5();
// 
// /** another jsDocComment*/
// /// Triple slash comment 1
// /// Triple slash comment
// /// Triple slash comment 2
// /** jsdoc comment */
// function jsDocMixedComments6() {
// }
// jsDocMixedComments6();
// 
// // This shoulnot be help comment
// function noHelpComment1() {
// }
// noHelpComment1();
// 
// /* This shoulnot be help comment */
// function noHelpComment2() {
// }
// noHelpComment2();
// 
// function noHelpComment3() {
// }
// noHelpComment3();
// /** Adds two integers and returns the result
//   * @param {number} a first number
//   * @param b second number
//   */
// function sum(a: number, b: number) {
//     return a + b;
//            ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | (local var) arguments: IArguments
// | (parameter) b: number
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// }
// sum(10, 20);
// ^^^
// | ----------------------------------------------------------------------
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | var Array: ArrayConstructor
// | (arrayLength?: number) => any[] (+2 overloads)
// | interface Array<T>
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | var Boolean: BooleanConstructor
// | <T>(value?: T) => boolean
// | interface Boolean
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | var Date: DateConstructor
// | () => string
// | interface Date
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | var Error: ErrorConstructor
// | (message?: string) => Error
// | interface Error
// | function eval(x: string): any
// | var EvalError: EvalErrorConstructor
// | (message?: string) => EvalError (+1 overload)
// | interface EvalError
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | var Function: FunctionConstructor
// | (...args: string[]) => Function
// | interface Function
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | var Number: NumberConstructor
// | (value?: any) => number
// | interface Number
// | var Object: ObjectConstructor
// | () => any (+1 overload)
// | interface Object
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | var RangeError: RangeErrorConstructor
// | (message?: string) => RangeError (+1 overload)
// | interface RangeError
// | var ReferenceError: ReferenceErrorConstructor
// | (message?: string) => ReferenceError (+1 overload)
// | interface ReferenceError
// | var RegExp: RegExpConstructor
// | (pattern: RegExp | string) => RegExp (+1 overload)
// | interface RegExp
// | return
// | satisfies
// | var String: StringConstructor
// | (value?: any) => string
// | interface String
// | super
// | switch
// | var SyntaxError: SyntaxErrorConstructor
// | (message?: string) => SyntaxError (+1 overload)
// | interface SyntaxError
// | this
// | throw
// | true
// | try
// | type
// | var TypeError: TypeErrorConstructor
// | (message?: string) => TypeError (+1 overload)
// | interface TypeError
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | var URIError: URIErrorConstructor
// | (message?: string) => URIError (+1 overload)
// | interface URIError
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// /** This is multiplication function
//  * @param 
//  * @param a first number
//  * @param b
//  * @param c {
//  @param d @anotherTag
//  * @param e LastParam @anotherTag*/
// function multiply(a: number, b: number, c?: number, d?, e?) {
// }
// multiply(10, 20, 30, 40, 50);
// /** fn f1 with number
// * @param { string} b about b
// */
// function f1(a: number);
// function f1(b: string);
// /**@param opt optional parameter*/
// function f1(aOrb, opt?) {
//     return aOrb;
//            ^^^^
// | ----------------------------------------------------------------------
// | (parameter) aOrb: any
// | (local var) arguments: IArguments
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | (parameter) opt: any
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// }
// f1(10);
// f1("hello");
// 
// ^
// | ----------------------------------------------------------------------
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// /** This is subtract function
// @param { a
// *@param { number | } b this is about b
// @param { { () => string; } } c this is optional param c
// @param { { () => string; } d this is optional param d
// @param { { () => string; } } e this is optional param e
// @param { { { () => string; } } f this is optional param f
// */
// function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string) {
// }
// subtract(10,  20,  null,  null,  null, null);
// /** this is square function
// @paramTag { number } a this is input number of paramTag
// @param { number } a this is input number
// @returnType { number } it is return type
// */
// function square(a: number) {
//     return a * a;
// }
// square(10);
// /** this is divide function
// @param { number} a this is a
// @paramTag { number } g this is optional param g
// @param { number} b this is b
// */
// function divide(a: number, b: number) {
// }
// divide(10, 20);
// /**
// Function returns string concat of foo and bar
// @param			{string}		foo		is string
// @param		    {string}		bar		is second string
// */
// function fooBar(foo: string, bar: string) {
//     return foo + bar;
// }
// fooBar("foo","bar");
// /** This is a comment */
// var x;
// /**
//   * This is a comment
//   */
// var y;
// /** this is jsdoc style function with param tag as well as inline parameter help
// *@param a it is first parameter
// *@param c it is third parameter
// */
// function jsDocParamTest(/** this is inline comment for a */a: number, /** this is inline comment for b*/ b: number, c: number, d: number) {
//     return a + b + c + d;
//            ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | (local var) arguments: IArguments
// | (parameter) b: number
// | (parameter) c: number
// | (parameter) d: number
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | interface Number
// | var Number: NumberConstructor
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// }
// jsDocParamTest(30, 40, 50, 60);
// ^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | var Array: ArrayConstructor
// | (arrayLength?: number) => any[] (+2 overloads)
// | interface Array<T>
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | async
// | await
// | var Boolean: BooleanConstructor
// | <T>(value?: T) => boolean
// | interface Boolean
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | var Date: DateConstructor
// | () => string
// | interface Date
// | debugger
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | var Error: ErrorConstructor
// | (message?: string) => Error
// | interface Error
// | function eval(x: string): any
// | var EvalError: EvalErrorConstructor
// | (message?: string) => EvalError (+1 overload)
// | interface EvalError
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | var Function: FunctionConstructor
// | (...args: string[]) => Function
// | interface Function
// | module globalThis
// | if
// | implements
// | import
// | in
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | let
// | interface Math
// | var Math: Math
// | var NaN: number
// | new
// | null
// | var Number: NumberConstructor
// | (value?: any) => number
// | interface Number
// | var Object: ObjectConstructor
// | () => any (+1 overload)
// | interface Object
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | var RangeError: RangeErrorConstructor
// | (message?: string) => RangeError (+1 overload)
// | interface RangeError
// | var ReferenceError: ReferenceErrorConstructor
// | (message?: string) => ReferenceError (+1 overload)
// | interface ReferenceError
// | var RegExp: RegExpConstructor
// | (pattern: RegExp | string) => RegExp (+1 overload)
// | interface RegExp
// | return
// | satisfies
// | var String: StringConstructor
// | (value?: any) => string
// | interface String
// | super
// | switch
// | var SyntaxError: SyntaxErrorConstructor
// | (message?: string) => SyntaxError (+1 overload)
// | interface SyntaxError
// | this
// | throw
// | true
// | try
// | type
// | var TypeError: TypeErrorConstructor
// | (message?: string) => TypeError (+1 overload)
// | interface TypeError
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | var URIError: URIErrorConstructor
// | (message?: string) => URIError (+1 overload)
// | interface URIError
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// /** This is function comment
//   * And properly aligned comment
//   */
// function jsDocCommentAlignmentTest1() {
// }
// jsDocCommentAlignmentTest1();
// /** This is function comment
//   *     And aligned with 4 space char margin
//   */
// function jsDocCommentAlignmentTest2() {
// }
// jsDocCommentAlignmentTest2();
// /** This is function comment
//   *     And aligned with 4 space char margin
//   * @param {string} a this is info about a
//   *                   spanning on two lines and aligned perfectly
//   * @param b          this is info about b
//   *                   spanning on two lines and aligned perfectly
//   *                   spanning one more line alined perfectly
//   *                       spanning another line with more margin
//   * @param c          this is info about b
//   *  not aligned text about parameter will eat only one space
//   */
// function jsDocCommentAlignmentTest3(a: string, b, c) {
// }
// jsDocCommentAlignmentTest3("hello",1, 2);
// 
// ^
// | ----------------------------------------------------------------------
// | function divide(a: number, b: number): void
// | function f1(a: number): any (+1 overload)
// | function fooBar(foo: string, bar: string): string
// | function jsDocCommentAlignmentTest1(): void
// | function jsDocCommentAlignmentTest2(): void
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | function jsDocMixedComments1(): void
// | function jsDocMixedComments2(): void
// | function jsDocMixedComments3(): void
// | function jsDocMixedComments4(): void
// | function jsDocMixedComments5(): void
// | function jsDocMixedComments6(): void
// | function jsDocMultiLine(): void
// | function jsDocMultiLineMerge(): void
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | function jsDocSingleLine(): void
// | function multiLine(): void
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | function noHelpComment1(): void
// | function noHelpComment2(): void
// | function noHelpComment3(): void
// | class NoQuickInfoClass
// | function simple(): void
// | function square(a: number): number
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | function sum(a: number, b: number): number
// | var x: any
// | var y: any
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// class NoQuickInfoClass {
// }

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 1915,
      "name": "18"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1915,
        "length": 1
      },
      "entries": [
        {
          "name": "a",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "first number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "second number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 1924,
      "name": "15"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1924,
        "length": 3
      },
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "arrayLength",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "2",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overloads",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pattern",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 2361,
      "name": "24"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 2361,
        "length": 4
      },
      "entries": [
        {
          "name": "aOrb",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "aOrb",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "opt",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "opt",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "optional parameter",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "opt",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "optional parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 2390,
      "name": "27"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 3874,
      "name": "39"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 3874,
        "length": 1
      },
      "entries": [
        {
          "name": "a",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is inline comment for a",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "it is first parameter",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is inline comment for b",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "it is third parameter",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "d",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 3891,
      "name": "44"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 3891,
        "length": 14
      },
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "arrayLength",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "2",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overloads",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pattern",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 4841,
      "name": ""
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  }
]