// === Completions ===
=== /tests/cases/fourslash/completionsCommitCharactersGlobal.ts ===
// declare function func(a: string, b: number): { a: string, b: number };
// const x1 = func()
//                 ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x2 = func
// (a)
//  ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// (a)
//  ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// ;
// const x3 = func("a", )
//                      ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x4 = func
// (a, b)
//     ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x5 = func((a, ));
//                     ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x6 = (a)
//             ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x7 = (a, x)
//                ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// function x8() {}
//             ^
// | ----------------------------------------------------------------------
// | No completions at /*8*/.
// | ----------------------------------------------------------------------
// function x9(a: number, )
//                        ^
// | ----------------------------------------------------------------------
// | No completions at /*9*/.
// | ----------------------------------------------------------------------
// const x10: []
//             ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x11: [ ]
// let x12;
// x12 = 
//       ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// const x13 = `hello, ${}`
//                       ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// interface I<T> {
//     []: T;
//      ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// }
// class C {
//     []: string;
//      ^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     [str: string]: number;
//      ^^^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | (parameter) str: string
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
// }
// type T = {
//     [xyz: number]: boolean;
//      ^^^
// | ----------------------------------------------------------------------
// | class C
// | function F(pred: (x)): any
// | function func(a: string, b: number): {
// |     a: string;
// |     b: number;
// | }
// | const x1: {
// |     a: string;
// |     b: number;
// | }
// | const x2: any
// | const x3: {
// |     a: string;
// |     b: number;
// | }
// | const x4: {
// |     a: string;
// |     b: number;
// | }
// | const x5: {
// |     a: string;
// |     b: number;
// | }
// | const x6: any
// | const x7: any
// | function x8(): void
// | function x9(a: number): any
// | const x10: []
// | const x11: []
// | let x12: any
// | const x13: string
// | (parameter) xyz: number
// | abstract
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | as
// | asserts
// | async
// | await
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | break
// | case
// | catch
// | class
// | const
// | continue
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | debugger
// | declare
// | function decodeURI(encodedURI: string): string
// | function decodeURIComponent(encodedURIComponent: string): string
// | default
// | delete
// | do
// | else
// | function encodeURI(uri: string): string
// | function encodeURIComponent(uriComponent: string | number | boolean): string
// | enum
// | interface Error
// | var Error: ErrorConstructor
// | function eval(x: string): any
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | export
// | extends
// | false
// | finally
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | for
// | function
// | interface Function
// | var Function: FunctionConstructor
// | module globalThis
// | if
// | implements
// | import
// | in
// | infer
// | var Infinity: number
// | instanceof
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface
// | namespace Intl
// | function isFinite(number: number): boolean
// | function isNaN(number: number): boolean
// | interface JSON
// | var JSON: JSON
// | keyof
// | let
// | interface Math
// | var Math: Math
// | module
// | namespace
// | var NaN: number
// | never
// | new
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | package
// | function parseFloat(string: string): number
// | function parseInt(string: string, radix?: number): number
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | readonly
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | return
// | satisfies
// | string
// | interface String
// | var String: StringConstructor
// | super
// | switch
// | symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | this
// | throw
// | true
// | try
// | type
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | var undefined
// | unique
// | unknown
// | interface URIError
// | var URIError: URIErrorConstructor
// | using
// | var
// | void
// | while
// | with
// | yield
// | function escape(string: string): string
// | function unescape(string: string): string
// | ----------------------------------------------------------------------
//     [
//      ^
// | ----------------------------------------------------------------------
// | class C
// | interface I<T>
// | type T = {
// |     [xyz: number]: boolean;
// | }
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | interface ArrayBufferConstructor
// | type ArrayBufferLike = ArrayBuffer
// | interface ArrayBufferTypes
// | interface ArrayBufferView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | interface ArrayConstructor
// | interface ArrayLike<T>
// | asserts
// | type Awaited<T> = T extends null ? T : T extends object & {
// |     then(onfulfilled: infer F, ...args: infer _): any;
// | } ? F extends (value: infer V, ...args: infer _) => any ? Awaited<...> : never : T
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | interface BooleanConstructor
// | interface CallableFunction
// | type Capitalize<S extends string> = intrinsic
// | interface ClassAccessorDecoratorContext<This = unknown, Value = unknown>
// | interface ClassAccessorDecoratorResult<This, Value>
// | interface ClassAccessorDecoratorTarget<This, Value>
// | type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void
// | interface ClassDecoratorContext<Class extends abstract new (...args: any) => any = abstract new (...args: any) => any>
// | interface ClassFieldDecoratorContext<This = unknown, Value = unknown>
// | interface ClassGetterDecoratorContext<This = unknown, Value = unknown>
// | type ClassMemberDecoratorContext = ClassMethodDecoratorContext<unknown, (this: unknown, ...args: any) => any> | ClassGetterDecoratorContext<unknown, unknown> | ClassSetterDecoratorContext<unknown, unknown> | ClassFieldDecoratorContext<...> | ClassAccessorDecoratorContext<...>
// | interface ClassMethodDecoratorContext<This = unknown, Value extends (this: This, ...args: any) => any = (this: This, ...args: any) => any>
// | interface ClassSetterDecoratorContext<This = unknown, Value = unknown>
// | interface ConcatArray<T>
// | type ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (...args: infer P) => any ? P : never
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | interface DateConstructor
// | type DecoratorContext = ClassMemberDecoratorContext | ClassDecoratorContext<abstract new (...args: any) => any>
// | type DecoratorMetadata = Record<PropertyKey, unknown> & object
// | type DecoratorMetadataObject = Record<PropertyKey, unknown> & object
// | interface Error
// | var Error: ErrorConstructor
// | interface ErrorConstructor
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | interface EvalErrorConstructor
// | type Exclude<T, U> = T extends U ? never : T
// | type Extract<T, U> = T extends U ? T : never
// | false
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | interface Float64ArrayConstructor
// | interface Function
// | var Function: FunctionConstructor
// | interface FunctionConstructor
// | module globalThis
// | interface IArguments
// | interface ImportAttributes
// | interface ImportCallOptions
// | interface ImportMeta
// | infer
// | type InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface Int32ArrayConstructor
// | namespace Intl
// | interface JSON
// | var JSON: JSON
// | keyof
// | type Lowercase<S extends string> = intrinsic
// | interface Math
// | var Math: Math
// | type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void
// | never
// | interface NewableFunction
// | type NoInfer<T> = intrinsic
// | type NonNullable<T> = T & {}
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | interface NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | interface ObjectConstructor
// | type Omit<T, K extends keyof any> = { [P in Exclude<keyof T, K>]: T[P]; }
// | type OmitThisParameter<T> = unknown extends ThisParameterType<T> ? T : T extends (...args: infer A) => infer R ? (...args: A) => R : T
// | type ParameterDecorator = (target: Object, propertyKey: string | symbol | undefined, parameterIndex: number) => void
// | type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never
// | type Partial<T> = { [P in keyof T]?: T[P]; }
// | type Pick<T, K extends keyof T> = { [P in K]: T[P]; }
// | interface Promise<T>
// | type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>
// | interface PromiseLike<T>
// | type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void
// | interface PropertyDescriptor
// | interface PropertyDescriptorMap
// | type PropertyKey = string | number | symbol
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface RangeErrorConstructor
// | readonly
// | type Readonly<T> = { readonly [P in keyof T]: T[P]; }
// | interface ReadonlyArray<T>
// | type Record<K extends keyof any, T> = { [P in K]: T; }
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | interface RegExpConstructor
// | interface RegExpExecArray
// | interface RegExpMatchArray
// | type Required<T> = { [P in keyof T]-?: T[P]; }
// | type ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any
// | string
// | interface String
// | var String: StringConstructor
// | interface StringConstructor
// | symbol
// | interface Symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | interface SyntaxErrorConstructor
// | interface TemplateStringsArray
// | type ThisParameterType<T> = T extends (this: infer U, ...args: never) => any ? U : unknown
// | interface ThisType<T>
// | true
// | interface TypedPropertyDescriptor<T>
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | interface TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | interface Uint32ArrayConstructor
// | type Uncapitalize<S extends string> = intrinsic
// | undefined
// | unique
// | unknown
// | type Uppercase<S extends string> = intrinsic
// | interface URIError
// | var URIError: URIErrorConstructor
// | interface URIErrorConstructor
// | void
// | type WeakKey = object
// | interface WeakKeyTypes
// | interface ImportAssertions
// | ----------------------------------------------------------------------
// }
// function F(pred: (x)
//                   ^
// | ----------------------------------------------------------------------
// | class C
// | interface I<T>
// | type T = {
// |     [xyz: number]: boolean;
// | }
// | any
// | interface Array<T>
// | var Array: ArrayConstructor
// | interface ArrayBuffer
// | var ArrayBuffer: ArrayBufferConstructor
// | interface ArrayBufferConstructor
// | type ArrayBufferLike = ArrayBuffer
// | interface ArrayBufferTypes
// | interface ArrayBufferView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | interface ArrayConstructor
// | interface ArrayLike<T>
// | asserts
// | type Awaited<T> = T extends null ? T : T extends object & {
// |     then(onfulfilled: infer F, ...args: infer _): any;
// | } ? F extends (value: infer V, ...args: infer _) => any ? Awaited<...> : never : T
// | bigint
// | boolean
// | interface Boolean
// | var Boolean: BooleanConstructor
// | interface BooleanConstructor
// | interface CallableFunction
// | type Capitalize<S extends string> = intrinsic
// | interface ClassAccessorDecoratorContext<This = unknown, Value = unknown>
// | interface ClassAccessorDecoratorResult<This, Value>
// | interface ClassAccessorDecoratorTarget<This, Value>
// | type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void
// | interface ClassDecoratorContext<Class extends abstract new (...args: any) => any = abstract new (...args: any) => any>
// | interface ClassFieldDecoratorContext<This = unknown, Value = unknown>
// | interface ClassGetterDecoratorContext<This = unknown, Value = unknown>
// | type ClassMemberDecoratorContext = ClassMethodDecoratorContext<unknown, (this: unknown, ...args: any) => any> | ClassGetterDecoratorContext<unknown, unknown> | ClassSetterDecoratorContext<unknown, unknown> | ClassFieldDecoratorContext<...> | ClassAccessorDecoratorContext<...>
// | interface ClassMethodDecoratorContext<This = unknown, Value extends (this: This, ...args: any) => any = (this: This, ...args: any) => any>
// | interface ClassSetterDecoratorContext<This = unknown, Value = unknown>
// | interface ConcatArray<T>
// | type ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (...args: infer P) => any ? P : never
// | interface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var DataView: DataViewConstructor
// | interface DataViewConstructor
// | interface Date
// | var Date: DateConstructor
// | interface DateConstructor
// | type DecoratorContext = ClassMemberDecoratorContext | ClassDecoratorContext<abstract new (...args: any) => any>
// | type DecoratorMetadata = Record<PropertyKey, unknown> & object
// | type DecoratorMetadataObject = Record<PropertyKey, unknown> & object
// | interface Error
// | var Error: ErrorConstructor
// | interface ErrorConstructor
// | interface EvalError
// | var EvalError: EvalErrorConstructor
// | interface EvalErrorConstructor
// | type Exclude<T, U> = T extends U ? never : T
// | type Extract<T, U> = T extends U ? T : never
// | false
// | interface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float32Array: Float32ArrayConstructor
// | interface Float32ArrayConstructor
// | interface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Float64Array: Float64ArrayConstructor
// | interface Float64ArrayConstructor
// | interface Function
// | var Function: FunctionConstructor
// | interface FunctionConstructor
// | module globalThis
// | interface IArguments
// | interface ImportAttributes
// | interface ImportCallOptions
// | interface ImportMeta
// | infer
// | type InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any
// | interface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int8Array: Int8ArrayConstructor
// | interface Int8ArrayConstructor
// | interface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int16Array: Int16ArrayConstructor
// | interface Int16ArrayConstructor
// | interface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Int32Array: Int32ArrayConstructor
// | interface Int32ArrayConstructor
// | namespace Intl
// | interface JSON
// | var JSON: JSON
// | keyof
// | type Lowercase<S extends string> = intrinsic
// | interface Math
// | var Math: Math
// | type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void
// | never
// | interface NewableFunction
// | type NoInfer<T> = intrinsic
// | type NonNullable<T> = T & {}
// | null
// | number
// | interface Number
// | var Number: NumberConstructor
// | interface NumberConstructor
// | object
// | interface Object
// | var Object: ObjectConstructor
// | interface ObjectConstructor
// | type Omit<T, K extends keyof any> = { [P in Exclude<keyof T, K>]: T[P]; }
// | type OmitThisParameter<T> = unknown extends ThisParameterType<T> ? T : T extends (...args: infer A) => infer R ? (...args: A) => R : T
// | type ParameterDecorator = (target: Object, propertyKey: string | symbol | undefined, parameterIndex: number) => void
// | type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never
// | type Partial<T> = { [P in keyof T]?: T[P]; }
// | type Pick<T, K extends keyof T> = { [P in K]: T[P]; }
// | interface Promise<T>
// | type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>
// | interface PromiseLike<T>
// | type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void
// | interface PropertyDescriptor
// | interface PropertyDescriptorMap
// | type PropertyKey = string | number | symbol
// | interface RangeError
// | var RangeError: RangeErrorConstructor
// | interface RangeErrorConstructor
// | readonly
// | type Readonly<T> = { readonly [P in keyof T]: T[P]; }
// | interface ReadonlyArray<T>
// | type Record<K extends keyof any, T> = { [P in K]: T; }
// | interface ReferenceError
// | var ReferenceError: ReferenceErrorConstructor
// | interface ReferenceErrorConstructor
// | interface RegExp
// | var RegExp: RegExpConstructor
// | interface RegExpConstructor
// | interface RegExpExecArray
// | interface RegExpMatchArray
// | type Required<T> = { [P in keyof T]-?: T[P]; }
// | type ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any
// | string
// | interface String
// | var String: StringConstructor
// | interface StringConstructor
// | symbol
// | interface Symbol
// | interface SyntaxError
// | var SyntaxError: SyntaxErrorConstructor
// | interface SyntaxErrorConstructor
// | interface TemplateStringsArray
// | type ThisParameterType<T> = T extends (this: infer U, ...args: never) => any ? U : unknown
// | interface ThisType<T>
// | true
// | interface TypedPropertyDescriptor<T>
// | interface TypeError
// | var TypeError: TypeErrorConstructor
// | interface TypeErrorConstructor
// | typeof
// | interface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8Array: Uint8ArrayConstructor
// | interface Uint8ArrayConstructor
// | interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint8ClampedArray: Uint8ClampedArrayConstructor
// | interface Uint8ClampedArrayConstructor
// | interface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint16Array: Uint16ArrayConstructor
// | interface Uint16ArrayConstructor
// | interface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBuffer>
// | var Uint32Array: Uint32ArrayConstructor
// | interface Uint32ArrayConstructor
// | type Uncapitalize<S extends string> = intrinsic
// | undefined
// | unique
// | unknown
// | type Uppercase<S extends string> = intrinsic
// | interface URIError
// | var URIError: URIErrorConstructor
// | interface URIErrorConstructor
// | void
// | type WeakKey = object
// | interface WeakKeyTypes
// | interface ImportAssertions
// | ----------------------------------------------------------------------

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 87,
      "name": "1"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 107,
      "name": "2"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 106,
        "length": 1
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 111,
      "name": "22"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 110,
        "length": 1
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 136,
      "name": "3"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 159,
      "name": "4"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 158,
        "length": 1
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 181,
      "name": "5"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 198,
      "name": "6"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 197,
        "length": 1
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 216,
      "name": "7"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 215,
        "length": 1
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 230,
      "name": "8"
    },
    "item": {}
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 258,
      "name": "9"
    },
    "item": {}
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 272,
      "name": "10"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 304,
      "name": "12"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 327,
      "name": "13"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 327,
        "length": 0
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 352,
      "name": "14"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 375,
      "name": "16"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 394,
      "name": "17"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 391,
        "length": 3
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "str",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "str",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 432,
      "name": "18"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 431,
        "length": 3
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "F",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pred",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "func",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "func",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x1",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x1",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x2",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x2",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x3",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x3",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x4",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x4",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x5",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x5",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x6",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x6",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x7",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x7",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x8",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x8",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x9",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x9",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x10",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x10",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x11",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x11",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "x12",
          "kind": "let",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x12",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "x13",
          "kind": "const",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x13",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "xyz",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "xyz",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "using",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "using",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 459,
      "name": "19"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "I",
          "kind": "interface",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "I",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "T",
          "kind": "type",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "xyz",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ArrayBufferConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBufferLike",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBufferTypes",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferTypes",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ArrayBufferView",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferView",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayLike",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Awaited",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Awaited",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "null",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "then",
              "kind": "text"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "onfulfilled",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "_",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "V",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "_",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Awaited",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "text"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            }
          ],
          "documentation": [
            {
              "text": "Recursively unwraps the \"awaited type\" of a type. Non-promise \"thenables\" should resolve to `never`. This emulates the behavior of `await`.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "BooleanConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "CallableFunction",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "CallableFunction",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Capitalize",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Capitalize",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert first character of string literal type to uppercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ClassAccessorDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class `accessor` field decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of decorated class field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassAccessorDecoratorResult",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorResult",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Describes the allowed return value from a class `accessor` field decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The `this` type to which the target applies.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The property type for the class `accessor` field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassAccessorDecoratorTarget",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorTarget",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Describes the target provided to class `accessor` field decorators.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The `this` type to which the target applies.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The property type for the class `accessor` field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TFunction",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TFunction",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TFunction",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "ClassDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "Class",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "Class",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class associated with this context.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassFieldDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassFieldDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class field decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassGetterDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassGetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class getter decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The property type of the decorated class getter.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassMemberDecoratorContext",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMemberDecoratorContext",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMethodDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassGetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassSetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassFieldDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "text"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "text"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "The decorator context types provided to class element decorators.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ClassMethodDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMethodDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class method decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassSetterDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassSetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class setter decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class setter.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ConcatArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ConcatArray",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ConstructorParameters",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ConstructorParameters",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the parameters of a constructor function type in a tuple",
              "kind": "text"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "DataViewConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "DateConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "DecoratorContext",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DecoratorContext",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMemberDecoratorContext",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "The decorator context types provided to any decorator.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "DecoratorMetadata",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DecoratorMetadata",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Record",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "PropertyKey",
              "kind": "aliasName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "DecoratorMetadataObject",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DecoratorMetadataObject",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Record",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "PropertyKey",
              "kind": "aliasName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "EvalErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Exclude",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Exclude",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            }
          ],
          "documentation": [
            {
              "text": "Exclude from T those types that are assignable to U",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Extract",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Extract",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Extract from T those types that are assignable to U",
              "kind": "text"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float32ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "FunctionConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "IArguments",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ImportAttributes",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportAttributes",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type for the `with` property of the optional second argument to `import()`.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ImportCallOptions",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportCallOptions",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type for the optional second argument to `import()`.\n\nIf your host environment supports additional options, this type may be\naugmented via interface merging.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ImportMeta",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportMeta",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type of `import.meta`.\n\nIf you need to declare that a given property exists on `import.meta`,\nthis type may be augmented via interface merging.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "InstanceType",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "InstanceType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the return type of a constructor function type",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Lowercase",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Lowercase",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert string literal type to lowercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "MethodDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "MethodDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "propertyKey",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "descriptor",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypedPropertyDescriptor",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypedPropertyDescriptor",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NewableFunction",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NewableFunction",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoInfer",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoInfer",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Marker for non-inference type position",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NonNullable",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NonNullable",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Exclude null and undefined from T",
              "kind": "text"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NumberConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ObjectConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Omit",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Omit",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Exclude",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Construct a type with the properties of T except for those in type K.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "OmitThisParameter",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "OmitThisParameter",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ThisParameterType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "A",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "A",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            }
          ],
          "documentation": [
            {
              "text": "Removes the 'this' parameter from a function type.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ParameterDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ParameterDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "propertyKey",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parameterIndex",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Parameters",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Parameters",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the parameters of a function type in a tuple",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Partial",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Partial",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Make all properties in T optional",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Pick",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Pick",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "From T, pick a set of properties whose keys are in the union K",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Promise",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Promise",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Represents the completion of an asynchronous operation",
              "kind": "text"
            }
          ]
        },
        {
          "name": "PromiseConstructorLike",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseConstructorLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "executor",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "resolve",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "reject",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "reason",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "PromiseLike",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "propertyKey",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyDescriptor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyDescriptor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyDescriptorMap",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyDescriptorMap",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyKey",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyKey",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RangeErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Readonly",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Readonly",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "readonly",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Make all properties in T readonly",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ReadonlyArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReadonlyArray",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "Record",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Record",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Construct a type with a set of properties K of type T",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExpConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExpExecArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpExecArray",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExpMatchArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpMatchArray",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Required",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Required",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": "-",
              "kind": "punctuation"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Make all properties in T required",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ReturnType",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReturnType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the return type of a function type",
              "kind": "text"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "StringConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Symbol",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Symbol",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "SyntaxErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "TemplateStringsArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TemplateStringsArray",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ThisParameterType",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ThisParameterType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Extracts the type of the 'this' parameter of a function type, or 'unknown' if the function type has no 'this' parameter.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ThisType",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ThisType",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Marker for contextual 'this' type",
              "kind": "text"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypedPropertyDescriptor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypedPropertyDescriptor",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "TypeErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uncapitalize",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uncapitalize",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert first character of string literal type to lowercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "undefined",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uppercase",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uppercase",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert string literal type to uppercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "WeakKey",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "WeakKey",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "WeakKeyTypes",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "WeakKeyTypes",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Stores types to be used with WeakSet, WeakMap, WeakRef, and FinalizationRegistry",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ImportAssertions",
          "kind": "interface",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportAssertions",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type for the `assert` property of the optional second argument to `import()`.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated"
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommitCharactersGlobal.ts",
      "position": 481,
      "name": "20"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": true,
      "optionalReplacementSpan": {
        "start": 480,
        "length": 1
      },
      "entries": [
        {
          "name": "C",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "C",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "I",
          "kind": "interface",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "I",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "T",
          "kind": "type",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "xyz",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ArrayBufferConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBufferLike",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBufferTypes",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferTypes",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ArrayBufferView",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferView",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayLike",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Awaited",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Awaited",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "null",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "    ",
              "kind": "space"
            },
            {
              "text": "then",
              "kind": "text"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "onfulfilled",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "_",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "}",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "F",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "V",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "_",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Awaited",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "text"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            }
          ],
          "documentation": [
            {
              "text": "Recursively unwraps the \"awaited type\" of a type. Non-promise \"thenables\" should resolve to `never`. This emulates the behavior of `await`.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "BooleanConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "CallableFunction",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "CallableFunction",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Capitalize",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Capitalize",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert first character of string literal type to uppercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ClassAccessorDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class `accessor` field decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of decorated class field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassAccessorDecoratorResult",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorResult",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Describes the allowed return value from a class `accessor` field decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The `this` type to which the target applies.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The property type for the class `accessor` field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassAccessorDecoratorTarget",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorTarget",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Describes the target provided to class `accessor` field decorators.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The `this` type to which the target applies.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The property type for the class `accessor` field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TFunction",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TFunction",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TFunction",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "ClassDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "Class",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "Class",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class associated with this context.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassFieldDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassFieldDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class field decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class field.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassGetterDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassGetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class getter decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The property type of the decorated class getter.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassMemberDecoratorContext",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMemberDecoratorContext",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMethodDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassGetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassSetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassFieldDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "text"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassAccessorDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "text"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "The decorator context types provided to class element decorators.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ClassMethodDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMethodDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class method decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class method.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ClassSetterDecoratorContext",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassSetterDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "This",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Value",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Context provided to a class setter decorator.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "template",
              "text": [
                {
                  "text": "This",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type on which the class element will be defined. For a static class element, this will be\nthe type of the constructor. For a non-static class element, this will be the type of the instance.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "template",
              "text": [
                {
                  "text": "Value",
                  "kind": "typeParameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The type of the decorated class setter.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "ConcatArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ConcatArray",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ConstructorParameters",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ConstructorParameters",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the parameters of a constructor function type in a tuple",
              "kind": "text"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "DataViewConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "DateConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "DecoratorContext",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DecoratorContext",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassMemberDecoratorContext",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ClassDecoratorContext",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "The decorator context types provided to any decorator.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "DecoratorMetadata",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DecoratorMetadata",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Record",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "PropertyKey",
              "kind": "aliasName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "DecoratorMetadataObject",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DecoratorMetadataObject",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Record",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "PropertyKey",
              "kind": "aliasName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "EvalErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Exclude",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Exclude",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            }
          ],
          "documentation": [
            {
              "text": "Exclude from T those types that are assignable to U",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Extract",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Extract",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Extract from T those types that are assignable to U",
              "kind": "text"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float32ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "FunctionConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "IArguments",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ImportAttributes",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportAttributes",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type for the `with` property of the optional second argument to `import()`.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ImportCallOptions",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportCallOptions",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type for the optional second argument to `import()`.\n\nIf your host environment supports additional options, this type may be\naugmented via interface merging.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ImportMeta",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportMeta",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type of `import.meta`.\n\nIf you need to declare that a given property exists on `import.meta`,\nthis type may be augmented via interface merging.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "InstanceType",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "InstanceType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "abstract",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the return type of a constructor function type",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int16ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Lowercase",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Lowercase",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert string literal type to lowercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "MethodDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "MethodDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "propertyKey",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "descriptor",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypedPropertyDescriptor",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypedPropertyDescriptor",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NewableFunction",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NewableFunction",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoInfer",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoInfer",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Marker for non-inference type position",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NonNullable",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NonNullable",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "&",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Exclude null and undefined from T",
              "kind": "text"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NumberConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ObjectConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Omit",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Omit",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Exclude",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Construct a type with the properties of T except for those in type K.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "OmitThisParameter",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "OmitThisParameter",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ThisParameterType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "A",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "A",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            }
          ],
          "documentation": [
            {
              "text": "Removes the 'this' parameter from a function type.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ParameterDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ParameterDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "propertyKey",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parameterIndex",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "Parameters",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Parameters",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the parameters of a function type in a tuple",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Partial",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Partial",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Make all properties in T optional",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Pick",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Pick",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "From T, pick a set of properties whose keys are in the union K",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Promise",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Promise",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Represents the completion of an asynchronous operation",
              "kind": "text"
            }
          ]
        },
        {
          "name": "PromiseConstructorLike",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseConstructorLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "new",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "executor",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "resolve",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "reject",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "reason",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "PromiseLike",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PromiseLike",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyDecorator",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyDecorator",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "target",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "propertyKey",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyDescriptor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyDescriptor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyDescriptorMap",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyDescriptorMap",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "PropertyKey",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "PropertyKey",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RangeErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Readonly",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Readonly",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "readonly",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Make all properties in T readonly",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ReadonlyArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReadonlyArray",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "Record",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Record",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "K",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Construct a type with a set of properties K of type T",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExpConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExpExecArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpExecArray",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExpMatchArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpMatchArray",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Required",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Required",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "in",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "keyof",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": "-",
              "kind": "punctuation"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "P",
              "kind": "typeParameterName"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ";",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "}",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Make all properties in T required",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ReturnType",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReturnType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "R",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Obtain the return type of a function type",
              "kind": "text"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "StringConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Symbol",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Symbol",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "SyntaxErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "TemplateStringsArray",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TemplateStringsArray",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ThisParameterType",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ThisParameterType",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "this",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "infer",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "never",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "U",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Extracts the type of the 'this' parameter of a function type, or 'unknown' if the function type has no 'this' parameter.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ThisType",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ThisType",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Marker for contextual 'this' type",
              "kind": "text"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypedPropertyDescriptor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypedPropertyDescriptor",
              "kind": "interfaceName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "TypeErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint16ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "TArrayBuffer",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferLike",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32ArrayConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Uncapitalize",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uncapitalize",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert first character of string literal type to lowercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "undefined",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uppercase",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uppercase",
              "kind": "aliasName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "intrinsic",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Convert string literal type to uppercase",
              "kind": "text"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIErrorConstructor",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "WeakKey",
          "kind": "type",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "WeakKey",
              "kind": "aliasName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=",
              "kind": "operator"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "object",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "WeakKeyTypes",
          "kind": "interface",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "WeakKeyTypes",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Stores types to be used with WeakSet, WeakMap, WeakRef, and FinalizationRegistry",
              "kind": "text"
            }
          ]
        },
        {
          "name": "ImportAssertions",
          "kind": "interface",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ImportAssertions",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "The type for the `assert` property of the optional second argument to `import()`.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated"
            }
          ]
        }
      ],
      "defaultCommitCharacters": []
    }
  }
]