// === Completions ===
=== /tests/cases/fourslash/completionsStringMethods.ts ===
// var s = "foo".
//               ^
// | ----------------------------------------------------------------------
// | (method) String.charAt(pos: number): string
// | (method) String.charCodeAt(index: number): number
// | (method) String.concat(...strings: string[]): string
// | (method) String.indexOf(searchString: string, position?: number): number
// | (method) String.lastIndexOf(searchString: string, position?: number): number
// | (property) String.length: number
// | (method) String.localeCompare(that: string): number (+1 overload)
// | (method) String.match(regexp: string | RegExp): RegExpMatchArray | null
// | (method) String.replace(searchValue: string | RegExp, replaceValue: string): string (+1 overload)
// | (method) String.search(regexp: string | RegExp): number
// | (method) String.slice(start?: number, end?: number): string
// | (method) String.split(separator: string | RegExp, limit?: number): string[]
// | (method) String.substring(start: number, end?: number): string
// | (method) String.toLocaleLowerCase(locales?: string | string[]): string
// | (method) String.toLocaleUpperCase(locales?: string | string[]): string
// | (method) String.toLowerCase(): string
// | (method) String.toString(): string
// | (method) String.toUpperCase(): string
// | (method) String.trim(): string
// | (method) String.valueOf(): string
// | (method) String.substr(from: number, length?: number): string
// | ----------------------------------------------------------------------

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsStringMethods.ts",
      "position": 14,
      "name": "1"
    },
    "item": {
      "flags": 0,
      "isGlobalCompletion": false,
      "isMemberCompletion": true,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "charAt",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "charAt",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pos",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the character at the specified index.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "pos",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The zero-based index of the desired character.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "charCodeAt",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "charCodeAt",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "index",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the Unicode value of the character at the specified location.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "index",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "concat",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "concat",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "strings",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string that contains the concatenation of two or more strings.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "strings",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The strings to append to the end of the string.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "indexOf",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "indexOf",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "searchString",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "position",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the position of the first occurrence of a substring.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "searchString",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The substring to search for in the string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "position",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "lastIndexOf",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "lastIndexOf",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "searchString",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "position",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the last occurrence of a substring in the string.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "searchString",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The substring to search for.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "position",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The index at which to begin searching. If omitted, the search begins at the end of the string.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "length",
          "kind": "property",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "property",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "length",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the length of a String object.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "localeCompare",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "localeCompare",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "that",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether two strings are equivalent in the current locale.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "that",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "String to compare to target string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "match",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "match",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "regexp",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpMatchArray",
              "kind": "interfaceName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "null",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Matches a string with a regular expression, and returns an array containing the results of that search.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "regexp",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A variable name or string literal containing the regular expression pattern and flags.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "replace",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "replace",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "searchValue",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "replaceValue",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Replaces text in a string, using a regular expression or search string.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "searchValue",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string or regular expression to search for.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "replaceValue",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string containing the text to replace. When the ",
                  "kind": "text"
                },
                {
                  "text": "{@linkcode ",
                  "kind": "link"
                },
                {
                  "text": "searchValue",
                  "kind": "linkName",
                  "target": {
                    "fileName": "lib.d.ts",
                    "textSpan": {
                      "start": "--",
                      "length": "--"
                    }
                  }
                },
                {
                  "text": "}",
                  "kind": "link"
                },
                {
                  "text": " is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of ",
                  "kind": "text"
                },
                {
                  "text": "{@linkcode ",
                  "kind": "link"
                },
                {
                  "text": "searchValue",
                  "kind": "linkName",
                  "target": {
                    "fileName": "lib.d.ts",
                    "textSpan": {
                      "start": "--",
                      "length": "--"
                    }
                  }
                },
                {
                  "text": "}",
                  "kind": "link"
                },
                {
                  "text": " is replaced.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "search",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "search",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "regexp",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Finds the first substring match in a regular expression search.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "regexp",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The regular expression pattern and applicable flags.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "slice",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "slice",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "start",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "end",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a section of a string.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "start",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The index to the beginning of the specified portion of stringObj.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "end",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "split",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "split",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "separator",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "limit",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "Split a string into substrings using the specified separator and return them as an array.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "separator",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "limit",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value used to limit the number of elements returned in the array.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "substring",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "substring",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "start",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "end",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the substring at the specified location within a String object.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "start",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The zero-based index number indicating the beginning of the substring.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "end",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "toLocaleLowerCase",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toLocaleLowerCase",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "locales",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "toLocaleUpperCase",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toLocaleUpperCase",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "locales",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "toLowerCase",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toLowerCase",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts all the alphabetic characters in a string to lowercase.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "toString",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toString",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a string representation of a string.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "toUpperCase",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "toUpperCase",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts all the alphabetic characters in a string to uppercase.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "trim",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "trim",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Removes the leading and trailing white space and line terminator characters from a string.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "valueOf",
          "kind": "method",
          "kindModifiers": "declare",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "valueOf",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns the primitive value of the specified object.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "substr",
          "kind": "method",
          "kindModifiers": "deprecated,declare",
          "sortText": "z11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "method",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "substr",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "from",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "length",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets a substring beginning at the specified location and having the specified length.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "from",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The starting position of the desired substring. The index of the first character in the string is zero.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "length",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "The number of characters to include in the returned substring.",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "defaultCommitCharacters": [
        ".",
        ",",
        ";"
      ]
    }
  }
]