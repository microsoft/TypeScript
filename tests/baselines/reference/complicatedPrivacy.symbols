//// [tests/cases/compiler/complicatedPrivacy.ts] ////

=== complicatedPrivacy.ts ===
namespace m1 {
>m1 : Symbol(m1, Decl(complicatedPrivacy.ts, 0, 0))

    export namespace m2 {
>m2 : Symbol(m2, Decl(complicatedPrivacy.ts, 0, 14))


        export function f1(c1: C1) {
>f1 : Symbol(f1, Decl(complicatedPrivacy.ts, 1, 25))
>c1 : Symbol(c1, Decl(complicatedPrivacy.ts, 4, 27))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
        }
        export function f2(c2: C2) {
>f2 : Symbol(f2, Decl(complicatedPrivacy.ts, 5, 9))
>c2 : Symbol(c2, Decl(complicatedPrivacy.ts, 6, 27))
>C2 : Symbol(C2, Decl(complicatedPrivacy.ts, 7, 9))
        }

        export class C2 implements m3.i3 {
>C2 : Symbol(C2, Decl(complicatedPrivacy.ts, 7, 9))
>m3.i3 : Symbol(m3.i3, Decl(complicatedPrivacy.ts, 45, 9))
>m3 : Symbol(m3, Decl(complicatedPrivacy.ts, 42, 5))
>i3 : Symbol(m3.i3, Decl(complicatedPrivacy.ts, 45, 9))

            public get p1(arg) {
>p1 : Symbol(C2.p1, Decl(complicatedPrivacy.ts, 9, 42), Decl(complicatedPrivacy.ts, 12, 13))
>arg : Symbol(arg, Decl(complicatedPrivacy.ts, 10, 26))

                return new C1();
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
            }

            public set p1(arg1: C1) {
>p1 : Symbol(C2.p1, Decl(complicatedPrivacy.ts, 9, 42), Decl(complicatedPrivacy.ts, 12, 13))
>arg1 : Symbol(arg1, Decl(complicatedPrivacy.ts, 14, 26))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
            }

            public f55() {
>f55 : Symbol(C2.f55, Decl(complicatedPrivacy.ts, 15, 13))

                return "Hello world";
            }
        }
    }

    export function f2(arg1: { x?: C1, y: number }) {
>f2 : Symbol(f2, Decl(complicatedPrivacy.ts, 21, 5))
>arg1 : Symbol(arg1, Decl(complicatedPrivacy.ts, 23, 23))
>x : Symbol(x, Decl(complicatedPrivacy.ts, 23, 30))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
>y : Symbol(y, Decl(complicatedPrivacy.ts, 23, 38))
    }

    export function f3(): {
>f3 : Symbol(f3, Decl(complicatedPrivacy.ts, 24, 5))

        (a: number) : C1;
>a : Symbol(a, Decl(complicatedPrivacy.ts, 27, 9))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))

    } {
        return null;
    }

    export function f4(arg1: 
>f4 : Symbol(f4, Decl(complicatedPrivacy.ts, 30, 5))
>arg1 : Symbol(arg1, Decl(complicatedPrivacy.ts, 32, 23))
    {
    [number]: C1; // Used to be indexer, now it is a computed property
>[number] : Symbol([number], Decl(complicatedPrivacy.ts, 33, 5))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))

    }) {
    }


    export function f5(arg2: {
>f5 : Symbol(f5, Decl(complicatedPrivacy.ts, 36, 5))
>arg2 : Symbol(arg2, Decl(complicatedPrivacy.ts, 39, 23))

        new (arg1: C1) : C1
>arg1 : Symbol(arg1, Decl(complicatedPrivacy.ts, 40, 13))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))

    }) {
    }
    namespace m3 {
>m3 : Symbol(m3, Decl(complicatedPrivacy.ts, 42, 5))

        function f2(f1: C1) {
>f2 : Symbol(f2, Decl(complicatedPrivacy.ts, 43, 18))
>f1 : Symbol(f1, Decl(complicatedPrivacy.ts, 44, 20))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
        }

        export interface i3 {
>i3 : Symbol(i3, Decl(complicatedPrivacy.ts, 45, 9))

            f55(): string;
>f55 : Symbol(i3.f55, Decl(complicatedPrivacy.ts, 47, 29))
        }
    }

    class C1 {
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
    }

    interface i {
>i : Symbol(i, Decl(complicatedPrivacy.ts, 53, 5))

        x: number;
>x : Symbol(i.x, Decl(complicatedPrivacy.ts, 55, 17))
    }

    export class C5 implements i {
>C5 : Symbol(C5, Decl(complicatedPrivacy.ts, 57, 5))
>i : Symbol(i, Decl(complicatedPrivacy.ts, 53, 5))

        public x: number;
>x : Symbol(C5.x, Decl(complicatedPrivacy.ts, 59, 34))
    }

    export var v2: C1[];
>v2 : Symbol(v2, Decl(complicatedPrivacy.ts, 63, 14))
>C1 : Symbol(C1, Decl(complicatedPrivacy.ts, 50, 5))
}

class C2 {
>C2 : Symbol(C2, Decl(complicatedPrivacy.ts, 64, 1))
}

namespace m2 {
>m2 : Symbol(m2, Decl(complicatedPrivacy.ts, 67, 1))

    export namespace m3 {
>m3 : Symbol(m3, Decl(complicatedPrivacy.ts, 69, 14))

        export class c_pr  implements mglo5.i5, mglo5.i6 {
>c_pr : Symbol(c_pr, Decl(complicatedPrivacy.ts, 70, 25))
>mglo5.i5 : Symbol(mglo5.i5, Decl(complicatedPrivacy.ts, 94, 17))
>mglo5 : Symbol(mglo5, Decl(complicatedPrivacy.ts, 92, 1))
>i5 : Symbol(mglo5.i5, Decl(complicatedPrivacy.ts, 94, 17))
>mglo5 : Symbol(mglo5, Decl(complicatedPrivacy.ts, 92, 1))

            f1() {
>f1 : Symbol(c_pr.f1, Decl(complicatedPrivacy.ts, 72, 58))

                return "Hello";
            }
        }
        
        namespace m4 {
>m4 : Symbol(m4, Decl(complicatedPrivacy.ts, 76, 9))

            class C {
>C : Symbol(C, Decl(complicatedPrivacy.ts, 78, 22))
            }
            namespace m5 {
>m5 : Symbol(m5, Decl(complicatedPrivacy.ts, 80, 13))
                
                export namespace m6 {
>m6 : Symbol(m6, Decl(complicatedPrivacy.ts, 81, 26))

                    function f1() {
>f1 : Symbol(f1, Decl(complicatedPrivacy.ts, 83, 37))

                        return new C();
>C : Symbol(C, Decl(complicatedPrivacy.ts, 78, 22))
                    }
                }
            }
        }

    }
}

namespace mglo5 {
>mglo5 : Symbol(mglo5, Decl(complicatedPrivacy.ts, 92, 1))

    export interface i5 {
>i5 : Symbol(i5, Decl(complicatedPrivacy.ts, 94, 17))

        f1(): string;
>f1 : Symbol(i5.f1, Decl(complicatedPrivacy.ts, 95, 25))
    }

    interface i6 {
>i6 : Symbol(i6, Decl(complicatedPrivacy.ts, 97, 5))

        f6(): number;
>f6 : Symbol(i6.f6, Decl(complicatedPrivacy.ts, 99, 18))
    }
}

