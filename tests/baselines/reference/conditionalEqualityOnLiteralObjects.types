//// [tests/cases/compiler/conditionalEqualityOnLiteralObjects.ts] ////

=== conditionalEqualityOnLiteralObjects.ts ===
const a = { a: 1 }
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^

const b = [1]
>b : number[]
>  : ^^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^

if ({ a: 1 } === { a: 1 }) {
>{ a: 1 } === { a: 1 } : boolean
>                      : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if ([1] === [1]) {
>[1] === [1] : boolean
>            : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if (a === { a: 1 }) {
>a === { a: 1 } : boolean
>               : ^^^^^^^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if (b === [1]) {
>b === [1] : boolean
>          : ^^^^^^^
>b : number[]
>  : ^^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if ({ a: 1 } === a) {
>{ a: 1 } === a : boolean
>               : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
}
if ([1] === b) {
>[1] === b : boolean
>          : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>b : number[]
>  : ^^^^^^^^
}

if ({ a: 1 } !== { a: 1 }) {
>{ a: 1 } !== { a: 1 } : boolean
>                      : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if ([1] !== [1]) {
>[1] !== [1] : boolean
>            : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if (a !== { a: 1 }) {
>a !== { a: 1 } : boolean
>               : ^^^^^^^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if (b !== [1]) {
>b !== [1] : boolean
>          : ^^^^^^^
>b : number[]
>  : ^^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if ({ a: 1 } !== a) {
>{ a: 1 } !== a : boolean
>               : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
}
if ([1] !== b) {
>[1] !== b : boolean
>          : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>b : number[]
>  : ^^^^^^^^
}

if ({ a: 1 } == { a: 1 }) {
>{ a: 1 } == { a: 1 } : boolean
>                     : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if ([1] == [1]) {
>[1] == [1] : boolean
>           : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if (a == { a: 1 }) {
>a == { a: 1 } : boolean
>              : ^^^^^^^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if (b == [1]) {
>b == [1] : boolean
>         : ^^^^^^^
>b : number[]
>  : ^^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if ({ a: 1 } == a) {
>{ a: 1 } == a : boolean
>              : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
}
if ([1] == b) {
>[1] == b : boolean
>         : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>b : number[]
>  : ^^^^^^^^
}

if ({ a: 1 } != { a: 1 }) {
>{ a: 1 } != { a: 1 } : boolean
>                     : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if ([1] != [1]) {
>[1] != [1] : boolean
>           : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if (a != { a: 1 }) {
>a != { a: 1 } : boolean
>              : ^^^^^^^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
}
if (b != [1]) {
>b != [1] : boolean
>         : ^^^^^^^
>b : number[]
>  : ^^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
}
if ({ a: 1 } != a) {
>{ a: 1 } != a : boolean
>              : ^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>a : { a: number; }
>  : ^^^^^^^^^^^^^^
}
if ([1] != b) {
>[1] != b : boolean
>         : ^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
>b : number[]
>  : ^^^^^^^^
}

