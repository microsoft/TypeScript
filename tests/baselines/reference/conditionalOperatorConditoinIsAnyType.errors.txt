conditionalOperatorConditoinIsAnyType.ts(26,1): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(27,1): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(28,1): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(29,1): error TS2872: This kind of expression is always truthy.
conditionalOperatorConditoinIsAnyType.ts(30,1): error TS2872: This kind of expression is always truthy.
conditionalOperatorConditoinIsAnyType.ts(31,1): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(49,20): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(50,24): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(51,23): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(52,23): error TS2872: This kind of expression is always truthy.
conditionalOperatorConditoinIsAnyType.ts(53,23): error TS2872: This kind of expression is always truthy.
conditionalOperatorConditoinIsAnyType.ts(54,32): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(55,32): error TS2873: This kind of expression is always falsy.
conditionalOperatorConditoinIsAnyType.ts(56,32): error TS2872: This kind of expression is always truthy.


==== conditionalOperatorConditoinIsAnyType.ts (14 errors) ====
    //Cond ? Expr1 : Expr2,  Cond is of any type, Expr1 and Expr2 have the same type
    var condAny: any;
    var x: any;
    
    var exprAny1: any;
    var exprBoolean1: boolean;
    var exprNumber1: number;
    var exprString1: string;
    var exprIsObject1: Object;
    
    var exprAny2: any;
    var exprBoolean2: boolean;
    var exprNumber2: number;
    var exprString2: string;
    var exprIsObject2: Object;
    
    //Cond is an any type variable
    condAny ? exprAny1 : exprAny2;
    condAny ? exprBoolean1 : exprBoolean2;
    condAny ? exprNumber1 : exprNumber2;
    condAny ? exprString1 : exprString2;
    condAny ? exprIsObject1 : exprIsObject2;
    condAny ? exprString1 : exprBoolean1; // union
    
    //Cond is an any type literal
    null ? exprAny1 : exprAny2;
    ~~~~
!!! error TS2873: This kind of expression is always falsy.
    null ? exprBoolean1 : exprBoolean2;
    ~~~~
!!! error TS2873: This kind of expression is always falsy.
    undefined ? exprNumber1 : exprNumber2;
    ~~~~~~~~~
!!! error TS2873: This kind of expression is always falsy.
    [null, undefined] ? exprString1 : exprString2;
    ~~~~~~~~~~~~~~~~~
!!! error TS2872: This kind of expression is always truthy.
    [null, undefined] ? exprIsObject1 : exprIsObject2;
    ~~~~~~~~~~~~~~~~~
!!! error TS2872: This kind of expression is always truthy.
    undefined ? exprString1 : exprBoolean1; // union
    ~~~~~~~~~
!!! error TS2873: This kind of expression is always falsy.
    
    //Cond is an any type expression
    x.doSomeThing() ? exprAny1 : exprAny2;
    x("x") ? exprBoolean1 : exprBoolean2;
    x(x) ? exprNumber1 : exprNumber2;
    x("x") ? exprString1 : exprString2;
    x.doSomeThing() ? exprIsObject1 : exprIsObject2;
    x.doSomeThing() ? exprString1 : exprBoolean1; // union
    
    //Results shoud be same as Expr1 and Expr2
    var resultIsAny1 = condAny ? exprAny1 : exprAny2;
    var resultIsBoolean1 = condAny ? exprBoolean1 : exprBoolean2;
    var resultIsNumber1 = condAny ? exprNumber1 : exprNumber2;
    var resultIsString1 = condAny ? exprString1 : exprString2;
    var resultIsObject1 = condAny ? exprIsObject1 : exprIsObject2;
    var resultIsStringOrBoolean1 = condAny ? exprString1 : exprBoolean1; // union
    
    var resultIsAny2 = null ? exprAny1 : exprAny2;
                       ~~~~
!!! error TS2873: This kind of expression is always falsy.
    var resultIsBoolean2 = null ? exprBoolean1 : exprBoolean2;
                           ~~~~
!!! error TS2873: This kind of expression is always falsy.
    var resultIsNumber2 = undefined ? exprNumber1 : exprNumber2;
                          ~~~~~~~~~
!!! error TS2873: This kind of expression is always falsy.
    var resultIsString2 = [null, undefined] ? exprString1 : exprString2;
                          ~~~~~~~~~~~~~~~~~
!!! error TS2872: This kind of expression is always truthy.
    var resultIsObject2 = [null, undefined] ? exprIsObject1 : exprIsObject2;
                          ~~~~~~~~~~~~~~~~~
!!! error TS2872: This kind of expression is always truthy.
    var resultIsStringOrBoolean2 = null ? exprString1 : exprBoolean1; // union
                                   ~~~~
!!! error TS2873: This kind of expression is always falsy.
    var resultIsStringOrBoolean3 = undefined ? exprString1 : exprBoolean1; // union
                                   ~~~~~~~~~
!!! error TS2873: This kind of expression is always falsy.
    var resultIsStringOrBoolean4 = [null, undefined] ? exprString1 : exprBoolean1; // union
                                   ~~~~~~~~~~~~~~~~~
!!! error TS2872: This kind of expression is always truthy.
    
    var resultIsAny3 = x.doSomeThing() ? exprAny1 : exprAny2;
    var resultIsBoolean3 = x("x") ? exprBoolean1 : exprBoolean2;
    var resultIsNumber3 = x(x) ? exprNumber1 : exprNumber2;
    var resultIsString3 = x("x") ? exprString1 : exprString2;
    var resultIsObject3 = x.doSomeThing() ? exprIsObject1 : exprIsObject2;
    var resultIsStringOrBoolean5 = x.doSomeThing() ? exprString1 : exprBoolean1; // union