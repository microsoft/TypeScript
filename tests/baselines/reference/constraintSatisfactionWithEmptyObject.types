//// [tests/cases/conformance/types/typeParameters/typeArgumentLists/constraintSatisfactionWithEmptyObject.ts] ////

=== constraintSatisfactionWithEmptyObject.ts ===
// valid uses of a basic object constraint, no errors expected

// Object constraint
function foo<T extends Object>(x: T) { }
>foo : <T extends Object>(x: T) => void
>    : ^ ^^^^^^^^^      ^^ ^^ ^^^^^^^^^
>x : T
>  : ^

var r = foo({});
>r : void
>  : ^^^^
>foo({}) : void
>        : ^^^^
>foo : <T extends Object>(x: T) => void
>    : ^ ^^^^^^^^^      ^^ ^^ ^^^^^^^^^
>{} : {}
>   : ^^

var a = {};
>a : {}
>  : ^^
>{} : {}
>   : ^^

var r = foo({});
>r : void
>  : ^^^^
>foo({}) : void
>        : ^^^^
>foo : <T extends Object>(x: T) => void
>    : ^ ^^^^^^^^^      ^^ ^^ ^^^^^^^^^
>{} : {}
>   : ^^

class C<T extends Object> {
>C : C<T>
>  : ^^^^

    constructor(public x: T) { }
>x : T
>  : ^
}

var r2 = new C({});
>r2 : C<{}>
>   : ^^^^^
>new C({}) : C<{}>
>          : ^^^^^
>C : typeof C
>  : ^^^^^^^^
>{} : {}
>   : ^^

interface I<T extends Object> {
    x: T;
>x : T
>  : ^
}
var i: I<{}>;
>i : I<{}>
>  : ^^^^^

// {} constraint
function foo2<T extends {}>(x: T) { }
>foo2 : <T extends {}>(x: T) => void
>     : ^ ^^^^^^^^^  ^^ ^^ ^^^^^^^^^
>x : T
>  : ^

var r = foo2({});
>r : void
>  : ^^^^
>foo2({}) : void
>         : ^^^^
>foo2 : <T extends {}>(x: T) => void
>     : ^ ^^^^^^^^^  ^^ ^^ ^^^^^^^^^
>{} : {}
>   : ^^

var a = {};
>a : {}
>  : ^^
>{} : {}
>   : ^^

var r = foo2({});
>r : void
>  : ^^^^
>foo2({}) : void
>         : ^^^^
>foo2 : <T extends {}>(x: T) => void
>     : ^ ^^^^^^^^^  ^^ ^^ ^^^^^^^^^
>{} : {}
>   : ^^

class C2<T extends {}> {
>C2 : C2<T>
>   : ^^^^^

    constructor(public x: T) { }
>x : T
>  : ^
}

var r2 = new C2({});
>r2 : C<{}>
>   : ^^^^^
>new C2({}) : C2<{}>
>           : ^^^^^^
>C2 : typeof C2
>   : ^^^^^^^^^
>{} : {}
>   : ^^

interface I2<T extends {}> {
    x: T;
>x : T
>  : ^
}
var i2: I2<{}>;
>i2 : I2<{}>
>   : ^^^^^^


