//// [tests/cases/conformance/es2020/constructBigint.ts] ////

=== constructBigint.ts ===
BigInt(1);
>BigInt(1) : bigint
>          : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>1 : 1
>  : ^

BigInt(1n);
>BigInt(1n) : bigint
>           : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>1n : 1n
>   : ^^

BigInt("0");
>BigInt("0") : bigint
>            : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>"0" : "0"
>    : ^^^

BigInt(false);
>BigInt(false) : bigint
>              : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>false : false
>      : ^^^^^

BigInt(Symbol());
>BigInt(Symbol()) : bigint
>                 : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>Symbol() : symbol
>         : ^^^^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^

BigInt({ e: 1, m: 1 })
>BigInt({ e: 1, m: 1 }) : bigint
>                       : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>{ e: 1, m: 1 } : { e: number; m: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>e : number
>  : ^^^^^^
>1 : 1
>  : ^
>m : number
>  : ^^^^^^
>1 : 1
>  : ^

BigInt(null);
>BigInt(null) : bigint
>             : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^

BigInt(undefined)
>BigInt(undefined) : bigint
>                  : ^^^^^^
>BigInt : BigIntConstructor
>       : ^^^^^^^^^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^


