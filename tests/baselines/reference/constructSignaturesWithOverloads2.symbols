//// [tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithOverloads2.ts] ////

=== constructSignaturesWithOverloads2.ts ===
// No errors expected for basic overloads of construct signatures with merged declarations

// clodules
class C {
>C : Symbol(C, Decl(constructSignaturesWithOverloads2.ts, 0, 0), Decl(constructSignaturesWithOverloads2.ts, 7, 1))

    constructor(x: number, y?: string);
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 4, 16))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 4, 26))

    constructor(x: number, y: string);
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 5, 16))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 5, 26))

    constructor(x: number) { }
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 6, 16))
}
namespace C {
>C : Symbol(C, Decl(constructSignaturesWithOverloads2.ts, 0, 0), Decl(constructSignaturesWithOverloads2.ts, 7, 1))

    export var x = 1;
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 9, 14))
}

var r1 = new C(1, '');
>r1 : Symbol(r1, Decl(constructSignaturesWithOverloads2.ts, 12, 3))
>C : Symbol(C, Decl(constructSignaturesWithOverloads2.ts, 0, 0), Decl(constructSignaturesWithOverloads2.ts, 7, 1))

class C2<T> {
>C2 : Symbol(C2, Decl(constructSignaturesWithOverloads2.ts, 12, 22), Decl(constructSignaturesWithOverloads2.ts, 18, 1))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 14, 9))

    constructor(x: T, y?: string);
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 15, 16))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 14, 9))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 15, 21))

    constructor(x: T, y: string);
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 16, 16))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 14, 9))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 16, 21))

    constructor(x: T) { }
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 17, 16))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 14, 9))
}
namespace C2 {
>C2 : Symbol(C2, Decl(constructSignaturesWithOverloads2.ts, 12, 22), Decl(constructSignaturesWithOverloads2.ts, 18, 1))

    export var x = 1;
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 20, 14))
}

var r2 = new C2(1, '');
>r2 : Symbol(r2, Decl(constructSignaturesWithOverloads2.ts, 23, 3))
>C2 : Symbol(C2, Decl(constructSignaturesWithOverloads2.ts, 12, 22), Decl(constructSignaturesWithOverloads2.ts, 18, 1))

// merged interfaces
interface I {
>I : Symbol(I, Decl(constructSignaturesWithOverloads2.ts, 23, 23), Decl(constructSignaturesWithOverloads2.ts, 29, 1))

    new (x: number, y?: string): C;
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 27, 9))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 27, 19))
>C : Symbol(C, Decl(constructSignaturesWithOverloads2.ts, 0, 0), Decl(constructSignaturesWithOverloads2.ts, 7, 1))

    new (x: number, y: string): C;
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 28, 9))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 28, 19))
>C : Symbol(C, Decl(constructSignaturesWithOverloads2.ts, 0, 0), Decl(constructSignaturesWithOverloads2.ts, 7, 1))
}

interface I<T> {
>I : Symbol(I, Decl(constructSignaturesWithOverloads2.ts, 23, 23), Decl(constructSignaturesWithOverloads2.ts, 29, 1))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 31, 12))

    new (x: T, y?: number): C2<T>;
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 32, 9))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 31, 12))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 32, 14))
>C2 : Symbol(C2, Decl(constructSignaturesWithOverloads2.ts, 12, 22), Decl(constructSignaturesWithOverloads2.ts, 18, 1))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 31, 12))

    new (x: T, y: number): C2<T>;
>x : Symbol(x, Decl(constructSignaturesWithOverloads2.ts, 33, 9))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 31, 12))
>y : Symbol(y, Decl(constructSignaturesWithOverloads2.ts, 33, 14))
>C2 : Symbol(C2, Decl(constructSignaturesWithOverloads2.ts, 12, 22), Decl(constructSignaturesWithOverloads2.ts, 18, 1))
>T : Symbol(T, Decl(constructSignaturesWithOverloads2.ts, 31, 12))
}

var i2: I<number>;
>i2 : Symbol(i2, Decl(constructSignaturesWithOverloads2.ts, 36, 3))
>I : Symbol(I, Decl(constructSignaturesWithOverloads2.ts, 23, 23), Decl(constructSignaturesWithOverloads2.ts, 29, 1))

var r4 = new i2(1, '');
>r4 : Symbol(r4, Decl(constructSignaturesWithOverloads2.ts, 37, 3))
>i2 : Symbol(i2, Decl(constructSignaturesWithOverloads2.ts, 36, 3))

var r5 = new i2(1, 1);
>r5 : Symbol(r5, Decl(constructSignaturesWithOverloads2.ts, 38, 3))
>i2 : Symbol(i2, Decl(constructSignaturesWithOverloads2.ts, 36, 3))

