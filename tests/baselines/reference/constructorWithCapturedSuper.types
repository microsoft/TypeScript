//// [tests/cases/compiler/constructorWithCapturedSuper.ts] ////

=== constructorWithCapturedSuper.ts ===
let oneA: A;
>oneA : A
>     : ^

class A {
>A : A
>  : ^

    constructor() {
        return oneA;
>oneA : A
>     : ^
    }
}

class B extends A {
>B : B
>  : ^
>A : A
>  : ^

    constructor(x: number) {
>x : number
>  : ^^^^^^

        super();
>super() : void
>        : ^^^^
>super : typeof A
>      : ^^^^^^^^

        if (x === 1) {
>x === 1 : boolean
>        : ^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

            return;
        }
        while (x < 2) {
>x < 2 : boolean
>      : ^^^^^^^
>x : number
>  : ^^^^^^
>2 : 2
>  : ^

            return;
        }
        try {
            return
        }
        catch (e) {
>e : any

            return;
        }
        finally {
            return;
        }
    }
}

class C extends A {
>C : C
>  : ^
>A : A
>  : ^

    constructor(x: number) {
>x : number
>  : ^^^^^^

        super();
>super() : void
>        : ^^^^
>super : typeof A
>      : ^^^^^^^^

        for (let i = 0; i < 10; ++i) {
>i : number
>  : ^^^^^^
>0 : 0
>  : ^
>i < 10 : boolean
>       : ^^^^^^^
>i : number
>  : ^^^^^^
>10 : 10
>   : ^^
>++i : number
>    : ^^^^^^
>i : number
>  : ^^^^^^

            () => i + x;
>() => i + x : () => number
>            : ^^^^^^^^^^^^
>i + x : number
>      : ^^^^^^
>i : number
>  : ^^^^^^
>x : number
>  : ^^^^^^

            if (x === 1) {
>x === 1 : boolean
>        : ^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

                return;
            } 
        }
    }
}

class D extends A {
>D : D
>  : ^
>A : A
>  : ^

    constructor(x: number) {
>x : number
>  : ^^^^^^

        super();
>super() : void
>        : ^^^^
>super : typeof A
>      : ^^^^^^^^

        () => {
>() => {            return;        } : () => void
>                                    : ^^^^^^^^^^

            return;
        }
        function foo() {
>foo : () => void
>    : ^^^^^^^^^^

            return;
        }
    }
}
