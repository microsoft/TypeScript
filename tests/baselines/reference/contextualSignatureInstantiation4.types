//// [tests/cases/compiler/contextualSignatureInstantiation4.ts] ////

=== contextualSignatureInstantiation4.ts ===
// Repros from #32976

declare class Banana<T extends string> { constructor(a: string, property: T) }
>Banana : Banana<T>
>       : ^^^^^^^^^
>a : string
>  : ^^^^^^
>property : T
>         : ^

declare function fruitFactory1<TFruit>(Fruit: new (...args: any[]) => TFruit): TFruit
>fruitFactory1 : <TFruit>(Fruit: new (...args: any[]) => TFruit) => TFruit
>              : ^      ^^     ^^                              ^^^^^      
>Fruit : new (...args: any[]) => TFruit
>      : ^^^^^^^^    ^^     ^^^^^      
>args : any[]
>     : ^^^^^

const banana1 = fruitFactory1(Banana) // Banana<any>
>banana1 : Banana<any>
>        : ^^^^^^^^^^^
>fruitFactory1(Banana) : Banana<any>
>                      : ^^^^^^^^^^^
>fruitFactory1 : <TFruit>(Fruit: new (...args: any[]) => TFruit) => TFruit
>              : ^      ^^     ^^                              ^^^^^      
>Banana : typeof Banana
>       : ^^^^^^^^^^^^^

declare function fruitFactory2<TFruit>(Fruit: new (a: string, ...args: any[]) => TFruit): TFruit
>fruitFactory2 : <TFruit>(Fruit: new (a: string, ...args: any[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                         ^^^^^      
>Fruit : new (a: string, ...args: any[]) => TFruit
>      : ^^^^^ ^^      ^^^^^    ^^     ^^^^^      
>a : string
>  : ^^^^^^
>args : any[]
>     : ^^^^^

const banana2 = fruitFactory2(Banana) // Banana<any>
>banana2 : Banana<any>
>        : ^^^^^^^^^^^
>fruitFactory2(Banana) : Banana<any>
>                      : ^^^^^^^^^^^
>fruitFactory2 : <TFruit>(Fruit: new (a: string, ...args: any[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                         ^^^^^      
>Banana : typeof Banana
>       : ^^^^^^^^^^^^^

declare function fruitFactory3<TFruit>(Fruit: new (a: string, s: "foo", ...args: any[]) => TFruit): TFruit
>fruitFactory3 : <TFruit>(Fruit: new (a: string, s: "foo", ...args: any[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                                   ^^^^^      
>Fruit : new (a: string, s: "foo", ...args: any[]) => TFruit
>      : ^^^^^ ^^      ^^ ^^     ^^^^^    ^^     ^^^^^      
>a : string
>  : ^^^^^^
>s : "foo"
>  : ^^^^^
>args : any[]
>     : ^^^^^

const banana3 = fruitFactory3(Banana) // Banana<"foo">
>banana3 : Banana<"foo">
>        : ^^^^^^^^^^^^^
>fruitFactory3(Banana) : Banana<"foo">
>                      : ^^^^^^^^^^^^^
>fruitFactory3 : <TFruit>(Fruit: new (a: string, s: "foo", ...args: any[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                                   ^^^^^      
>Banana : typeof Banana
>       : ^^^^^^^^^^^^^

declare function fruitFactory4<TFruit>(Fruit: new (a: string, ...args: "foo"[]) => TFruit): TFruit
>fruitFactory4 : <TFruit>(Fruit: new (a: string, ...args: "foo"[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                           ^^^^^      
>Fruit : new (a: string, ...args: "foo"[]) => TFruit
>      : ^^^^^ ^^      ^^^^^    ^^       ^^^^^      
>a : string
>  : ^^^^^^
>args : "foo"[]
>     : ^^^^^^^

const banana4 = fruitFactory4(Banana) // Banana<"foo">
>banana4 : Banana<"foo">
>        : ^^^^^^^^^^^^^
>fruitFactory4(Banana) : Banana<"foo">
>                      : ^^^^^^^^^^^^^
>fruitFactory4 : <TFruit>(Fruit: new (a: string, ...args: "foo"[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                           ^^^^^      
>Banana : typeof Banana
>       : ^^^^^^^^^^^^^

declare function fruitFactory5<TFruit>(Fruit: new (...args: "foo"[]) => TFruit): TFruit
>fruitFactory5 : <TFruit>(Fruit: new (...args: "foo"[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                ^^^^^      
>Fruit : new (...args: "foo"[]) => TFruit
>      : ^^^^^^^^    ^^       ^^^^^      
>args : "foo"[]
>     : ^^^^^^^

const banana5 = fruitFactory5(Banana) // Banana<"foo">
>banana5 : Banana<"foo">
>        : ^^^^^^^^^^^^^
>fruitFactory5(Banana) : Banana<"foo">
>                      : ^^^^^^^^^^^^^
>fruitFactory5 : <TFruit>(Fruit: new (...args: "foo"[]) => TFruit) => TFruit
>              : ^      ^^     ^^                                ^^^^^      
>Banana : typeof Banana
>       : ^^^^^^^^^^^^^

