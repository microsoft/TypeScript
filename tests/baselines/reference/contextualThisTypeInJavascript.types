//// [tests/cases/conformance/types/thisType/contextualThisTypeInJavascript.ts] ////

=== context.js ===
const obj = {
>obj : { prop: number; method(): void; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    prop: 2,    method() {        this;        this.prop;        this.method;        this.unknown; // ok, obj has a string indexer    }} : { prop: number; method(): void; }
>                                                                                                                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    prop: 2,
>prop : number
>     : ^^^^^^
>2 : 2
>  : ^

    method() {
>method : () => void
>       : ^^^^^^^^^^

        this;
>this : { prop: number; method(): void; }
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        this.prop;
>this.prop : number
>          : ^^^^^^
>this : { prop: number; method(): void; }
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>prop : number
>     : ^^^^^^

        this.method;
>this.method : () => void
>            : ^^^^^^^^^^
>this : { prop: number; method(): void; }
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>method : () => void
>       : ^^^^^^^^^^

        this.unknown; // ok, obj has a string indexer
>this.unknown : any
>this : { prop: number; method(): void; }
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>unknown : any
>        : ^^^
    }
}

