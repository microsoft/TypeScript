//// [tests/cases/compiler/contextualTypeArrayReturnType.ts] ////

=== contextualTypeArrayReturnType.ts ===
interface IBookStyle {
    initialLeftPageTransforms?: (width: number) => NamedTransform[];
>initialLeftPageTransforms : (width: number) => NamedTransform[]
>                          : ^     ^^      ^^^^^                
>width : number
>      : ^^^^^^
}

interface NamedTransform {
    [name: string]: Transform3D;
>name : string
>     : ^^^^^^
}

interface Transform3D {
    cachedCss: string;
>cachedCss : string
>          : ^^^^^^
}

var style: IBookStyle = {
>style : IBookStyle
>      : ^^^^^^^^^^
>{    initialLeftPageTransforms: (width: number) => {        return [            {'ry': null }        ];    }} : { initialLeftPageTransforms: (width: number) => { ry: any; }[]; }
>                                                                                                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     ^^      ^^^^^^^^^^^^^^^^^^^^^^

    initialLeftPageTransforms: (width: number) => {
>initialLeftPageTransforms : (width: number) => { ry: any; }[]
>                          : ^     ^^      ^^^^^^^^^^^^^^^^^^^
>(width: number) => {        return [            {'ry': null }        ];    } : (width: number) => { ry: any; }[]
>                                                                             : ^     ^^      ^^^^^^^^^^^^^^^^^^^
>width : number
>      : ^^^^^^

        return [
>[            {'ry': null }        ] : { ry: null; }[]
>                                    : ^^^^^^^^^^^^^^^

            {'ry': null }
>{'ry': null } : { ry: null; }
>              : ^^^^^^^^^^^^^
>'ry' : null
>     : ^^^^

        ];
    }
}

