//// [tests/cases/compiler/contextualTypingOfAccessors.ts] ////

=== contextualTypingOfAccessors.ts ===
// not contextually typing accessors

var x: {
>x : { foo: (x: number) => number; }
>  : ^^^^^^^                     ^^^

   foo: (x: number) => number;
>foo : (x: number) => number
>    : ^ ^^      ^^^^^      
>x : number
>  : ^^^^^^
}
 
x = {
>x = {   get foo() {      return (n)=>n   },   set foo(x) {}} : { foo: (n: any) => any; }
>                                                             : ^^^^^^^^   ^^^^^^^^^^^^^^
>x : { foo: (x: number) => number; }
>  : ^^^^^^^                     ^^^
>{   get foo() {      return (n)=>n   },   set foo(x) {}} : { foo: (n: any) => any; }
>                                                         : ^^^^^^^^   ^^^^^^^^^^^^^^

   get foo() {
>foo : (n: any) => any
>    : ^ ^^^^^^^^^^^^^

      return (n)=>n
>(n)=>n : (n: any) => any
>       : ^ ^^^^^^^^^^^^^
>n : any
>n : any

   },
   set foo(x) {}
>foo : (n: any) => any
>    : ^ ^^^^^^^^^^^^^
>x : (n: any) => any
>  : ^ ^^^^^^^^^^^^^
}

