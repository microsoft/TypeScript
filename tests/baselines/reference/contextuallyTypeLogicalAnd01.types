//// [tests/cases/conformance/types/contextualTypes/logicalAnd/contextuallyTypeLogicalAnd01.ts] ////

=== contextuallyTypeLogicalAnd01.ts ===
let x: (a: string) => string;
>x : (a: string) => string
>  : ^ ^^      ^^^^^      
>a : string
>  : ^^^^^^

let y = true;
>y : boolean
>  : ^^^^^^^
>true : true
>     : ^^^^

x = y && (a => a);
>x = y && (a => a) : (a: string) => string
>                  : ^ ^^^^^^^^^^^^^^^^^^^
>x : (a: string) => string
>  : ^ ^^      ^^^^^      
>y && (a => a) : (a: string) => string
>              : ^ ^^^^^^^^^^^^^^^^^^^
>y : true
>  : ^^^^
>(a => a) : (a: string) => string
>         : ^ ^^^^^^^^^^^^^^^^^^^
>a => a : (a: string) => string
>       : ^ ^^^^^^^^^^^^^^^^^^^
>a : string
>  : ^^^^^^
>a : string
>  : ^^^^^^

