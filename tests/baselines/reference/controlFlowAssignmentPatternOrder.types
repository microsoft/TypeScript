//// [tests/cases/conformance/controlFlow/controlFlowAssignmentPatternOrder.ts] ////

=== controlFlowAssignmentPatternOrder.ts ===
// https://github.com/microsoft/TypeScript/pull/41094#issuecomment-716044363
declare function f(): void;
>f : () => void
>  : ^^^^^^    
{
    let a: 0 | 1 = 0;
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^

    let b: 0 | 1 | 9;
>b : 0 | 1 | 9
>  : ^^^^^^^^^

    [{ [(a = 1)]: b } = [9, a] as const] = [];
>[{ [(a = 1)]: b } = [9, a] as const] = [] : []
>                                          : ^^
>[{ [(a = 1)]: b } = [9, a] as const] : [readonly [9, 0]]
>                                     : ^^^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } = [9, a] as const : readonly [9, 0]
>                                   : ^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } : { 1: 0 | 1 | 9; }
>                 : ^^^^^^^^^^^^^^^^^
>[(a = 1)] : 0 | 1 | 9
>          : ^^^^^^^^^
>(a = 1) : 1
>        : ^
>a = 1 : 1
>      : ^
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^
>b : 0 | 1 | 9
>  : ^^^^^^^^^
>[9, a] as const : readonly [9, 0]
>                : ^^^^^^^^^^^^^^^
>[9, a] : readonly [9, 0]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a : 0
>  : ^
>[] : []
>   : ^^

    const bb: 0 = b;
>bb : 0
>   : ^
>b : 0
>  : ^
}
{
    let a: 0 | 1 = 1;
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^

    let b: 0 | 1 | 9;
>b : 0 | 1 | 9
>  : ^^^^^^^^^

    [{ [a]: b } = [9, a = 0] as const] = [];
>[{ [a]: b } = [9, a = 0] as const] = [] : []
>                                        : ^^
>[{ [a]: b } = [9, a = 0] as const] : [readonly [9, 0]]
>                                   : ^^^^^^^^^^^^^^^^^
>{ [a]: b } = [9, a = 0] as const : readonly [9, 0]
>                                 : ^^^^^^^^^^^^^^^
>{ [a]: b } : { 0: 0 | 1 | 9; }
>           : ^^^^^^^^^^^^^^^^^
>[a] : 0 | 1 | 9
>    : ^^^^^^^^^
>a : 0
>  : ^
>b : 0 | 1 | 9
>  : ^^^^^^^^^
>[9, a = 0] as const : readonly [9, 0]
>                    : ^^^^^^^^^^^^^^^
>[9, a = 0] : readonly [9, 0]
>           : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a = 0 : 0
>      : ^
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^
>[] : []
>   : ^^

    const bb: 9 = b;
>bb : 9
>   : ^
>b : 9
>  : ^
}
{
    let a: 0 | 1 = 0;
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^

    let b: 0 | 1 | 8 | 9;
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^

    [{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const];
>[{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const] : [readonly [9, 8]]
>                                                         : ^^^^^^^^^^^^^^^^^
>[{ [(a = 1)]: b } = [9, a] as const] : [readonly [9, 0]]
>                                     : ^^^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } = [9, a] as const : readonly [9, 0]
>                                   : ^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } : { 1: 0 | 1 | 9 | 8; }
>                 : ^^^^^^^^^^^^^^^^^^^^^
>[(a = 1)] : 0 | 1 | 9 | 8
>          : ^^^^^^^^^^^^^
>(a = 1) : 1
>        : ^
>a = 1 : 1
>      : ^
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^
>[9, a] as const : readonly [9, 0]
>                : ^^^^^^^^^^^^^^^
>[9, a] : readonly [9, 0]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a : 0
>  : ^
>[[9, 8] as const] : [readonly [9, 8]]
>                  : ^^^^^^^^^^^^^^^^^
>[9, 8] as const : readonly [9, 8]
>                : ^^^^^^^^^^^^^^^
>[9, 8] : readonly [9, 8]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>8 : 8
>  : ^

    const bb: 0 | 8 = b;
>bb : 0 | 8
>   : ^^^^^
>b : 0 | 8
>  : ^^^^^
}
{
    let a: 0 | 1 = 1;
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^

    let b: 0 | 1 | 8 | 9;
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^

    [{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const];
>[{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const] : [readonly [8, 9]]
>                                                       : ^^^^^^^^^^^^^^^^^
>[{ [a]: b } = [a = 0, 9] as const] : [readonly [0, 9]]
>                                   : ^^^^^^^^^^^^^^^^^
>{ [a]: b } = [a = 0, 9] as const : readonly [0, 9]
>                                 : ^^^^^^^^^^^^^^^
>{ [a]: b } : { 0: 0 | 1 | 9 | 8; }
>           : ^^^^^^^^^^^^^^^^^^^^^
>[a] : 0 | 1 | 9 | 8
>    : ^^^^^^^^^^^^^
>a : 0
>  : ^
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^
>[a = 0, 9] as const : readonly [0, 9]
>                    : ^^^^^^^^^^^^^^^
>[a = 0, 9] : readonly [0, 9]
>           : ^^^^^^^^^^^^^^^
>a = 0 : 0
>      : ^
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^
>9 : 9
>  : ^
>[[8, 9] as const] : [readonly [8, 9]]
>                  : ^^^^^^^^^^^^^^^^^
>[8, 9] as const : readonly [8, 9]
>                : ^^^^^^^^^^^^^^^
>[8, 9] : readonly [8, 9]
>       : ^^^^^^^^^^^^^^^
>8 : 8
>  : ^
>9 : 9
>  : ^

    const bb: 0 | 8 = b;
>bb : 0 | 8
>   : ^^^^^
>b : 0 | 8
>  : ^^^^^
}
// same as above but on left of a binary expression
{
    let a: 0 | 1 = 0;
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^

    let b: 0 | 1 | 9;
>b : 0 | 1 | 9
>  : ^^^^^^^^^

    [{ [(a = 1)]: b } = [9, a] as const] = [], f();
>[{ [(a = 1)]: b } = [9, a] as const] = [], f() : void
>                                               : ^^^^
>[{ [(a = 1)]: b } = [9, a] as const] = [] : []
>                                          : ^^
>[{ [(a = 1)]: b } = [9, a] as const] : [readonly [9, 0]]
>                                     : ^^^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } = [9, a] as const : readonly [9, 0]
>                                   : ^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } : { 1: 0 | 1 | 9; }
>                 : ^^^^^^^^^^^^^^^^^
>[(a = 1)] : 0 | 1 | 9
>          : ^^^^^^^^^
>(a = 1) : 1
>        : ^
>a = 1 : 1
>      : ^
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^
>b : 0 | 1 | 9
>  : ^^^^^^^^^
>[9, a] as const : readonly [9, 0]
>                : ^^^^^^^^^^^^^^^
>[9, a] : readonly [9, 0]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a : 0
>  : ^
>[] : []
>   : ^^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    

    const bb: 0 = b;
>bb : 0
>   : ^
>b : 0
>  : ^
}
{
    let a: 0 | 1 = 1;
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^

    let b: 0 | 1 | 9;
>b : 0 | 1 | 9
>  : ^^^^^^^^^

    [{ [a]: b } = [9, a = 0] as const] = [], f();
>[{ [a]: b } = [9, a = 0] as const] = [], f() : void
>                                             : ^^^^
>[{ [a]: b } = [9, a = 0] as const] = [] : []
>                                        : ^^
>[{ [a]: b } = [9, a = 0] as const] : [readonly [9, 0]]
>                                   : ^^^^^^^^^^^^^^^^^
>{ [a]: b } = [9, a = 0] as const : readonly [9, 0]
>                                 : ^^^^^^^^^^^^^^^
>{ [a]: b } : { 0: 0 | 1 | 9; }
>           : ^^^^^^^^^^^^^^^^^
>[a] : 0 | 1 | 9
>    : ^^^^^^^^^
>a : 0
>  : ^
>b : 0 | 1 | 9
>  : ^^^^^^^^^
>[9, a = 0] as const : readonly [9, 0]
>                    : ^^^^^^^^^^^^^^^
>[9, a = 0] : readonly [9, 0]
>           : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a = 0 : 0
>      : ^
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^
>[] : []
>   : ^^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    

    const bb: 9 = b;
>bb : 9
>   : ^
>b : 9
>  : ^
}
{
    let a: 0 | 1 = 0;
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^

    let b: 0 | 1 | 8 | 9;
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^

    [{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const], f();
>[{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const], f() : void
>                                                              : ^^^^
>[{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const] : [readonly [9, 8]]
>                                                         : ^^^^^^^^^^^^^^^^^
>[{ [(a = 1)]: b } = [9, a] as const] : [readonly [9, 0]]
>                                     : ^^^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } = [9, a] as const : readonly [9, 0]
>                                   : ^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } : { 1: 0 | 1 | 9 | 8; }
>                 : ^^^^^^^^^^^^^^^^^^^^^
>[(a = 1)] : 0 | 1 | 9 | 8
>          : ^^^^^^^^^^^^^
>(a = 1) : 1
>        : ^
>a = 1 : 1
>      : ^
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^
>[9, a] as const : readonly [9, 0]
>                : ^^^^^^^^^^^^^^^
>[9, a] : readonly [9, 0]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a : 0
>  : ^
>[[9, 8] as const] : [readonly [9, 8]]
>                  : ^^^^^^^^^^^^^^^^^
>[9, 8] as const : readonly [9, 8]
>                : ^^^^^^^^^^^^^^^
>[9, 8] : readonly [9, 8]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>8 : 8
>  : ^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    

    const bb: 0 | 8 = b;
>bb : 0 | 8
>   : ^^^^^
>b : 0 | 8
>  : ^^^^^
}
{
    let a: 0 | 1 = 1;
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^

    let b: 0 | 1 | 8 | 9;
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^

    [{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const], f();
>[{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const], f() : void
>                                                            : ^^^^
>[{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const] : [readonly [8, 9]]
>                                                       : ^^^^^^^^^^^^^^^^^
>[{ [a]: b } = [a = 0, 9] as const] : [readonly [0, 9]]
>                                   : ^^^^^^^^^^^^^^^^^
>{ [a]: b } = [a = 0, 9] as const : readonly [0, 9]
>                                 : ^^^^^^^^^^^^^^^
>{ [a]: b } : { 0: 0 | 1 | 9 | 8; }
>           : ^^^^^^^^^^^^^^^^^^^^^
>[a] : 0 | 1 | 9 | 8
>    : ^^^^^^^^^^^^^
>a : 0
>  : ^
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^
>[a = 0, 9] as const : readonly [0, 9]
>                    : ^^^^^^^^^^^^^^^
>[a = 0, 9] : readonly [0, 9]
>           : ^^^^^^^^^^^^^^^
>a = 0 : 0
>      : ^
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^
>9 : 9
>  : ^
>[[8, 9] as const] : [readonly [8, 9]]
>                  : ^^^^^^^^^^^^^^^^^
>[8, 9] as const : readonly [8, 9]
>                : ^^^^^^^^^^^^^^^
>[8, 9] : readonly [8, 9]
>       : ^^^^^^^^^^^^^^^
>8 : 8
>  : ^
>9 : 9
>  : ^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    

    const bb: 0 | 8 = b;
>bb : 0 | 8
>   : ^^^^^
>b : 0 | 8
>  : ^^^^^
}
// same as above but on right of a binary expression
{
    let a: 0 | 1 = 0;
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^

    let b: 0 | 1 | 9;
>b : 0 | 1 | 9
>  : ^^^^^^^^^

    f(), [{ [(a = 1)]: b } = [9, a] as const] = [];
>f(), [{ [(a = 1)]: b } = [9, a] as const] = [] : []
>                                               : ^^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    
>[{ [(a = 1)]: b } = [9, a] as const] = [] : []
>                                          : ^^
>[{ [(a = 1)]: b } = [9, a] as const] : [readonly [9, 0]]
>                                     : ^^^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } = [9, a] as const : readonly [9, 0]
>                                   : ^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } : { 1: 0 | 1 | 9; }
>                 : ^^^^^^^^^^^^^^^^^
>[(a = 1)] : 0 | 1 | 9
>          : ^^^^^^^^^
>(a = 1) : 1
>        : ^
>a = 1 : 1
>      : ^
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^
>b : 0 | 1 | 9
>  : ^^^^^^^^^
>[9, a] as const : readonly [9, 0]
>                : ^^^^^^^^^^^^^^^
>[9, a] : readonly [9, 0]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a : 0
>  : ^
>[] : []
>   : ^^

    const bb: 0 = b;
>bb : 0
>   : ^
>b : 0
>  : ^
}
{
    let a: 0 | 1 = 1;
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^

    let b: 0 | 1 | 9;
>b : 0 | 1 | 9
>  : ^^^^^^^^^

    f(), [{ [a]: b } = [9, a = 0] as const] = [];
>f(), [{ [a]: b } = [9, a = 0] as const] = [] : []
>                                             : ^^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    
>[{ [a]: b } = [9, a = 0] as const] = [] : []
>                                        : ^^
>[{ [a]: b } = [9, a = 0] as const] : [readonly [9, 0]]
>                                   : ^^^^^^^^^^^^^^^^^
>{ [a]: b } = [9, a = 0] as const : readonly [9, 0]
>                                 : ^^^^^^^^^^^^^^^
>{ [a]: b } : { 0: 0 | 1 | 9; }
>           : ^^^^^^^^^^^^^^^^^
>[a] : 0 | 1 | 9
>    : ^^^^^^^^^
>a : 0
>  : ^
>b : 0 | 1 | 9
>  : ^^^^^^^^^
>[9, a = 0] as const : readonly [9, 0]
>                    : ^^^^^^^^^^^^^^^
>[9, a = 0] : readonly [9, 0]
>           : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a = 0 : 0
>      : ^
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^
>[] : []
>   : ^^

    const bb: 9 = b;
>bb : 9
>   : ^
>b : 9
>  : ^
}
{
    let a: 0 | 1 = 0;
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^

    let b: 0 | 1 | 8 | 9;
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^

    f(), [{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const];
>f(), [{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const] : [readonly [9, 8]]
>                                                              : ^^^^^^^^^^^^^^^^^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    
>[{ [(a = 1)]: b } = [9, a] as const] = [[9, 8] as const] : [readonly [9, 8]]
>                                                         : ^^^^^^^^^^^^^^^^^
>[{ [(a = 1)]: b } = [9, a] as const] : [readonly [9, 0]]
>                                     : ^^^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } = [9, a] as const : readonly [9, 0]
>                                   : ^^^^^^^^^^^^^^^
>{ [(a = 1)]: b } : { 1: 0 | 1 | 9 | 8; }
>                 : ^^^^^^^^^^^^^^^^^^^^^
>[(a = 1)] : 0 | 1 | 9 | 8
>          : ^^^^^^^^^^^^^
>(a = 1) : 1
>        : ^
>a = 1 : 1
>      : ^
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^
>[9, a] as const : readonly [9, 0]
>                : ^^^^^^^^^^^^^^^
>[9, a] : readonly [9, 0]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>a : 0
>  : ^
>[[9, 8] as const] : [readonly [9, 8]]
>                  : ^^^^^^^^^^^^^^^^^
>[9, 8] as const : readonly [9, 8]
>                : ^^^^^^^^^^^^^^^
>[9, 8] : readonly [9, 8]
>       : ^^^^^^^^^^^^^^^
>9 : 9
>  : ^
>8 : 8
>  : ^

    const bb: 0 | 8 = b;
>bb : 0 | 8
>   : ^^^^^
>b : 0 | 8
>  : ^^^^^
}
{
    let a: 0 | 1 = 1;
>a : 0 | 1
>  : ^^^^^
>1 : 1
>  : ^

    let b: 0 | 1 | 8 | 9;
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^

    f(), [{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const];
>f(), [{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const] : [readonly [8, 9]]
>                                                            : ^^^^^^^^^^^^^^^^^
>f() : void
>    : ^^^^
>f : () => void
>  : ^^^^^^    
>[{ [a]: b } = [a = 0, 9] as const] = [[8, 9] as const] : [readonly [8, 9]]
>                                                       : ^^^^^^^^^^^^^^^^^
>[{ [a]: b } = [a = 0, 9] as const] : [readonly [0, 9]]
>                                   : ^^^^^^^^^^^^^^^^^
>{ [a]: b } = [a = 0, 9] as const : readonly [0, 9]
>                                 : ^^^^^^^^^^^^^^^
>{ [a]: b } : { 0: 0 | 1 | 9 | 8; }
>           : ^^^^^^^^^^^^^^^^^^^^^
>[a] : 0 | 1 | 9 | 8
>    : ^^^^^^^^^^^^^
>a : 0
>  : ^
>b : 0 | 1 | 9 | 8
>  : ^^^^^^^^^^^^^
>[a = 0, 9] as const : readonly [0, 9]
>                    : ^^^^^^^^^^^^^^^
>[a = 0, 9] : readonly [0, 9]
>           : ^^^^^^^^^^^^^^^
>a = 0 : 0
>      : ^
>a : 0 | 1
>  : ^^^^^
>0 : 0
>  : ^
>9 : 9
>  : ^
>[[8, 9] as const] : [readonly [8, 9]]
>                  : ^^^^^^^^^^^^^^^^^
>[8, 9] as const : readonly [8, 9]
>                : ^^^^^^^^^^^^^^^
>[8, 9] : readonly [8, 9]
>       : ^^^^^^^^^^^^^^^
>8 : 8
>  : ^
>9 : 9
>  : ^

    const bb: 0 | 8 = b;
>bb : 0 | 8
>   : ^^^^^
>b : 0 | 8
>  : ^^^^^
}
