//// [tests/cases/conformance/controlFlow/controlFlowDestructuringDeclaration.ts] ////

=== controlFlowDestructuringDeclaration.ts ===
function f1() {
>f1 : () => void
>   : ^^^^^^^^^^

    let x: string | number = 1;
>x : string | number
>  : ^^^^^^^^^^^^^^^
>1 : 1
>  : ^

    x;
>x : number
>  : ^^^^^^

    let y: string | undefined = "";
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>"" : ""
>   : ^^

    y;
>y : string
>  : ^^^^^^
}

function f2() {
>f2 : () => void
>   : ^^^^^^^^^^

    let [x]: [string | number] = [1];
>x : string | number
>  : ^^^^^^^^^^^^^^^
>[1] : [number]
>    : ^^^^^^^^
>1 : 1
>  : ^

    x;
>x : number
>  : ^^^^^^

    let [y]: [string | undefined] = [""];
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>[""] : [string]
>     : ^^^^^^^^
>"" : ""
>   : ^^

    y;
>y : string
>  : ^^^^^^

    let [z = ""]: [string | undefined] = [undefined];
>z : string
>  : ^^^^^^
>"" : ""
>   : ^^
>[undefined] : [undefined]
>            : ^^^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

    z;
>z : string
>  : ^^^^^^
}

function f3() {
>f3 : () => void
>   : ^^^^^^^^^^

    let [x]: (string | number)[] = [1];
>x : string | number
>  : ^^^^^^^^^^^^^^^
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^

    x;
>x : number
>  : ^^^^^^

    let [y]: (string | undefined)[] = [""];
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>[""] : string[]
>     : ^^^^^^^^
>"" : ""
>   : ^^

    y;
>y : string
>  : ^^^^^^

    let [z = ""]: (string | undefined)[] = [undefined];
>z : string
>  : ^^^^^^
>"" : ""
>   : ^^
>[undefined] : undefined[]
>            : ^^^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

    z;
>z : string
>  : ^^^^^^
}

function f4() {
>f4 : () => void
>   : ^^^^^^^^^^

    let { x }: { x: string | number } = { x: 1 };
>x : string | number
>  : ^^^^^^^^^^^^^^^
>x : string | number
>  : ^^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

    x;
>x : number
>  : ^^^^^^

    let { y }: { y: string | undefined } = { y: "" };
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>{ y: "" } : { y: string; }
>          : ^^^^^^^^^^^^^^
>y : string
>  : ^^^^^^
>"" : ""
>   : ^^

    y;
>y : string
>  : ^^^^^^

    let { z = "" }: { z: string | undefined } = { z: undefined };
>z : string
>  : ^^^^^^
>"" : ""
>   : ^^
>z : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>{ z: undefined } : { z: undefined; }
>                 : ^^^^^^^^^^^^^^^^^
>z : undefined
>  : ^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

    z;
>z : string
>  : ^^^^^^
}

function f5() {
>f5 : () => void
>   : ^^^^^^^^^^

    let { x }: { x?: string | number } = { x: 1 };
>x : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

    x;
>x : number
>  : ^^^^^^

    let { y }: { y?: string | undefined } = { y: "" };
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>{ y: "" } : { y: string; }
>          : ^^^^^^^^^^^^^^
>y : string
>  : ^^^^^^
>"" : ""
>   : ^^

    y;
>y : string
>  : ^^^^^^

    let { z = "" }: { z?: string | undefined } = { z: undefined };
>z : string
>  : ^^^^^^
>"" : ""
>   : ^^
>z : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>{ z: undefined } : { z: undefined; }
>                 : ^^^^^^^^^^^^^^^^^
>z : undefined
>  : ^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

    z;
>z : string
>  : ^^^^^^
}

function f6() {
>f6 : () => void
>   : ^^^^^^^^^^

    let { x }: { x?: string | number } = {};
>x : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

    x;
>x : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

    let { y }: { y?: string | undefined } = {};
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

    y;
>y : string | undefined
>  : ^^^^^^^^^^^^^^^^^^

    let { z = "" }: { z?: string | undefined } = {};
>z : string
>  : ^^^^^^
>"" : ""
>   : ^^
>z : string | undefined
>  : ^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

    z;
>z : string
>  : ^^^^^^
}

function f7() {
>f7 : () => void
>   : ^^^^^^^^^^

    let o: { [x: string]: number } = { x: 1 };
>o : { [x: string]: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

    let { x }: { [x: string]: string | number } = o;
>x : string | number
>  : ^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^
>o : { [x: string]: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^

    x;
>x : number
>  : ^^^^^^
}

