//// [tests/cases/conformance/controlFlow/controlFlowNoIntermediateErrors.ts] ////

=== controlFlowNoIntermediateErrors.ts ===
// Repros from #46475

function f1() {
>f1 : () => void
>   : ^^^^^^^^^^

    let code: 0 | 1 | 2 = 0;
>code : 0 | 1 | 2
>     : ^^^^^^^^^
>0 : 0
>  : ^

    const otherCodes: (0 | 1 | 2)[] = [2, 0, 1, 0, 2, 2, 2, 0, 1, 0, 2, 1, 1, 0, 2, 1];
>otherCodes : (0 | 1 | 2)[]
>           : ^^^^^^^^^^^^^
>[2, 0, 1, 0, 2, 2, 2, 0, 1, 0, 2, 1, 1, 0, 2, 1] : (0 | 1 | 2)[]
>                                                 : ^^^^^^^^^^^^^
>2 : 2
>  : ^
>0 : 0
>  : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
>2 : 2
>  : ^
>2 : 2
>  : ^
>2 : 2
>  : ^
>0 : 0
>  : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
>2 : 2
>  : ^
>1 : 1
>  : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
>2 : 2
>  : ^
>1 : 1
>  : ^

    for (const code2 of otherCodes) {
>code2 : 0 | 1 | 2
>      : ^^^^^^^^^
>otherCodes : (0 | 1 | 2)[]
>           : ^^^^^^^^^^^^^

        if (code2 === 0) {        
>code2 === 0 : boolean
>            : ^^^^^^^
>code2 : 0 | 1 | 2
>      : ^^^^^^^^^
>0 : 0
>  : ^

            code = code === 2 ? 1 : 0;
>code = code === 2 ? 1 : 0 : 0 | 1
>                          : ^^^^^
>code : 0 | 1 | 2
>     : ^^^^^^^^^
>code === 2 ? 1 : 0 : 0 | 1
>                   : ^^^^^
>code === 2 : boolean
>           : ^^^^^^^
>code : 0 | 1 | 2
>     : ^^^^^^^^^
>2 : 2
>  : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
        }
        else {
            code = 2;
>code = 2 : 2
>         : ^
>code : 0 | 1 | 2
>     : ^^^^^^^^^
>2 : 2
>  : ^
        }
    }
}

function f2() {
>f2 : () => void
>   : ^^^^^^^^^^

    let code: 0 | 1 = 0;
>code : 0 | 1
>     : ^^^^^
>0 : 0
>  : ^

    while (true) {
>true : true
>     : ^^^^

        code = code === 1 ? 0 : 1;
>code = code === 1 ? 0 : 1 : 0 | 1
>                          : ^^^^^
>code : 0 | 1
>     : ^^^^^
>code === 1 ? 0 : 1 : 0 | 1
>                   : ^^^^^
>code === 1 : boolean
>           : ^^^^^^^
>code : 0 | 1
>     : ^^^^^
>1 : 1
>  : ^
>0 : 0
>  : ^
>1 : 1
>  : ^
    }
}

