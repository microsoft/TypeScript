//// [tests/cases/conformance/controlFlow/controlFlowOptionalChain3.tsx] ////

=== Performance Stats ===
Assignability cache: 2,500
Type Count: 10,000
Instantiation count: 100,000
Symbol count: 50,000

=== controlFlowOptionalChain3.tsx ===
/// <reference path="react16.d.ts" />

// https://github.com/microsoft/TypeScript/issues/56482

import React from "react";
>React : typeof React
>      : ^^^^^^^^^^^^

interface Foo {
  bar: boolean;
>bar : boolean
>    : ^^^^^^^
}

function test1(foo: Foo | undefined) {
>test1 : (foo: Foo | undefined) => void
>      : ^   ^^               ^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^

  if (foo?.bar === false) {
>foo?.bar === false : boolean
>                   : ^^^^^^^
>foo?.bar : boolean | undefined
>         : ^^^^^^^^^^^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
>bar : boolean | undefined
>    : ^^^^^^^^^^^^^^^^^^^
>false : false
>      : ^^^^^

    foo;
>foo : Foo
>    : ^^^
  }
  foo;
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
}

function test2(foo: Foo | undefined) {
>test2 : (foo: Foo | undefined) => void
>      : ^   ^^               ^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^

  if (foo?.bar === false) {
>foo?.bar === false : boolean
>                   : ^^^^^^^
>foo?.bar : boolean | undefined
>         : ^^^^^^^^^^^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
>bar : boolean | undefined
>    : ^^^^^^^^^^^^^^^^^^^
>false : false
>      : ^^^^^

    foo;
>foo : Foo
>    : ^^^

  } else {
    foo;
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
  }
}

function Test3({ foo }: { foo: Foo | undefined }) {
>Test3 : ({ foo }: { foo: Foo | undefined; }) => JSX.Element
>      : ^       ^^                         ^^^^^^^^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^

  return (
>(    <div>      {foo?.bar === false && "foo"}      {foo.bar ? "true" : "false"}    </div>  ) : JSX.Element
>                                                                                             : ^^^^^^^^^^^

    <div>
><div>      {foo?.bar === false && "foo"}      {foo.bar ? "true" : "false"}    </div> : JSX.Element
>                                                                                     : ^^^^^^^^^^^
>div : any
>    : ^^^

      {foo?.bar === false && "foo"}
>foo?.bar === false && "foo" : false | "foo"
>                            : ^^^^^^^^^^^^^
>foo?.bar === false : boolean
>                   : ^^^^^^^
>foo?.bar : boolean | undefined
>         : ^^^^^^^^^^^^^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
>bar : boolean | undefined
>    : ^^^^^^^^^^^^^^^^^^^
>false : false
>      : ^^^^^
>"foo" : "foo"
>      : ^^^^^

      {foo.bar ? "true" : "false"}
>foo.bar ? "true" : "false" : "false" | "true"
>                           : ^^^^^^^^^^^^^^^^
>foo.bar : boolean
>        : ^^^^^^^
>foo : Foo | undefined
>    : ^^^^^^^^^^^^^^^
>bar : boolean
>    : ^^^^^^^
>"true" : "true"
>       : ^^^^^^
>"false" : "false"
>        : ^^^^^^^

    </div>
>div : any
>    : ^^^

  );
}

function test4(options?: { a?: boolean; b?: boolean }) {
>test4 : (options?: { a?: boolean; b?: boolean; }) => void
>      : ^       ^^^                             ^^^^^^^^^
>options : { a?: boolean; b?: boolean; } | undefined
>        : ^^^^^^       ^^^^^^       ^^^^^^^^^^^^^^^
>a : boolean | undefined
>  : ^^^^^^^^^^^^^^^^^^^
>b : boolean | undefined
>  : ^^^^^^^^^^^^^^^^^^^

  if (options?.a === false || options.b) {
>options?.a === false || options.b : boolean | undefined
>                                  : ^^^^^^^^^^^^^^^^^^^
>options?.a === false : boolean
>                     : ^^^^^^^
>options?.a : boolean | undefined
>           : ^^^^^^^^^^^^^^^^^^^
>options : { a?: boolean; b?: boolean; } | undefined
>        : ^^^^^^       ^^^^^^       ^^^^^^^^^^^^^^^
>a : boolean | undefined
>  : ^^^^^^^^^^^^^^^^^^^
>false : false
>      : ^^^^^
>options.b : boolean | undefined
>          : ^^^^^^^^^^^^^^^^^^^
>options : { a?: boolean; b?: boolean; } | undefined
>        : ^^^^^^       ^^^^^^       ^^^^^^^^^^^^^^^
>b : boolean | undefined
>  : ^^^^^^^^^^^^^^^^^^^

    options;
>options : { a?: boolean; b?: boolean; } | undefined
>        : ^^^^^^       ^^^^^^       ^^^^^^^^^^^^^^^
  }
}

