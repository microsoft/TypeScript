//// [tests/cases/compiler/declFileCallSignatures.ts] ////

=== declFileCallSignatures_0.ts ===
export interface ICallSignature {
    /** This comment should appear for foo*/
    (): string;
}

export interface ICallSignatureWithParameters {
    /** This is comment for function signature*/
    (/** this is comment about a*/a: string,
>a : string
>  : ^^^^^^

        /** this is comment for b*/
        b: number): void;
>b : number
>  : ^^^^^^
}

export interface ICallSignatureWithRestParameters {
    (a: string, ...rests: string[]): string;
>a : string
>  : ^^^^^^
>rests : string[]
>      : ^^^^^^^^
}

export interface ICallSignatureWithOverloads {
    (a: string): string;
>a : string
>  : ^^^^^^

    (a: number): number;
>a : number
>  : ^^^^^^
}

export interface ICallSignatureWithTypeParameters<T> {
    /** This comment should appear for foo*/
    (a: T): string;
>a : T
>  : ^
}

export interface ICallSignatureWithOwnTypeParametes {
    <T extends ICallSignature>(a: T): string;
>a : T
>  : ^
}

=== declFileCallSignatures_1.ts ===
interface IGlobalCallSignature {
    /** This comment should appear for foo*/
    (): string;
}

interface IGlobalCallSignatureWithParameters {
    /** This is comment for function signature*/
    (/** this is comment about a*/a: string,
>a : string
>  : ^^^^^^

        /** this is comment for b*/
        b: number): void;
>b : number
>  : ^^^^^^
}

interface IGlobalCallSignatureWithRestParameters {

    (a: string, ...rests: string[]): string;
>a : string
>  : ^^^^^^
>rests : string[]
>      : ^^^^^^^^

}

interface IGlobalCallSignatureWithOverloads {
    (a: string): string;
>a : string
>  : ^^^^^^

    (a: number): number;
>a : number
>  : ^^^^^^
}

interface IGlobalCallSignatureWithTypeParameters<T> {
    /** This comment should appear for foo*/
    (a: T): string;
>a : T
>  : ^
}

interface IGlobalCallSignatureWithOwnTypeParametes {
    <T extends IGlobalCallSignature>(a: T): string;
>a : T
>  : ^
}
