//// [tests/cases/compiler/declFileImportModuleWithExportAssignment.ts] ////

=== declFileImportModuleWithExportAssignment_1.ts ===
/**This is on import declaration*/
import a1 = require("./declFileImportModuleWithExportAssignment_0");
>a1 : Symbol(a1, Decl(declFileImportModuleWithExportAssignment_1.ts, 0, 0))

export var a = a1;
>a : Symbol(a, Decl(declFileImportModuleWithExportAssignment_1.ts, 2, 10))
>a1 : Symbol(a1, Decl(declFileImportModuleWithExportAssignment_1.ts, 0, 0))

a.test1(null, null, null);
>a.test1 : Symbol(test1, Decl(declFileImportModuleWithExportAssignment_0.ts, 11, 25))
>a : Symbol(a, Decl(declFileImportModuleWithExportAssignment_1.ts, 2, 10))
>test1 : Symbol(test1, Decl(declFileImportModuleWithExportAssignment_0.ts, 11, 25))

=== declFileImportModuleWithExportAssignment_0.ts ===
namespace m2 {
>m2 : Symbol(m2, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 0), Decl(declFileImportModuleWithExportAssignment_0.ts, 10, 3))

    export interface connectModule {
>connectModule : Symbol(connectModule, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 14))

        (res, req, next): void;
>res : Symbol(res, Decl(declFileImportModuleWithExportAssignment_0.ts, 2, 9))
>req : Symbol(req, Decl(declFileImportModuleWithExportAssignment_0.ts, 2, 13))
>next : Symbol(next, Decl(declFileImportModuleWithExportAssignment_0.ts, 2, 18))
    }
    export interface connectExport {
>connectExport : Symbol(connectExport, Decl(declFileImportModuleWithExportAssignment_0.ts, 3, 5))

        use: (mod: connectModule) => connectExport;
>use : Symbol(connectExport.use, Decl(declFileImportModuleWithExportAssignment_0.ts, 4, 36))
>mod : Symbol(mod, Decl(declFileImportModuleWithExportAssignment_0.ts, 5, 14))
>connectModule : Symbol(connectModule, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 14))
>connectExport : Symbol(connectExport, Decl(declFileImportModuleWithExportAssignment_0.ts, 3, 5))

        listen: (port: number) => void;
>listen : Symbol(connectExport.listen, Decl(declFileImportModuleWithExportAssignment_0.ts, 5, 51))
>port : Symbol(port, Decl(declFileImportModuleWithExportAssignment_0.ts, 6, 17))
    }

}
var m2: {
>m2 : Symbol(m2, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 0), Decl(declFileImportModuleWithExportAssignment_0.ts, 10, 3))

    (): m2.connectExport;
>m2 : Symbol(m2, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 0), Decl(declFileImportModuleWithExportAssignment_0.ts, 10, 3))
>connectExport : Symbol(m2.connectExport, Decl(declFileImportModuleWithExportAssignment_0.ts, 3, 5))

    test1: m2.connectModule;
>test1 : Symbol(test1, Decl(declFileImportModuleWithExportAssignment_0.ts, 11, 25))
>m2 : Symbol(m2, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 0), Decl(declFileImportModuleWithExportAssignment_0.ts, 10, 3))
>connectModule : Symbol(m2.connectModule, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 14))

    test2(): m2.connectModule;
>test2 : Symbol(test2, Decl(declFileImportModuleWithExportAssignment_0.ts, 12, 28))
>m2 : Symbol(m2, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 0), Decl(declFileImportModuleWithExportAssignment_0.ts, 10, 3))
>connectModule : Symbol(m2.connectModule, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 14))

};
export = m2;
>m2 : Symbol(m2, Decl(declFileImportModuleWithExportAssignment_0.ts, 0, 0), Decl(declFileImportModuleWithExportAssignment_0.ts, 10, 3))

