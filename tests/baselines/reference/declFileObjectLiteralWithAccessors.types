//// [tests/cases/compiler/declFileObjectLiteralWithAccessors.ts] ////

=== declFileObjectLiteralWithAccessors.ts ===
function /*1*/makePoint(x: number) { 
>makePoint : (x: number) => { b: number; x: number; }
>          : ^ ^^      ^^^^^^^^^^^^^^^^^^^^^      ^^^
>x : number
>  : ^^^^^^

    return {
>{        b: 10,        get x() { return x; },        set x(a: number) { this.b = a; }    } : { b: number; x: number; }
>                                                                                           : ^^^^^^^^^^^^^^^^      ^^^

        b: 10,
>b : number
>  : ^^^^^^
>10 : 10
>   : ^^

        get x() { return x; },
>x : number
>  : ^^^^^^
>x : number
>  : ^^^^^^

        set x(a: number) { this.b = a; }
>x : number
>  : ^^^^^^
>a : number
>  : ^^^^^^
>this.b = a : number
>           : ^^^^^^
>this.b : any
>this : any
>     : ^^^
>b : any
>  : ^^^
>a : number
>  : ^^^^^^

    };
};
var /*4*/point = makePoint(2);
>point : { b: number; x: number; }
>      : ^^^^^^^^^^^^^^^^      ^^^
>makePoint(2) : { b: number; x: number; }
>             : ^^^^^^^^^^^^^^^^      ^^^
>makePoint : (x: number) => { b: number; x: number; }
>          : ^ ^^      ^^^^^^^^^^^^^^^^^^^^^      ^^^
>2 : 2
>  : ^

var /*2*/x = point.x;
>x : number
>  : ^^^^^^
>point.x : number
>        : ^^^^^^
>point : { b: number; x: number; }
>      : ^^^^^^^^^^^^^^^^      ^^^
>x : number
>  : ^^^^^^

point./*3*/x = 30;
>point./*3*/x = 30 : 30
>                  : ^^
>point./*3*/x : number
>             : ^^^^^^
>point : { b: number; x: number; }
>      : ^^^^^^^^^^^^^^^^      ^^^
>x : number
>  : ^^^^^^
>30 : 30
>   : ^^

