//// [tests/cases/compiler/declarationEmitCrossFileCopiedGeneratedImportType.ts] ////

=== projA/index.d.ts ===
export declare class Foo extends Number {
>Foo : Symbol(Foo, Decl(index.d.ts, 0, 0))
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

    private _;
>_ : Symbol(Foo._, Decl(index.d.ts, 0, 41))
}
=== projB/index.d.ts ===
import { Foo } from "../projA";
>Foo : Symbol(Foo, Decl(index.d.ts, 0, 8))

export declare const f: (foo: Foo) => boolean;
>f : Symbol(f, Decl(index.d.ts, 1, 20))
>foo : Symbol(foo, Decl(index.d.ts, 1, 25))
>Foo : Symbol(Foo, Decl(index.d.ts, 0, 8))

=== projC/index.d.ts ===
export declare const e: {
>e : Symbol(e, Decl(index.d.ts, 0, 20))

    f: (foo: import("../projA").Foo) => boolean;
>f : Symbol(f, Decl(index.d.ts, 0, 25))
>foo : Symbol(foo, Decl(index.d.ts, 1, 8))
>Foo : Symbol(Foo, Decl(index.d.ts, 0, 0))

};
=== projD/index.ts ===
import {e} from "../projC";
>e : Symbol(e, Decl(index.ts, 0, 8))

export const d = {e};
>d : Symbol(d, Decl(index.ts, 2, 12))
>e : Symbol(e, Decl(index.ts, 2, 18))

