//// [tests/cases/compiler/declarationEmitGenericTypeParamerSerialization.ts] ////

=== declarationEmitGenericTypeParamerSerialization.ts ===
function wrapper<T>(value: T) {
>wrapper : Symbol(wrapper, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 0))
>T : Symbol(T, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 17))
>value : Symbol(value, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 20))
>T : Symbol(T, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 17))

  return {
      m() { return value; },
>m : Symbol(m, Decl(declarationEmitGenericTypeParamerSerialization.ts, 1, 10))
>value : Symbol(value, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 20))

      get g() { return value; },
>g : Symbol(g, Decl(declarationEmitGenericTypeParamerSerialization.ts, 2, 28))
>value : Symbol(value, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 20))
  }
}

export const w = wrapper(0)
>w : Symbol(w, Decl(declarationEmitGenericTypeParamerSerialization.ts, 7, 12))
>wrapper : Symbol(wrapper, Decl(declarationEmitGenericTypeParamerSerialization.ts, 0, 0))

