//// [tests/cases/compiler/declarationEmitGlobalThisPreserved.ts] ////

=== declarationEmitGlobalThisPreserved.ts ===
// Adding this makes tooltips fail too.
// declare global {
//     namespace isNaN {
//         const prop: number;
//     }
// }

// Broken inference cases.

export const a1 = (isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN;
>a1 : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^^^^                       
>(isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                   : ^     ^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const a2 = (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN;
>a2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^   ^^^                       ^^^^^                       
>(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                                                         : ^     ^^                       ^^   ^^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const a3 = (isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar;
>a3 : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^      ^^   ^^                       ^^^^^                       
>(isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                              : ^     ^^      ^^   ^^                       ^^^^^                       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

export const a4 = (isNaN: number): typeof globalThis.isNaN => globalThis.isNaN;
>a4 : (isNaN: number) => typeof globalThis.isNaN
>   : ^     ^^      ^^^^^                       
>(isNaN: number): typeof globalThis.isNaN => globalThis.isNaN : (isNaN: number) => typeof globalThis.isNaN
>                                                             : ^     ^^      ^^^^^                       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const aObj = {
>aObj : { a1: (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN; a2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN; a3: (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN; a4: (isNaN: number) => typeof globalThis.isNaN; }
>     : ^^^^^^^     ^^                       ^^^^^                       ^^^^^^^     ^^                       ^^   ^^^                       ^^^^^                       ^^^^^^^     ^^      ^^   ^^                       ^^^^^                       ^^^^^^^     ^^      ^^^^^                       ^^^
>{    a1: (isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN,    a2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN,    a3: (isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar,    a4: (isNaN: number): typeof globalThis.isNaN => globalThis.isNaN,} : { a1: (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN; a2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN; a3: (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN; a4: (isNaN: number) => typeof globalThis.isNaN; }


    a1: (isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN,
>a1 : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^^^^                       
>(isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                   : ^     ^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    a2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN,
>a2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^   ^^^                       ^^^^^                       
>(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                                                         : ^     ^^                       ^^   ^^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    a3: (isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar,
>a3 : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^      ^^   ^^                       ^^^^^                       
>(isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                              : ^     ^^      ^^   ^^                       ^^^^^                       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

    a4: (isNaN: number): typeof globalThis.isNaN => globalThis.isNaN,
>a4 : (isNaN: number) => typeof globalThis.isNaN
>   : ^     ^^      ^^^^^                       
>(isNaN: number): typeof globalThis.isNaN => globalThis.isNaN : (isNaN: number) => typeof globalThis.isNaN
>                                                             : ^     ^^      ^^^^^                       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
}

export type a4Return = ReturnType<ReturnType<typeof a4>>;
>a4Return : boolean
>         : ^^^^^^^
>a4 : (isNaN: number) => typeof globalThis.isNaN
>   : ^     ^^      ^^^^^                       

export type a4oReturn = ReturnType<ReturnType<typeof aObj['a4']>>;
>a4oReturn : boolean
>          : ^^^^^^^
>aObj : { a1: (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN; a2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN; a3: (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN; a4: (isNaN: number) => typeof globalThis.isNaN; }
>     : ^^^^^^^     ^^                       ^^^^^                       ^^^^^^^     ^^                       ^^   ^^^                       ^^^^^                       ^^^^^^^     ^^      ^^   ^^                       ^^^^^                       ^^^^^^^     ^^      ^^^^^                       ^^^

export const b1 = (isNaN: typeof globalThis.isNaN) => isNaN;
>b1 : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>(isNaN: typeof globalThis.isNaN) => isNaN : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>                                          : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const b2 = (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => bar ?? isNaN;
>b2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => bar ?? isNaN : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>                                                                                : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const b3 = (isNaN: number, bar: typeof globalThis.isNaN) => bar;
>b3 : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>(isNaN: number, bar: typeof globalThis.isNaN) => bar : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>                                                     : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

export const b4 = (isNaN: number) => globalThis.isNaN;
>b4 : (isNaN: number) => (number: number) => boolean
>   : ^     ^^      ^^^^^^      ^^      ^^^^^       
>(isNaN: number) => globalThis.isNaN : (isNaN: number) => (number: number) => boolean
>                                    : ^     ^^      ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const bObj = {
>bObj : { b1: (isNaN: typeof globalThis.isNaN) => (number: number) => boolean; b2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean; b3: (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean; b4: (isNaN: number) => (number: number) => boolean; }
>     : ^^^^^^^     ^^                       ^^^^^^      ^^      ^^^^^       ^^^^^^^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       ^^^^^^^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       ^^^^^^^     ^^      ^^^^^^      ^^      ^^^^^       ^^^
>{    b1: (isNaN: typeof globalThis.isNaN) => isNaN,    b2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => bar ?? isNaN,    b3: (isNaN: number, bar: typeof globalThis.isNaN) => bar,    b4: (isNaN: number) => globalThis.isNaN,} : { b1: (isNaN: typeof globalThis.isNaN) => (number: number) => boolean; b2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean; b3: (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean; b4: (isNaN: number) => (number: number) => boolean; }


    b1: (isNaN: typeof globalThis.isNaN) => isNaN,
>b1 : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>(isNaN: typeof globalThis.isNaN) => isNaN : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>                                          : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    b2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => bar ?? isNaN,
>b2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => bar ?? isNaN : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>                                                                                : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    b3: (isNaN: number, bar: typeof globalThis.isNaN) => bar,
>b3 : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>(isNaN: number, bar: typeof globalThis.isNaN) => bar : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>                                                     : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

    b4: (isNaN: number) => globalThis.isNaN,
>b4 : (isNaN: number) => (number: number) => boolean
>   : ^     ^^      ^^^^^^      ^^      ^^^^^       
>(isNaN: number) => globalThis.isNaN : (isNaN: number) => (number: number) => boolean
>                                    : ^     ^^      ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
}

export type b4Return = ReturnType<ReturnType<typeof b4>>;
>b4Return : boolean
>         : ^^^^^^^
>b4 : (isNaN: number) => (number: number) => boolean
>   : ^     ^^      ^^^^^^      ^^      ^^^^^       

export type b4oReturn = ReturnType<ReturnType<typeof bObj['b4']>>;
>b4oReturn : boolean
>          : ^^^^^^^
>bObj : { b1: (isNaN: typeof globalThis.isNaN) => (number: number) => boolean; b2: (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean; b3: (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean; b4: (isNaN: number) => (number: number) => boolean; }
>     : ^^^^^^^     ^^                       ^^^^^^      ^^      ^^^^^       ^^^^^^^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       ^^^^^^^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       ^^^^^^^     ^^      ^^^^^^      ^^      ^^^^^       ^^^

export function c1(isNaN: typeof globalThis.isNaN) { return isNaN }
>c1 : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export function c2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) { return bar ?? isNaN }
>c2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export function c3(isNaN: number, bar: typeof globalThis.isNaN) { return bar }
>c3 : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

export function c4(isNaN: number) { return globalThis.isNaN; }
>c4 : (isNaN: number) => (number: number) => boolean
>   : ^     ^^      ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export const cObj = {
>cObj : { c1(isNaN: typeof globalThis.isNaN): (number: number) => boolean; c2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): (number: number) => boolean; c3(isNaN: number, bar: typeof globalThis.isNaN): (number: number) => boolean; c4(isNaN: number): (number: number) => boolean; }
>     : ^^^^^     ^^                       ^^^^      ^^      ^^^^^       ^^^^^     ^^                       ^^   ^^^                       ^^^^      ^^      ^^^^^       ^^^^^     ^^      ^^   ^^                       ^^^^      ^^      ^^^^^       ^^^^^     ^^      ^^^^      ^^      ^^^^^       ^^^
>{    c1(isNaN: typeof globalThis.isNaN) { return isNaN },    c2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) { return bar ?? isNaN },    c3(isNaN: number, bar: typeof globalThis.isNaN) { return bar },    c4(isNaN: number) { return globalThis.isNaN; },} : { c1(isNaN: typeof globalThis.isNaN): (number: number) => boolean; c2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): (number: number) => boolean; c3(isNaN: number, bar: typeof globalThis.isNaN): (number: number) => boolean; c4(isNaN: number): (number: number) => boolean; }


    c1(isNaN: typeof globalThis.isNaN) { return isNaN },
>c1 : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    c2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) { return bar ?? isNaN },
>c2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    c3(isNaN: number, bar: typeof globalThis.isNaN) { return bar },
>c3 : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>   : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

    c4(isNaN: number) { return globalThis.isNaN; },
>c4 : (isNaN: number) => (number: number) => boolean
>   : ^     ^^      ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
}

export type c4Return = ReturnType<ReturnType<typeof c4>>;
>c4Return : boolean
>         : ^^^^^^^
>c4 : (isNaN: number) => (number: number) => boolean
>   : ^     ^^      ^^^^^^      ^^      ^^^^^       

export type c4oReturn = ReturnType<ReturnType<typeof cObj['c4']>>;
>c4oReturn : boolean
>          : ^^^^^^^
>cObj : { c1(isNaN: typeof globalThis.isNaN): (number: number) => boolean; c2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): (number: number) => boolean; c3(isNaN: number, bar: typeof globalThis.isNaN): (number: number) => boolean; c4(isNaN: number): (number: number) => boolean; }
>     : ^^^^^     ^^                       ^^^^      ^^      ^^^^^       ^^^^^     ^^                       ^^   ^^^                       ^^^^      ^^      ^^^^^       ^^^^^     ^^      ^^   ^^                       ^^^^      ^^      ^^^^^       ^^^^^     ^^      ^^^^      ^^      ^^^^^       ^^^

export function d1() {
>d1 : () => () => (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^^^^^^^^^^^^^     ^^                       ^^^^^                       

    const fn = (isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN;
>fn : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^^^^                       
>(isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN => isNaN : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                   : ^     ^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    return function() { return fn };
>function() { return fn } : () => (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                         : ^^^^^^^     ^^                       ^^^^^                       
>fn : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^^^^                       
}

export function d2() {
>d2 : () => () => (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^^^^^^^^^^^^^     ^^                       ^^   ^^^                       ^^^^^                       

    const fn = (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN;
>fn : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^   ^^^                       ^^^^^                       
>(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN): typeof globalThis.isNaN => bar ?? isNaN : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                                                         : ^     ^^                       ^^   ^^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    return function() { return fn };
>function() { return fn } : () => (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                         : ^^^^^^^     ^^                       ^^   ^^^                       ^^^^^                       
>fn : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^                       ^^   ^^^                       ^^^^^                       
}

export function d3() {
>d3 : () => () => (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^^^^^^^^^^^^^     ^^      ^^   ^^                       ^^^^^                       

    const fn = (isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar;
>fn : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^      ^^   ^^                       ^^^^^                       
>(isNaN: number, bar: typeof globalThis.isNaN): typeof globalThis.isNaN => bar : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                                                                              : ^     ^^      ^^   ^^                       ^^^^^                       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

    return function() { return fn };
>function() { return fn } : () => (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                         : ^^^^^^^     ^^      ^^   ^^                       ^^^^^                       
>fn : (isNaN: number, bar: typeof globalThis.isNaN) => typeof globalThis.isNaN
>   : ^     ^^      ^^   ^^                       ^^^^^                       
}

export function d4() {
>d4 : () => () => (isNaN: number) => typeof globalThis.isNaN
>   : ^^^^^^^^^^^^^     ^^      ^^^^^                       

    const fn = (isNaN: number): typeof globalThis.isNaN => globalThis.isNaN;
>fn : (isNaN: number) => typeof globalThis.isNaN
>   : ^     ^^      ^^^^^                       
>(isNaN: number): typeof globalThis.isNaN => globalThis.isNaN : (isNaN: number) => typeof globalThis.isNaN
>                                                             : ^     ^^      ^^^^^                       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    return function() { return fn };
>function() { return fn } : () => (isNaN: number) => typeof globalThis.isNaN
>                         : ^^^^^^^     ^^      ^^^^^                       
>fn : (isNaN: number) => typeof globalThis.isNaN
>   : ^     ^^      ^^^^^                       
}

export type d4Return = ReturnType<ReturnType<ReturnType<ReturnType<typeof d4>>>>;
>d4Return : boolean
>         : ^^^^^^^
>d4 : () => () => (isNaN: number) => typeof globalThis.isNaN
>   : ^^^^^^^^^^^^^     ^^      ^^^^^                       

export class A {
>A : A
>  : ^

    method1(isNaN: typeof globalThis.isNaN) { return isNaN }
>method1 : (isNaN: typeof globalThis.isNaN) => (number: number) => boolean
>        : ^     ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    method2(isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) { return bar ?? isNaN }
>method2 : (isNaN: typeof globalThis.isNaN, bar?: typeof globalThis.isNaN) => (number: number) => boolean
>        : ^     ^^                       ^^   ^^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar ?? isNaN : (number: number) => boolean
>             : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    method3(isNaN: number, bar: typeof globalThis.isNaN) { return bar }
>method3 : (isNaN: number, bar: typeof globalThis.isNaN) => (number: number) => boolean
>        : ^     ^^      ^^   ^^                       ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       

    method4(isNaN: number) { return globalThis.isNaN; }
>method4 : (isNaN: number) => (number: number) => boolean
>        : ^     ^^      ^^^^^^      ^^      ^^^^^       
>isNaN : number
>      : ^^^^^^
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
}

export function fromParameter(isNaN: number, bar: typeof globalThis.isNaN) {
>fromParameter : (isNaN: number, bar: typeof globalThis.isNaN) => () => { bar: (number: number) => boolean; }
>              : ^     ^^      ^^   ^^                       ^^^^^^^^^^^^^^^^^^^      ^^      ^^^^^       ^^^
>isNaN : number
>      : ^^^^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    return function() { return { bar } };
>function() { return { bar } } : () => { bar: (number: number) => boolean; }
>                              : ^^^^^^^^^^^^^^      ^^      ^^^^^       ^^^
>{ bar } : { bar: (number: number) => boolean; }
>        : ^^^^^^^^      ^^      ^^^^^       ^^^
>bar : (number: number) => boolean
>    : ^      ^^      ^^^^^       
}

// Non-inference cases.

export const explicitlyTypedVariable: (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN = (isNaN) => isNaN;
>explicitlyTypedVariable : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                        : ^     ^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>(isNaN) => isNaN : (isNaN: (number: number) => boolean) => (number: number) => boolean
>                 : ^     ^^^      ^^      ^^^^^       ^^^^^^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

export function explicitlyTypedFunction(isNaN: typeof globalThis.isNaN): typeof globalThis.isNaN {
>explicitlyTypedFunction : (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN
>                        : ^     ^^                       ^^^^^                       
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

    return isNaN;
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       

};

export type AsObjectProperty = {
>AsObjectProperty : AsObjectProperty
>                 : ^^^^^^^^^^^^^^^^

    isNaN: typeof globalThis.isNaN;
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
}

export class AsClassProperty {
>AsClassProperty : AsClassProperty
>                : ^^^^^^^^^^^^^^^

    isNaN?: typeof globalThis.isNaN;
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
}

export type AsFunctionType = (isNaN: typeof globalThis.isNaN) => typeof globalThis.isNaN;
>AsFunctionType : AsFunctionType
>               : ^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       
>globalThis.isNaN : (number: number) => boolean
>                 : ^      ^^      ^^^^^       
>globalThis : typeof globalThis
>           : ^^^^^^^^^^^^^^^^^
>isNaN : (number: number) => boolean
>      : ^      ^^      ^^^^^       


