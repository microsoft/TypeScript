//// [tests/cases/compiler/declarationEmitMappedTypeTemplateTypeofSymbol.ts] ////

=== a.d.ts ===
export declare const timestampSymbol: unique symbol;
>timestampSymbol : unique symbol
>                : ^^^^^^^^^^^^^

export declare const Timestamp: {
>Timestamp : { [timestampSymbol]: true; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    [TKey in typeof timestampSymbol]: true;
>timestampSymbol : unique symbol
>                : ^^^^^^^^^^^^^
>true : true
>     : ^^^^

};

export declare function now(): typeof Timestamp;
>now : () => typeof Timestamp
>    : ^^^^^^                
>Timestamp : { [timestampSymbol]: true; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

=== b.ts ===
import * as x from "./a";
>x : typeof x
>  : ^^^^^^^^

export const timestamp = x.now();
>timestamp : { [x.timestampSymbol]: true; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x.now() : { [x.timestampSymbol]: true; }
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x.now : () => typeof x.Timestamp
>      : ^^^^^^       ^^^^^^^^^^^
>x : typeof x
>  : ^^^^^^^^
>now : () => typeof x.Timestamp
>    : ^^^^^^       ^^^^^^^^^^^

=== c.ts ===
import { now } from "./a";
>now : () => typeof import("a").Timestamp
>    : ^^^^^^              ^^^  ^^^^^^^^^

export const timestamp = now();
>timestamp : { [timestampSymbol]: true; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>now() : { [timestampSymbol]: true; }
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>now : () => typeof import("a").Timestamp
>    : ^^^^^^              ^^^  ^^^^^^^^^

