//// [tests/cases/compiler/declarationEmitNameConflictsWithAlias.ts] ////

=== declarationEmitNameConflictsWithAlias.ts ===
export namespace C { export interface I { } }
>C : Symbol(C, Decl(declarationEmitNameConflictsWithAlias.ts, 0, 0))
>I : Symbol(I, Decl(declarationEmitNameConflictsWithAlias.ts, 0, 20))

export import v = C;
>v : Symbol(v, Decl(declarationEmitNameConflictsWithAlias.ts, 0, 45))
>C : Symbol(C, Decl(declarationEmitNameConflictsWithAlias.ts, 0, 0))

export namespace M {
>M : Symbol(M, Decl(declarationEmitNameConflictsWithAlias.ts, 1, 20))

    export namespace C { export interface I { } }
>C : Symbol(C, Decl(declarationEmitNameConflictsWithAlias.ts, 2, 20))
>I : Symbol(I, Decl(declarationEmitNameConflictsWithAlias.ts, 3, 24))

    export var w: v.I; // Gets emitted as C.I, which is the wrong interface
>w : Symbol(w, Decl(declarationEmitNameConflictsWithAlias.ts, 4, 14))
>v : Symbol(v, Decl(declarationEmitNameConflictsWithAlias.ts, 0, 45))
>I : Symbol(v.I, Decl(declarationEmitNameConflictsWithAlias.ts, 0, 20))
}
