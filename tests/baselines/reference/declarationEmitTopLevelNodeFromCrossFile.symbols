//// [tests/cases/compiler/declarationEmitTopLevelNodeFromCrossFile.ts] ////

=== a.ts ===
export type X = string;
>X : Symbol(X, Decl(a.ts, 0, 0))

export const fn = { o: (a?: (X | undefined)[]) => {} };
>fn : Symbol(fn, Decl(a.ts, 1, 12))
>o : Symbol(o, Decl(a.ts, 1, 19))
>a : Symbol(a, Decl(a.ts, 1, 24))
>X : Symbol(X, Decl(a.ts, 0, 0))

=== b.ts ===
import {fn} from "./a";
>fn : Symbol(fn, Decl(b.ts, 0, 8))

export const m = {                        
>m : Symbol(m, Decl(b.ts, 1, 12))

    /**
    * leading doc for prop
    */ 
    prop: 1
>prop : Symbol(prop, Decl(b.ts, 1, 18))
}


export const x = { p: fn }; 
>x : Symbol(x, Decl(b.ts, 9, 12))
>p : Symbol(p, Decl(b.ts, 9, 18))
>fn : Symbol(fn, Decl(b.ts, 0, 8))

