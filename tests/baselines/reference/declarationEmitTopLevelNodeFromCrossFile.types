//// [tests/cases/compiler/declarationEmitTopLevelNodeFromCrossFile.ts] ////

=== a.ts ===
export type X = string;
>X : string
>  : ^^^^^^

export const fn = { o: (a?: (X | undefined)[]) => {} };
>fn : { o: (a?: (X | undefined)[]) => void; }
>   : ^^^^^^ ^^^                 ^^^^^^^^^^^^
>{ o: (a?: (X | undefined)[]) => {} } : { o: (a?: (X | undefined)[]) => void; }
>                                     : ^^^^^^ ^^^                 ^^^^^^^^^^^^
>o : (a?: (X | undefined)[]) => void
>  : ^ ^^^                 ^^^^^^^^^
>(a?: (X | undefined)[]) => {} : (a?: (X | undefined)[]) => void
>                              : ^ ^^^                 ^^^^^^^^^
>a : string[]
>  : ^^^^^^^^

=== b.ts ===
import {fn} from "./a";
>fn : { o: (a?: (import("a").X | undefined)[]) => void; }
>   : ^^^^^^ ^^^        ^^^  ^               ^^^^^^^^^^^^

export const m = {                        
>m : { prop: number; }
>  : ^^^^^^^^^^^^^^^^^
>{                            /**    * leading doc for prop    */     prop: 1} : { prop: number; }
>                                                                              : ^^^^^^^^^^^^^^^^^

    /**
    * leading doc for prop
    */ 
    prop: 1
>prop : number
>     : ^^^^^^
>1 : 1
>  : ^
}


export const x = { p: fn }; 
>x : { p: { o: (a?: (import("a").X | undefined)[]) => void; }; }
>  : ^^^^^^^^^^^ ^^^        ^^^  ^               ^^^^^^^^^^^^^^^
>{ p: fn } : { p: { o: (a?: (import("a").X | undefined)[]) => void; }; }
>          : ^^^^^^^^^^^ ^^^        ^^^  ^               ^^^^^^^^^^^^^^^
>p : { o: (a?: (import("a").X | undefined)[]) => void; }
>  : ^^^^^^ ^^^        ^^^  ^               ^^^^^^^^^^^^
>fn : { o: (a?: (import("a").X | undefined)[]) => void; }
>   : ^^^^^^ ^^^        ^^^  ^               ^^^^^^^^^^^^

