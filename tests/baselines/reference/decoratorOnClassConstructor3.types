//// [tests/cases/conformance/decorators/class/constructor/decoratorOnClassConstructor3.ts] ////

=== 0.ts ===
export class base { }
>base : base
>     : ^^^^

export function foo(target: Object, propertyKey: string | symbol, parameterIndex: number) { }
>foo : (target: Object, propertyKey: string | symbol, parameterIndex: number) => void
>    : ^      ^^      ^^           ^^               ^^              ^^      ^^^^^^^^^
>target : Object
>       : ^^^^^^
>propertyKey : string | symbol
>            : ^^^^^^^^^^^^^^^
>parameterIndex : number
>               : ^^^^^^

=== 2.ts ===
import {base} from "./0"
>base : typeof base
>     : ^^^^^^^^^^^

import {foo} from "./0"
>foo : (target: Object, propertyKey: string | symbol, parameterIndex: number) => void
>    : ^      ^^      ^^           ^^               ^^              ^^      ^^^^^^^^^

/* Comment on the Class Declaration */
export class C  extends base{
>C : C
>  : ^
>base : base
>     : ^^^^

    constructor(@foo prop: any) {
>foo : (target: Object, propertyKey: string | symbol, parameterIndex: number) => void
>    : ^      ^^      ^^           ^^               ^^              ^^      ^^^^^^^^^
>prop : any

        super();
>super() : void
>        : ^^^^
>super : typeof base
>      : ^^^^^^^^^^^
    }
}
