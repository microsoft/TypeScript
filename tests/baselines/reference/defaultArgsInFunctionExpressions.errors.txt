defaultArgsInFunctionExpressions.ts(4,5): error TS2322: Type 'number' is not assignable to type 'string'.
defaultArgsInFunctionExpressions.ts(4,19): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
defaultArgsInFunctionExpressions.ts(5,1): error TS2322: Type 'number' is not assignable to type 'string'.
defaultArgsInFunctionExpressions.ts(8,20): error TS2322: Type 'number' is not assignable to type 'string'.
defaultArgsInFunctionExpressions.ts(11,1): error TS2322: Type 'string' is not assignable to type 'number'.
defaultArgsInFunctionExpressions.ts(14,51): error TS2352: Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
defaultArgsInFunctionExpressions.ts(17,41): error TS2322: Type 'string' is not assignable to type 'number'.
defaultArgsInFunctionExpressions.ts(20,62): error TS2352: Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
defaultArgsInFunctionExpressions.ts(23,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
defaultArgsInFunctionExpressions.ts(24,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
defaultArgsInFunctionExpressions.ts(28,15): error TS2708: Cannot use namespace 'T' as a value.


==== defaultArgsInFunctionExpressions.ts (11 errors) ====
    var f = function (a = 3) { return a; }; // Type should be (a?: number) => number
    var n: number = f(4);
    n = f();
    var s: string = f('');
        ~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
                      ~~
!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
    s = f();
    ~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
    
    // Type check the default argument with the type annotation
    var f2 = function (a: string = 3) { return a; }; // Should error, but be of type (a: string) => string;
                       ~~~~~~~~~~~~~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
    s = f2('');
    s = f2();
    n = f2();
    ~
!!! error TS2322: Type 'string' is not assignable to type 'number'.
    
    // Contextually type the default arg with the type annotation
    var f3 = function (a: (s: string) => any = (s) => <number>s) { };
                                                      ~~~~~~~~~
!!! error TS2352: Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
    
    // Type check using the function's contextual type
    var f4: (a: number) => void = function (a = "") { };
                                            ~~~~~~
!!! error TS2322: Type 'string' is not assignable to type 'number'.
    
    // Contextually type the default arg using the function's contextual type
    var f5: (a: (s: string) => any) => void = function (a = s => <number>s) { };
                                                                 ~~~~~~~~~
!!! error TS2352: Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
    
    // Instantiated module
    module T { }
           ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
    module U {
           ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export var x;
    }
    
    var f6 = (t = T) => { };
                  ~
!!! error TS2708: Cannot use namespace 'T' as a value.
    var f7 = (t = U) => { return t; };
    
    f7().x;