//// [tests/cases/conformance/es6/modules/defaultExportInAwaitExpression02.ts] ////

=== a.ts ===
const x = new Promise( ( resolve, reject ) => { resolve( {} ); } );
>x : Promise<unknown>
>  : ^^^^^^^^^^^^^^^^
>new Promise( ( resolve, reject ) => { resolve( {} ); } ) : Promise<unknown>
>                                                         : ^^^^^^^^^^^^^^^^
>Promise : PromiseConstructor
>        : ^^^^^^^^^^^^^^^^^^
>( resolve, reject ) => { resolve( {} ); } : (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void
>                                          : ^       ^^^     ^^^^^^^^^^^^^^    ^^      ^^^      ^^^   ^^^^^    ^^^^^^^^^
>resolve : (value: unknown) => void
>        : ^     ^^^^^^^^^^^^^^    
>reject : (reason?: any) => void
>       : ^      ^^^   ^^^^^    
>resolve( {} ) : void
>              : ^^^^
>resolve : (value: unknown) => void
>        : ^     ^^^^^^^^^^^^^^    
>{} : {}
>   : ^^

export default x;
>x : Promise<unknown>
>  : ^^^^^^^^^^^^^^^^

=== b.ts ===
import x from './a';
>x : Promise<unknown>
>  : ^^^^^^^^^^^^^^^^

( async function() {
>( async function() {    const value = await x;}() ) : Promise<void>
>                                                    : ^^^^^^^^^^^^^
>async function() {    const value = await x;}() : Promise<void>
>                                                : ^^^^^^^^^^^^^
>async function() {    const value = await x;} : () => Promise<void>
>                                              : ^^^^^^^^^^^^^^^^^^^

    const value = await x;
>value : unknown
>      : ^^^^^^^
>await x : unknown
>        : ^^^^^^^
>x : Promise<unknown>
>  : ^^^^^^^^^^^^^^^^

}() );

