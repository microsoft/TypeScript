derivedClassWithAny.ts(18,5): error TS2612: Property 'x' will overwrite the base property in 'C'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration.
derivedClassWithAny.ts(37,5): error TS2612: Property 'x' will overwrite the base property in 'D'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration.
derivedClassWithAny.ts(57,1): error TS2322: Type 'E' is not assignable to type 'C'.
  Types of property 'x' are incompatible.
    Type 'string' is not assignable to type 'number'.


==== derivedClassWithAny.ts (3 errors) ====
    class C {
        x: number;
        get X(): number { return 1; }
        foo(): number {
            return 1;
        }
    
        static y: number;
        static get Y(): number {
            return 1;
        }
        static bar(): number {
            return 1;
        }
    }
    
    class D extends C {
        x: any;
        ~
!!! error TS2612: Property 'x' will overwrite the base property in 'C'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration.
        get X(): any {
            return null;
        }
        foo(): any {
            return 1;
        }
    
        static y: any;
        static get Y(): any {
            return null;
        }
        static bar(): any {
            return null;
        }
    }
    
    // if D is a valid class definition than E is now not safe tranisitively through C
    class E extends D {
        x: string;
        ~
!!! error TS2612: Property 'x' will overwrite the base property in 'D'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration.
        get X(): string{ return ''; }
        foo(): string {
            return '';
        }
    
        static y: string;
        static get Y(): string {
            return '';
        }
        static bar(): string {
            return '';
        }
    }
    
    var c: C;
    var d: D;
    var e: E;
    
    c = d;
    c = e;
    ~
!!! error TS2322: Type 'E' is not assignable to type 'C'.
!!! error TS2322:   Types of property 'x' are incompatible.
!!! error TS2322:     Type 'string' is not assignable to type 'number'.
    var r = c.foo(); // e.foo would return string
    