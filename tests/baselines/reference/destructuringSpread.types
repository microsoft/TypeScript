//// [tests/cases/conformance/es6/destructuring/destructuringSpread.ts] ////

=== destructuringSpread.ts ===
const { x } = {
>x : number
>  : ^^^^^^
>{  ...{},  x: 0} : { x: number; }
>                 : ^^^^^^^^^^^^^^

  ...{},
>{} : {}
>   : ^^

  x: 0
>x : number
>  : ^^^^^^
>0 : 0
>  : ^

};

const { y } = {
>y : number
>  : ^^^^^^
>{  y: 0,  ...{}} : { y: number; }
>                 : ^^^^^^^^^^^^^^

  y: 0,
>y : number
>  : ^^^^^^
>0 : 0
>  : ^

  ...{}
>{} : {}
>   : ^^

};

const { z, a, b } = {
>z : number
>  : ^^^^^^
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^
>{  z: 0,  ...{ a: 0, b: 0 }} : { a: number; b: number; z: number; }
>                             : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  z: 0,
>z : number
>  : ^^^^^^
>0 : 0
>  : ^

  ...{ a: 0, b: 0 }
>{ a: 0, b: 0 } : { a: number; b: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>0 : 0
>  : ^
>b : number
>  : ^^^^^^
>0 : 0
>  : ^

};

const { c, d, e, f, g } = {
>c : number
>  : ^^^^^^
>d : number
>  : ^^^^^^
>e : number
>  : ^^^^^^
>f : number
>  : ^^^^^^
>g : any
>  : ^^^
>{  ...{    ...{      ...{        c: 0,      },      d: 0    },    e: 0  },  f: 0} : { f: number; e: number; d: number; c: number; }
>                                                                                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  ...{
>{    ...{      ...{        c: 0,      },      d: 0    },    e: 0  } : { e: number; d: number; c: number; }
>                                                                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    ...{
>{      ...{        c: 0,      },      d: 0    } : { d: number; c: number; }
>                                                : ^^^^^^^^^^^^^^^^^^^^^^^^^

      ...{
>{        c: 0,      } : { c: number; }
>                      : ^^^^^^^^^^^^^^

        c: 0,
>c : number
>  : ^^^^^^
>0 : 0
>  : ^

      },
      d: 0
>d : number
>  : ^^^^^^
>0 : 0
>  : ^

    },
    e: 0
>e : number
>  : ^^^^^^
>0 : 0
>  : ^

  },
  f: 0
>f : number
>  : ^^^^^^
>0 : 0
>  : ^

};

