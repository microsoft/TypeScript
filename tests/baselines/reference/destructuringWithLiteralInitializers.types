//// [tests/cases/conformance/es6/destructuring/destructuringWithLiteralInitializers.ts] ////

=== destructuringWithLiteralInitializers.ts ===
// (arg: { x: any, y: any }) => void
function f1({ x, y }) { }
>f1 : ({ x, y }: { x: any; y: any; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : any
>  : ^^^
>y : any
>  : ^^^

f1({ x: 1, y: 1 });
>f1({ x: 1, y: 1 }) : void
>                   : ^^^^
>f1 : ({ x, y }: { x: any; y: any; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg: { x: any, y?: number }) => void
function f2({ x, y = 0 }) { }
>f2 : ({ x, y }: { x: any; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : any
>  : ^^^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^

f2({ x: 1 });
>f2({ x: 1 }) : void
>             : ^^^^
>f2 : ({ x, y }: { x: any; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

f2({ x: 1, y: 1 });
>f2({ x: 1, y: 1 }) : void
>                   : ^^^^
>f2 : ({ x, y }: { x: any; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg: { x?: number, y?: number }) => void
function f3({ x = 0, y = 0 }) { }
>f3 : ({ x, y }: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^

f3({});
>f3({}) : void
>       : ^^^^
>f3 : ({ x, y }: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

f3({ x: 1 });
>f3({ x: 1 }) : void
>             : ^^^^
>f3 : ({ x, y }: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

f3({ y: 1 });
>f3({ y: 1 }) : void
>             : ^^^^
>f3 : ({ x, y }: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ y: 1 } : { y: number; }
>         : ^^^^^^^^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

f3({ x: 1, y: 1 });
>f3({ x: 1, y: 1 }) : void
>                   : ^^^^
>f3 : ({ x, y }: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg?: { x: number, y: number }) => void
function f4({ x, y } = { x: 0, y: 0 }) { }
>f4 : ({ x, y }?: { x: number; y: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^
>{ x: 0, y: 0 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^

f4();
>f4() : void
>     : ^^^^
>f4 : ({ x, y }?: { x: number; y: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

f4({ x: 1, y: 1 });
>f4({ x: 1, y: 1 }) : void
>                   : ^^^^
>f4 : ({ x, y }?: { x: number; y: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg?: { x: number, y?: number }) => void
function f5({ x, y = 0 } = { x: 0 }) { }
>f5 : ({ x, y }?: { x: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^
>{ x: 0 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^

f5();
>f5() : void
>     : ^^^^
>f5 : ({ x, y }?: { x: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

f5({ x: 1 });
>f5({ x: 1 }) : void
>             : ^^^^
>f5 : ({ x, y }?: { x: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

f5({ x: 1, y: 1 });
>f5({ x: 1, y: 1 }) : void
>                   : ^^^^
>f5 : ({ x, y }?: { x: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg?: { x?: number, y?: number }) => void
function f6({ x = 0, y = 0 } = {}) { }
>f6 : ({ x, y }?: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^
>{} : {}
>   : ^^

f6();
>f6() : void
>     : ^^^^
>f6 : ({ x, y }?: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

f6({});
>f6({}) : void
>       : ^^^^
>f6 : ({ x, y }?: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

f6({ x: 1 });
>f6({ x: 1 }) : void
>             : ^^^^
>f6 : ({ x, y }?: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

f6({ y: 1 });
>f6({ y: 1 }) : void
>             : ^^^^
>f6 : ({ x, y }?: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ y: 1 } : { y: number; }
>         : ^^^^^^^^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

f6({ x: 1, y: 1 });
>f6({ x: 1, y: 1 }) : void
>                   : ^^^^
>f6 : ({ x, y }?: { x?: number; y?: number; }) => void
>   : ^        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg?: { a: { x?: number, y?: number } }) => void
function f7({ a: { x = 0, y = 0 } } = { a: {} }) { }
>f7 : ({ a: { x, y } }?: { a: {}; }) => void
>   : ^               ^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

f7();
>f7() : void
>     : ^^^^
>f7 : ({ a: { x, y } }?: { a: {}; }) => void
>   : ^               ^^^^^^^^^^^^^^^^^^^^^^

f7({ a: {} });
>f7({ a: {} }) : void
>              : ^^^^
>f7 : ({ a: { x, y } }?: { a: {}; }) => void
>   : ^               ^^^^^^^^^^^^^^^^^^^^^^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

f7({ a: { x: 1 } });
>f7({ a: { x: 1 } }) : void
>                    : ^^^^
>f7 : ({ a: { x, y } }?: { a: {}; }) => void
>   : ^               ^^^^^^^^^^^^^^^^^^^^^^
>{ a: { x: 1 } } : { a: { x: number; }; }
>                : ^^^^^^^^^^^^^^^^^^^^^^
>a : { x: number; }
>  : ^^^^^^^^^^^^^^
>{ x: 1 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

f7({ a: { y: 1 } });
>f7({ a: { y: 1 } }) : void
>                    : ^^^^
>f7 : ({ a: { x, y } }?: { a: {}; }) => void
>   : ^               ^^^^^^^^^^^^^^^^^^^^^^
>{ a: { y: 1 } } : { a: { y: number; }; }
>                : ^^^^^^^^^^^^^^^^^^^^^^
>a : { y: number; }
>  : ^^^^^^^^^^^^^^
>{ y: 1 } : { y: number; }
>         : ^^^^^^^^^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

f7({ a: { x: 1, y: 1 } });
>f7({ a: { x: 1, y: 1 } }) : void
>                          : ^^^^
>f7 : ({ a: { x, y } }?: { a: {}; }) => void
>   : ^               ^^^^^^^^^^^^^^^^^^^^^^
>{ a: { x: 1, y: 1 } } : { a: { x: number; y: number; }; }
>                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : { x: number; y: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: 1, y: 1 } : { x: number; y: number; }
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

// (arg: [any, any]) => void
function g1([x, y]) { }
>g1 : ([x, y]: [any, any]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^
>x : any
>  : ^^^
>y : any
>  : ^^^

g1([1, 1]);
>g1([1, 1]) : void
>           : ^^^^
>g1 : ([x, y]: [any, any]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^
>[1, 1] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>1 : 1
>  : ^

// (arg: [number, number]) => void
function g2([x = 0, y = 0]) { }
>g2 : ([x, y]: [number?, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^

g2([1, 1]);
>g2([1, 1]) : void
>           : ^^^^
>g2 : ([x, y]: [number?, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 1] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>1 : 1
>  : ^

// (arg?: [number, number]) => void
function g3([x, y] = [0, 0]) { }
>g3 : ([x, y]?: [number, number]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^
>[0, 0] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>0 : 0
>  : ^

g3();
>g3() : void
>     : ^^^^
>g3 : ([x, y]?: [number, number]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

g3([1, 1]);
>g3([1, 1]) : void
>           : ^^^^
>g3 : ([x, y]?: [number, number]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 1] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>1 : 1
>  : ^

// (arg?: [number, number]) => void
function g4([x, y = 0] = [0]) { }
>g4 : ([x, y]?: [number, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^
>[0] : [number]
>    : ^^^^^^^^
>0 : 0
>  : ^

g4();
>g4() : void
>     : ^^^^
>g4 : ([x, y]?: [number, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

g4([1, 1]);
>g4([1, 1]) : void
>           : ^^^^
>g4 : ([x, y]?: [number, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 1] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>1 : 1
>  : ^

// (arg?: [number, number]) => void
function g5([x = 0, y = 0] = []) { }
>g5 : ([x, y]?: [number?, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^
>[] : []
>   : ^^

g5();
>g5() : void
>     : ^^^^
>g5 : ([x, y]?: [number?, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

g5([1, 1]);
>g5([1, 1]) : void
>           : ^^^^
>g5 : ([x, y]?: [number?, number?]) => void
>   : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 1] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>1 : 1
>  : ^

