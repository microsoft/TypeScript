//// [tests/cases/conformance/es6/destructuring/destructuringWithLiteralInitializers2.ts] ////

=== destructuringWithLiteralInitializers2.ts ===
function f00([x, y]) {}
>f00 : ([x, y]: [any, any]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^
>x : any
>  : ^^^
>y : any
>  : ^^^

function f01([x, y] = []) {}
>f01 : ([x, y]?: [any?, any?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^
>x : any
>  : ^^^
>y : any
>  : ^^^
>[] : []
>   : ^^

function f02([x, y] = [1]) {}
>f02 : ([x, y]?: [number, any?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : any
>  : ^^^
>[1] : [number]
>    : ^^^^^^^^
>1 : 1
>  : ^

function f03([x, y] = [1, 'foo']) {}
>f03 : ([x, y]?: [number, string]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : string
>  : ^^^^^^
>[1, 'foo'] : [number, string]
>           : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>'foo' : "foo"
>      : ^^^^^

function f10([x = 0, y]) {}
>f10 : ([x, y]: [number | undefined, any]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : any
>  : ^^^

function f11([x = 0, y] = []) {}
>f11 : ([x, y]?: [(number | undefined)?, any?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : any
>  : ^^^
>[] : []
>   : ^^

function f12([x = 0, y] = [1]) {}
>f12 : ([x, y]?: [number, any?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : any
>  : ^^^
>[1] : [number]
>    : ^^^^^^^^
>1 : 1
>  : ^

function f13([x = 0, y] = [1, 'foo']) {}
>f13 : ([x, y]?: [number, string]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>[1, 'foo'] : [number, string]
>           : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>'foo' : "foo"
>      : ^^^^^

function f20([x = 0, y = 'bar']) {}
>f20 : ([x, y]: [(number | undefined)?, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^

function f21([x = 0, y = 'bar'] = []) {}
>f21 : ([x, y]?: [(number | undefined)?, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[] : []
>   : ^^

function f22([x = 0, y = 'bar'] = [1]) {}
>f22 : ([x, y]?: [number, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[1] : [number]
>    : ^^^^^^^^
>1 : 1
>  : ^

function f23([x = 0, y = 'bar'] = [1, 'foo']) {}
>f23 : ([x, y]?: [number, string]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[1, 'foo'] : [number, string]
>           : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>'foo' : "foo"
>      : ^^^^^

declare const nx: number | undefined;
>nx : number | undefined
>   : ^^^^^^^^^^^^^^^^^^

declare const sx: string | undefined;
>sx : string | undefined
>   : ^^^^^^^^^^^^^^^^^^

function f30([x = 0, y = 'bar']) {}
>f30 : ([x, y]: [(number | undefined)?, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^

function f31([x = 0, y = 'bar'] = []) {}
>f31 : ([x, y]?: [(number | undefined)?, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[] : []
>   : ^^

function f32([x = 0, y = 'bar'] = [nx]) {}
>f32 : ([x, y]?: [number | undefined, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[nx] : [number | undefined]
>     : ^^^^^^^^^^^^^^^^^^^^
>nx : number | undefined
>   : ^^^^^^^^^^^^^^^^^^

function f33([x = 0, y = 'bar'] = [nx, sx]) {}
>f33 : ([x, y]?: [number | undefined, string | undefined]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[nx, sx] : [number | undefined, string | undefined]
>         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>nx : number | undefined
>   : ^^^^^^^^^^^^^^^^^^
>sx : string | undefined
>   : ^^^^^^^^^^^^^^^^^^

function f40([x = 0, y = 'bar']) {}
>f40 : ([x, y]: [(number | undefined)?, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^

function f41([x = 0, y = 'bar'] = []) {}
>f41 : ([x, y]?: [(number | undefined)?, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[] : []
>   : ^^

function f42([x = 0, y = 'bar'] = [sx]) {}
>f42 : ([x, y]?: [string | undefined, (string | undefined)?]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : string | number
>  : ^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>y : string
>  : ^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[sx] : [string | undefined]
>     : ^^^^^^^^^^^^^^^^^^^^
>sx : string | undefined
>   : ^^^^^^^^^^^^^^^^^^

function f43([x = 0, y = 'bar'] = [sx, nx]) {}
>f43 : ([x, y]?: [string | undefined, number | undefined]) => void
>    : ^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : string | number
>  : ^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>y : string | number
>  : ^^^^^^^^^^^^^^^
>'bar' : "bar"
>      : ^^^^^
>[sx, nx] : [string | undefined, number | undefined]
>         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>sx : string | undefined
>   : ^^^^^^^^^^^^^^^^^^
>nx : number | undefined
>   : ^^^^^^^^^^^^^^^^^^

