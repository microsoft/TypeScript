//// [tests/cases/compiler/downlevelLetConst17.ts] ////

=== downlevelLetConst17.ts ===
'use strict'
>'use strict' : "use strict"
>             : ^^^^^^^^^^^^

declare function use(a: any);
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>a : any

var x;
>x : any

for (let x = 10; ;) {
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : number
>  : ^^^^^^
}
use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any

for (const x = 10; ;) {
>x : 10
>  : ^^
>10 : 10
>   : ^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : 10
>  : ^^
}

for (; ;) {
    let x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : number
>  : ^^^^^^

    x = 1;
>x = 1 : 1
>      : ^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
}

for (; ;) {
    const x = 10;
>x : 10
>  : ^^
>10 : 10
>   : ^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : 10
>  : ^^
}

for (let x; ;) {
>x : any

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any

    x = 1;
>x = 1 : 1
>      : ^
>x : any
>1 : 1
>  : ^
}

for (; ;) {
    let x;
>x : any

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any

    x = 1;
>x = 1 : 1
>      : ^
>x : any
>1 : 1
>  : ^
}

while (true) {
>true : true
>     : ^^^^

    let x;
>x : any

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any
}

while (true) {
>true : true
>     : ^^^^

    const x = true;
>x : true
>  : ^^^^
>true : true
>     : ^^^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : true
>  : ^^^^
}

do {
    let x;
>x : any

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any

} while (true);
>true : true
>     : ^^^^

do {
    let x;
>x : any

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any

} while (true);
>true : true
>     : ^^^^

for (let x in []) {
>x : string
>  : ^^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : string
>  : ^^^^^^
}

for (const x in []) {
>x : string
>  : ^^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : string
>  : ^^^^^^
}

for (const x of []) {
>x : any
>[] : undefined[]
>   : ^^^^^^^^^^^

    use(x);
>use(x) : any
>use : (a: any) => any
>    : ^ ^^   ^^^^^^^^
>x : any
}
