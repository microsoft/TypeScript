//// [tests/cases/conformance/externalModules/duplicateExportAssignments.ts] ////

=== foo1.ts ===
var x = 10;
>x : Symbol(x, Decl(foo1.ts, 0, 3))

var y = 20;
>y : Symbol(y, Decl(foo1.ts, 1, 3))

export = x;
>x : Symbol(x, Decl(foo1.ts, 0, 3))

export = y;
>y : Symbol(y, Decl(foo1.ts, 1, 3))

=== foo2.ts ===
var x = 10;
>x : Symbol(x, Decl(foo2.ts, 0, 3))

class y {};
>y : Symbol(y, Decl(foo2.ts, 0, 11))

export = x;
>x : Symbol(x, Decl(foo2.ts, 0, 3))

export = y;
>y : Symbol(y, Decl(foo2.ts, 0, 11))

=== foo3.ts ===
namespace x {
>x : Symbol(x, Decl(foo3.ts, 0, 0))

	export var x = 10;
>x : Symbol(x, Decl(foo3.ts, 1, 11))
}
class y {
>y : Symbol(y, Decl(foo3.ts, 2, 1))

	y: number;
>y : Symbol(y.y, Decl(foo3.ts, 3, 9))
}
export = x;
>x : Symbol(x, Decl(foo3.ts, 0, 0))

export = y;
>y : Symbol(y, Decl(foo3.ts, 2, 1))

=== foo4.ts ===
export = x;
>x : Symbol(x, Decl(foo4.ts, 0, 11))

function x(){
>x : Symbol(x, Decl(foo4.ts, 0, 11))

	return 42;
}
function y(){
>y : Symbol(y, Decl(foo4.ts, 3, 1))

	return 42;
}
export = y;
>y : Symbol(y, Decl(foo4.ts, 3, 1))

=== foo5.ts ===
var x = 5;
>x : Symbol(x, Decl(foo5.ts, 0, 3))

var y = "test";
>y : Symbol(y, Decl(foo5.ts, 1, 3))

var z = {};
>z : Symbol(z, Decl(foo5.ts, 2, 3))

export = x;
>x : Symbol(x, Decl(foo5.ts, 0, 3))

export = y;
>y : Symbol(y, Decl(foo5.ts, 1, 3))

export = z;
>z : Symbol(z, Decl(foo5.ts, 2, 3))

