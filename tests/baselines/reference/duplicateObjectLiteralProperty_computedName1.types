//// [tests/cases/compiler/duplicateObjectLiteralProperty_computedName1.ts] ////

=== duplicateObjectLiteralProperty_computedName1.ts ===
const t1 = {
>t1 : { 1: number; }
>   : ^^^^^^^^^^^^^^
>{    1: 1,    [1]: 0 // duplicate} : { 1: number; }
>                                   : ^^^^^^^^^^^^^^

    1: 1,
>1 : number
>  : ^^^^^^
>1 : 1
>  : ^

    [1]: 0 // duplicate
>[1] : number
>    : ^^^^^^
>1 : 1
>  : ^
>0 : 0
>  : ^
}

const t2 = {
>t2 : { 1: number; }
>   : ^^^^^^^^^^^^^^
>{    1: 1,    [+1]: 0 // duplicate} : { 1: number; }
>                                    : ^^^^^^^^^^^^^^

    1: 1,
>1 : number
>  : ^^^^^^
>1 : 1
>  : ^

    [+1]: 0 // duplicate
>[+1] : number
>     : ^^^^^^
>+1 : 1
>   : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
}

const t3 = {
>t3 : { 1: number; }
>   : ^^^^^^^^^^^^^^
>{    "1": 1,    [+1]: 0 // duplicate} : { 1: number; }
>                                      : ^^^^^^^^^^^^^^

    "1": 1,
>"1" : number
>    : ^^^^^^
>1 : 1
>  : ^

    [+1]: 0 // duplicate
>[+1] : number
>     : ^^^^^^
>+1 : 1
>   : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
}

const t4 = {
>t4 : { "+1": number; 1: number; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    "+1": 1,    [+1]: 0 // two different keys, "+1", "1"} : { "+1": number; 1: number; }
>                                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    "+1": 1,
>"+1" : number
>     : ^^^^^^
>1 : 1
>  : ^

    [+1]: 0 // two different keys, "+1", "1"
>[+1] : number
>     : ^^^^^^
>+1 : 1
>   : ^
>1 : 1
>  : ^
>0 : 0
>  : ^
}

const t5 = {
>t5 : { "+1": number; }
>   : ^^^^^^^^^^^^^^^^^
>{    "+1": 1,    ["+1"]: 0 // duplicate} : { "+1": number; }
>                                         : ^^^^^^^^^^^^^^^^^

    "+1": 1,
>"+1" : number
>     : ^^^^^^
>1 : 1
>  : ^

    ["+1"]: 0 // duplicate
>["+1"] : number
>       : ^^^^^^
>"+1" : "+1"
>     : ^^^^
>0 : 0
>  : ^
}

const t6 = {
>t6 : { [-1]: number; }
>   : ^^^^^^^^^^^^^^^^^
>{    "-1": 1,    [-1]: 0 // duplicate} : { [-1]: number; }
>                                       : ^^^^^^^^^^^^^^^^^

    "-1": 1,
>"-1" : number
>     : ^^^^^^
>1 : 1
>  : ^

    [-1]: 0 // duplicate
>[-1] : number
>     : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>0 : 0
>  : ^
}

const t7 = {
>t7 : { "-1": number; }
>   : ^^^^^^^^^^^^^^^^^
>{    "-1": 1,    ["-1"]: 0 // duplicate} : { "-1": number; }
>                                         : ^^^^^^^^^^^^^^^^^

    "-1": 1,
>"-1" : number
>     : ^^^^^^
>1 : 1
>  : ^

    ["-1"]: 0 // duplicate
>["-1"] : number
>       : ^^^^^^
>"-1" : "-1"
>     : ^^^^
>0 : 0
>  : ^
}

