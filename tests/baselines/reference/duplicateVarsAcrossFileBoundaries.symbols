//// [tests/cases/compiler/duplicateVarsAcrossFileBoundaries.ts] ////

=== duplicateVarsAcrossFileBoundaries_0.ts ===
var x = 3;
>x : Symbol(x, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_1.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 0, 3))

var y = "";
>y : Symbol(y, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 1, 3))

=== duplicateVarsAcrossFileBoundaries_1.ts ===
var x = true;
>x : Symbol(x, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_1.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 0, 3))

var z = 3;
>z : Symbol(z, Decl(duplicateVarsAcrossFileBoundaries_1.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 2, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 2, 3))

=== duplicateVarsAcrossFileBoundaries_2.ts ===
var x = "";
>x : Symbol(x, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_1.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 0, 3))

var y = 3;
>y : Symbol(y, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 1, 3))

var z = false;
>z : Symbol(z, Decl(duplicateVarsAcrossFileBoundaries_1.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 2, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 2, 3))

=== duplicateVarsAcrossFileBoundaries_3.ts ===
var x = 0;
>x : Symbol(x, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_1.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 0, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 0, 3))

var y = "";
>y : Symbol(y, Decl(duplicateVarsAcrossFileBoundaries_0.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 1, 3))

var z = 0;
>z : Symbol(z, Decl(duplicateVarsAcrossFileBoundaries_1.ts, 1, 3), Decl(duplicateVarsAcrossFileBoundaries_2.ts, 2, 3), Decl(duplicateVarsAcrossFileBoundaries_3.ts, 2, 3))

=== duplicateVarsAcrossFileBoundaries_4.ts ===
namespace P { }
>P : Symbol(P, Decl(duplicateVarsAcrossFileBoundaries_4.ts, 0, 0), Decl(duplicateVarsAcrossFileBoundaries_5.ts, 2, 3))

import p = P;
>p : Symbol(p, Decl(duplicateVarsAcrossFileBoundaries_4.ts, 0, 15))
>P : Symbol(P, Decl(duplicateVarsAcrossFileBoundaries_4.ts, 0, 0), Decl(duplicateVarsAcrossFileBoundaries_5.ts, 2, 3))

var q;
>q : Symbol(q, Decl(duplicateVarsAcrossFileBoundaries_4.ts, 2, 3), Decl(duplicateVarsAcrossFileBoundaries_5.ts, 0, 15))

=== duplicateVarsAcrossFileBoundaries_5.ts ===
namespace Q { }
>Q : Symbol(Q, Decl(duplicateVarsAcrossFileBoundaries_5.ts, 0, 0))

import q = Q;
>q : Symbol(q, Decl(duplicateVarsAcrossFileBoundaries_4.ts, 2, 3), Decl(duplicateVarsAcrossFileBoundaries_5.ts, 0, 15))
>Q : Symbol(Q, Decl(duplicateVarsAcrossFileBoundaries_5.ts, 0, 0))

var p;
>p : Symbol(P, Decl(duplicateVarsAcrossFileBoundaries_4.ts, 0, 0), Decl(duplicateVarsAcrossFileBoundaries_5.ts, 2, 3))

