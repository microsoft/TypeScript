//// [tests/cases/compiler/dynamicImportEvaluateSpecifier.ts] ////

=== dynamicImportEvaluateSpecifier.ts ===
// https://github.com/microsoft/TypeScript/issues/48285
let i = 0;
>i : number
>  : ^^^^^^
>0 : 0
>  : ^

import(String(i++));
>import(String(i++)) : Promise<any>
>                    : ^^^^^^^^^^^^
>String(i++) : string
>            : ^^^^^^
>String : StringConstructor
>       : ^^^^^^^^^^^^^^^^^
>i++ : number
>    : ^^^^^^
>i : number
>  : ^^^^^^

import(String(i++));
>import(String(i++)) : Promise<any>
>                    : ^^^^^^^^^^^^
>String(i++) : string
>            : ^^^^^^
>String : StringConstructor
>       : ^^^^^^^^^^^^^^^^^
>i++ : number
>    : ^^^^^^
>i : number
>  : ^^^^^^

const getPath = async () => {
>getPath : () => Promise<string>
>        : ^^^^^^^^^^^^^^^^^^^^^
>async () => {	/* in reality this would do some async FS operation, or a web request */	return "/root/my/cool/path";} : () => Promise<string>
>                                                                                                                     : ^^^^^^^^^^^^^^^^^^^^^

	/* in reality this would do some async FS operation, or a web request */
	return "/root/my/cool/path";
>"/root/my/cool/path" : "/root/my/cool/path"
>                     : ^^^^^^^^^^^^^^^^^^^^

};

const someFunction = async () => {
>someFunction : () => Promise<void>
>             : ^^^^^^^^^^^^^^^^^^^
>async () => {	const result = await import(await getPath());} : () => Promise<void>
>                                                             : ^^^^^^^^^^^^^^^^^^^

	const result = await import(await getPath());
>result : any
>await import(await getPath()) : any
>import(await getPath()) : Promise<any>
>                        : ^^^^^^^^^^^^
>await getPath() : string
>                : ^^^^^^
>getPath() : Promise<string>
>          : ^^^^^^^^^^^^^^^
>getPath : () => Promise<string>
>        : ^^^^^^^^^^^^^^^^^^^^^

};

