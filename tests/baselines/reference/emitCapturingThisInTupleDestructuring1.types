//// [tests/cases/compiler/emitCapturingThisInTupleDestructuring1.ts] ////

=== emitCapturingThisInTupleDestructuring1.ts ===
declare function wrapper(x: any);
>wrapper : (x: any) => any
>        : ^ ^^   ^^^^^^^^
>x : any
>  : ^^^

wrapper((array: [any]) => {
>wrapper((array: [any]) => {    [this.test, this.test1, this.test2] = array;  // even though there is a compiler error, we should still emit lexical capture for "this"}) : any
>                                                                                                                                                                         : ^^^
>wrapper : (x: any) => any
>        : ^ ^^   ^^^^^^^^
>(array: [any]) => {    [this.test, this.test1, this.test2] = array;  // even though there is a compiler error, we should still emit lexical capture for "this"} : (array: [any]) => void
>                                                                                                                                                                : ^     ^^     ^^^^^^^^^
>array : [any]
>      : ^^^^^

    [this.test, this.test1, this.test2] = array;  // even though there is a compiler error, we should still emit lexical capture for "this"
>[this.test, this.test1, this.test2] = array : [any]
>                                            : ^^^^^
>[this.test, this.test1, this.test2] : [any, any, any]
>                                    : ^^^^^^^^^^^^^^^
>this.test : any
>          : ^^^
>this : typeof globalThis
>     : ^^^^^^^^^^^^^^^^^
>test : any
>     : ^^^
>this.test1 : any
>           : ^^^
>this : typeof globalThis
>     : ^^^^^^^^^^^^^^^^^
>test1 : any
>      : ^^^
>this.test2 : any
>           : ^^^
>this : typeof globalThis
>     : ^^^^^^^^^^^^^^^^^
>test2 : any
>      : ^^^
>array : [any]
>      : ^^^^^

});
