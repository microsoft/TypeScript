//// [tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithExtensionInES6.ts] ////

=== emitClassDeclarationWithExtensionInES6.ts ===
class B {
>B : B
>  : ^

    baz(a: string, y = 10) { }
>baz : (a: string, y?: number) => void
>    : ^ ^^      ^^ ^^^^^^^^^^^^^^^^^^
>a : string
>  : ^^^^^^
>y : number
>  : ^^^^^^
>10 : 10
>   : ^^
}
class C extends B {
>C : C
>  : ^
>B : B
>  : ^

    foo() { }
>foo : () => void
>    : ^^^^^^^^^^

    baz(a: string, y:number) {
>baz : (a: string, y: number) => void
>    : ^ ^^      ^^ ^^      ^^^^^^^^^
>a : string
>  : ^^^^^^
>y : number
>  : ^^^^^^

        super.baz(a, y);
>super.baz(a, y) : void
>                : ^^^^
>super.baz : (a: string, y?: number) => void
>          : ^ ^^      ^^ ^^^^^^^^^^^^^^^^^^
>super : B
>      : ^
>baz : (a: string, y?: number) => void
>    : ^ ^^      ^^ ^^^^^^^^^^^^^^^^^^
>a : string
>  : ^^^^^^
>y : number
>  : ^^^^^^
    }
}
class D extends C {
>D : D
>  : ^
>C : C
>  : ^

    constructor() {
        super();
>super() : void
>        : ^^^^
>super : typeof C
>      : ^^^^^^^^
    }

    foo() {
>foo : () => void
>    : ^^^^^^^^^^

        super.foo();
>super.foo() : void
>            : ^^^^
>super.foo : () => void
>          : ^^^^^^^^^^
>super : C
>      : ^
>foo : () => void
>    : ^^^^^^^^^^
    }

    baz() {
>baz : () => void
>    : ^^^^^^^^^^

        super.baz("hello", 10);
>super.baz("hello", 10) : void
>                       : ^^^^
>super.baz : (a: string, y: number) => void
>          : ^ ^^      ^^ ^^      ^^^^^^^^^
>super : C
>      : ^
>baz : (a: string, y: number) => void
>    : ^ ^^      ^^ ^^      ^^^^^^^^^
>"hello" : "hello"
>        : ^^^^^^^
>10 : 10
>   : ^^
    }
}

