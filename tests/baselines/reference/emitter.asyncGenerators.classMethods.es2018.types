//// [tests/cases/conformance/emitter/es2018/asyncGenerators/emitter.asyncGenerators.classMethods.es2018.ts] ////

=== C1.ts ===
class C1 {
>C1 : C1
>   : ^^

    async * f() {
>f : () => AsyncGenerator<never, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
}
=== C2.ts ===
class C2 {
>C2 : C2
>   : ^^

    async * f() {
>f : () => AsyncGenerator<any, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield;
>x : any
>yield : any
    }
}
=== C3.ts ===
class C3 {
>C3 : C3
>   : ^^

    async * f() {
>f : () => AsyncGenerator<number, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield 1;
>x : any
>yield 1 : any
>1 : 1
>  : ^
    }
}
=== C4.ts ===
class C4 {
>C4 : C4
>   : ^^

    async * f() {
>f : () => AsyncGenerator<number, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield* [1];
>x : any
>yield* [1] : any
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
    }
}
=== C5.ts ===
class C5 {
>C5 : C5
>   : ^^

    async * f() {
>f : () => AsyncGenerator<number, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield* (async function*() { yield 1; })();
>x : void
>  : ^^^^
>yield* (async function*() { yield 1; })() : void
>                                          : ^^^^
>(async function*() { yield 1; })() : AsyncGenerator<number, void, unknown>
>                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>(async function*() { yield 1; }) : () => AsyncGenerator<number, void, unknown>
>                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>async function*() { yield 1; } : () => AsyncGenerator<number, void, unknown>
>                               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>yield 1 : any
>1 : 1
>  : ^
    }
}
=== C6.ts ===
class C6 {
>C6 : C6
>   : ^^

    async * f() {
>f : () => AsyncGenerator<never, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = await 1;
>x : 1
>  : ^
>await 1 : 1
>        : ^
>1 : 1
>  : ^
    }
}
=== C7.ts ===
class C7 {
>C7 : C7
>   : ^^

    async * f() {
>f : () => AsyncGenerator<never, number, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        return 1;
>1 : 1
>  : ^
    }
}
=== C8.ts ===
class C8 {
>C8 : C8
>   : ^^

    g() {
>g : () => void
>  : ^^^^^^^^^^
    }
    async * f() {
>f : () => AsyncGenerator<never, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        this.g();
>this.g() : void
>         : ^^^^
>this.g : () => void
>       : ^^^^^^^^^^
>this : this
>     : ^^^^
>g : () => void
>  : ^^^^^^^^^^
    }
}
=== C9.ts ===
class B9 {
>B9 : B9
>   : ^^

    g() {}
>g : () => void
>  : ^^^^^^^^^^
}
class C9 extends B9 {
>C9 : C9
>   : ^^
>B9 : B9
>   : ^^

    async * f() {
>f : () => AsyncGenerator<never, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        super.g();
>super.g() : void
>          : ^^^^
>super.g : () => void
>        : ^^^^^^^^^^
>super : B9
>      : ^^
>g : () => void
>  : ^^^^^^^^^^
    }
}

