//// [tests/cases/conformance/emitter/es2018/asyncGenerators/emitter.asyncGenerators.objectLiteralMethods.es2018.ts] ////

=== O1.ts ===
const o1 = {
>o1 : { f(): AsyncGenerator<never, void, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {    }} : { f(): AsyncGenerator<never, void, unknown>; }
>                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<never, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
}
=== O2.ts ===
const o2 = {
>o2 : { f(): AsyncGenerator<any, void, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {        const x = yield;    }} : { f(): AsyncGenerator<any, void, unknown>; }
>                                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<any, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield;
>x : any
>yield : any
    }
}
=== O3.ts ===
const o3 = {
>o3 : { f(): AsyncGenerator<number, void, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {        const x = yield 1;    }} : { f(): AsyncGenerator<number, void, unknown>; }
>                                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<number, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield 1;
>x : any
>yield 1 : any
>1 : 1
>  : ^
    }
}
=== O4.ts ===
const o4 = {
>o4 : { f(): AsyncGenerator<number, void, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {        const x = yield* [1];    }} : { f(): AsyncGenerator<number, void, unknown>; }
>                                                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<number, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield* [1];
>x : any
>yield* [1] : any
>[1] : number[]
>    : ^^^^^^^^
>1 : 1
>  : ^
    }
}
=== O5.ts ===
const o5 = {
>o5 : { f(): AsyncGenerator<number, void, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {        const x = yield* (async function*() { yield 1; })();    }} : { f(): AsyncGenerator<number, void, unknown>; }
>                                                                                     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<number, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = yield* (async function*() { yield 1; })();
>x : void
>  : ^^^^
>yield* (async function*() { yield 1; })() : void
>                                          : ^^^^
>(async function*() { yield 1; })() : AsyncGenerator<number, void, unknown>
>                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>(async function*() { yield 1; }) : () => AsyncGenerator<number, void, unknown>
>                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>async function*() { yield 1; } : () => AsyncGenerator<number, void, unknown>
>                               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>yield 1 : any
>1 : 1
>  : ^
    }
}
=== O6.ts ===
const o6 = {
>o6 : { f(): AsyncGenerator<never, void, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {        const x = await 1;    }} : { f(): AsyncGenerator<never, void, unknown>; }
>                                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<never, void, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        const x = await 1;
>x : 1
>  : ^
>await 1 : 1
>        : ^
>1 : 1
>  : ^
    }
}
=== O7.ts ===
const o7 = {
>o7 : { f(): AsyncGenerator<never, number, unknown>; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    async * f() {        return 1;    }} : { f(): AsyncGenerator<never, number, unknown>; }
>                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    async * f() {
>f : () => AsyncGenerator<never, number, unknown>
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        return 1;
>1 : 1
>  : ^
    }
}

