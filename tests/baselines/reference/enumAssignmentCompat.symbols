//// [tests/cases/compiler/enumAssignmentCompat.ts] ////

=== enumAssignmentCompat.ts ===
namespace W {
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

    export class D { }
>D : Symbol(D, Decl(enumAssignmentCompat.ts, 0, 13))
}

enum W {
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

    a, b, c,
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>b : Symbol(W.b, Decl(enumAssignmentCompat.ts, 6, 6))
>c : Symbol(W.c, Decl(enumAssignmentCompat.ts, 6, 9))

}


interface WStatic {
>WStatic : Symbol(WStatic, Decl(enumAssignmentCompat.ts, 8, 1))

    a: W;
>a : Symbol(WStatic.a, Decl(enumAssignmentCompat.ts, 11, 19))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

    b: W;
>b : Symbol(WStatic.b, Decl(enumAssignmentCompat.ts, 13, 9))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

    c: W;
>c : Symbol(WStatic.c, Decl(enumAssignmentCompat.ts, 15, 9))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

}



var x: WStatic = W;
>x : Symbol(x, Decl(enumAssignmentCompat.ts, 23, 3))
>WStatic : Symbol(WStatic, Decl(enumAssignmentCompat.ts, 8, 1))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

var y: typeof W = W;
>y : Symbol(y, Decl(enumAssignmentCompat.ts, 24, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

var z: number = W; // error
>z : Symbol(z, Decl(enumAssignmentCompat.ts, 25, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

var a: number = W.a;
>a : Symbol(a, Decl(enumAssignmentCompat.ts, 26, 3))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

var b: typeof W = W.a; // error
>b : Symbol(b, Decl(enumAssignmentCompat.ts, 27, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

var c: typeof W.a = W.a;
>c : Symbol(c, Decl(enumAssignmentCompat.ts, 28, 3))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

var d: typeof W = 3; // error
>d : Symbol(d, Decl(enumAssignmentCompat.ts, 29, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

var e: typeof W.a = 4;
>e : Symbol(e, Decl(enumAssignmentCompat.ts, 30, 3))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

var f: WStatic = W.a; // error
>f : Symbol(f, Decl(enumAssignmentCompat.ts, 31, 3))
>WStatic : Symbol(WStatic, Decl(enumAssignmentCompat.ts, 8, 1))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

var g: WStatic = 5; // error
>g : Symbol(g, Decl(enumAssignmentCompat.ts, 32, 3))
>WStatic : Symbol(WStatic, Decl(enumAssignmentCompat.ts, 8, 1))

var h: W = 3;
>h : Symbol(h, Decl(enumAssignmentCompat.ts, 33, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))

var i: W = W.a;
>i : Symbol(i, Decl(enumAssignmentCompat.ts, 34, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

i = W.a;
>i : Symbol(i, Decl(enumAssignmentCompat.ts, 34, 3))
>W.a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>a : Symbol(W.a, Decl(enumAssignmentCompat.ts, 4, 8))

W.D;
>W.D : Symbol(W.D, Decl(enumAssignmentCompat.ts, 0, 13))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>D : Symbol(W.D, Decl(enumAssignmentCompat.ts, 0, 13))

var p: W.D;
>p : Symbol(p, Decl(enumAssignmentCompat.ts, 37, 3))
>W : Symbol(W, Decl(enumAssignmentCompat.ts, 0, 0), Decl(enumAssignmentCompat.ts, 2, 1))
>D : Symbol(W.D, Decl(enumAssignmentCompat.ts, 0, 13))

