//// [tests/cases/compiler/es5-asyncFunctionArrayLiterals.ts] ////

=== es5-asyncFunctionArrayLiterals.ts ===
declare var x, y, z, a;
>x : any
>y : any
>z : any
>a : any

async function arrayLiteral0() {
>arrayLiteral0 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [await y, z];
>x = [await y, z] : any[]
>                 : ^^^^^
>x : any
>[await y, z] : any[]
>             : ^^^^^
>await y : any
>y : any
>z : any
}

async function arrayLiteral1() {
>arrayLiteral1 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [y, await z];
>x = [y, await z] : any[]
>                 : ^^^^^
>x : any
>[y, await z] : any[]
>             : ^^^^^
>y : any
>await z : any
>z : any
}

async function arrayLiteral2() {
>arrayLiteral2 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [...(await y), z];
>x = [...(await y), z] : any[]
>                      : ^^^^^
>x : any
>[...(await y), z] : any[]
>                  : ^^^^^
>...(await y) : any
>(await y) : any
>await y : any
>y : any
>z : any
}

async function arrayLiteral3() {
>arrayLiteral3 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [...y, await z];
>x = [...y, await z] : any[]
>                    : ^^^^^
>x : any
>[...y, await z] : any[]
>                : ^^^^^
>...y : any
>y : any
>await z : any
>z : any
}

async function arrayLiteral4() {
>arrayLiteral4 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [await y, ...z];
>x = [await y, ...z] : any[]
>                    : ^^^^^
>x : any
>[await y, ...z] : any[]
>                : ^^^^^
>await y : any
>y : any
>...z : any
>z : any
}

async function arrayLiteral5() {
>arrayLiteral5 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [y, ...(await z)];
>x = [y, ...(await z)] : any[]
>                      : ^^^^^
>x : any
>[y, ...(await z)] : any[]
>                  : ^^^^^
>y : any
>...(await z) : any
>(await z) : any
>await z : any
>z : any
}

async function arrayLiteral6() {
>arrayLiteral6 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [y, await z, a];
>x = [y, await z, a] : any[]
>                    : ^^^^^
>x : any
>[y, await z, a] : any[]
>                : ^^^^^
>y : any
>await z : any
>z : any
>a : any
}

async function arrayLiteral7() {
>arrayLiteral7 : () => Promise<void>
>              : ^^^^^^^^^^^^^^^^^^^

    x = [await y, z, await a];
>x = [await y, z, await a] : any[]
>                          : ^^^^^
>x : any
>[await y, z, await a] : any[]
>                      : ^^^^^
>await y : any
>y : any
>z : any
>await a : any
>a : any
}
