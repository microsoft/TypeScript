//// [tests/cases/compiler/es5-asyncFunctionNewExpressions.ts] ////

=== es5-asyncFunctionNewExpressions.ts ===
declare var x, y, z, a, b, c;
>x : any
>y : any
>z : any
>a : any
>b : any
>c : any

async function newExpression0() {
>newExpression0 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    await new x(y, z);
>await new x(y, z) : any
>new x(y, z) : any
>x : any
>y : any
>z : any
}

async function newExpression1() {
>newExpression1 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new (await x)(y, z);
>new (await x)(y, z) : any
>(await x) : any
>await x : any
>x : any
>y : any
>z : any
}

async function newExpression2() {
>newExpression2 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new x(await y, z);
>new x(await y, z) : any
>x : any
>await y : any
>y : any
>z : any
}

async function newExpression3() {
>newExpression3 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new x(y, await z);
>new x(y, await z) : any
>x : any
>y : any
>await z : any
>z : any
}

async function newExpression4() {
>newExpression4 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    await new x(...y, z);
>await new x(...y, z) : any
>new x(...y, z) : any
>x : any
>...y : any
>y : any
>z : any
}

async function newExpression5() {
>newExpression5 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new (await x)(...y, z);
>new (await x)(...y, z) : any
>(await x) : any
>await x : any
>x : any
>...y : any
>y : any
>z : any
}

async function newExpression6() {
>newExpression6 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new x(...(await y), z);
>new x(...(await y), z) : any
>x : any
>...(await y) : any
>(await y) : any
>await y : any
>y : any
>z : any
}

async function newExpression7() {
>newExpression7 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new x(...y, await z);
>new x(...y, await z) : any
>x : any
>...y : any
>y : any
>await z : any
>z : any
}

async function newExpression8() {
>newExpression8 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new x(await y, ...z);
>new x(await y, ...z) : any
>x : any
>await y : any
>y : any
>...z : any
>z : any
}

async function newExpression9() {
>newExpression9 : () => Promise<void>
>               : ^^^^^^^^^^^^^^^^^^^

    new x(y, ...(await z));
>new x(y, ...(await z)) : any
>x : any
>y : any
>...(await z) : any
>(await z) : any
>await z : any
>z : any
}

async function newExpression10() {
>newExpression10 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    await new x.a(y, z);
>await new x.a(y, z) : any
>new x.a(y, z) : any
>x.a : any
>x : any
>  : ^^^
>a : any
>  : ^^^
>y : any
>z : any
}

async function newExpression11() {
>newExpression11 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new (await x.a)(y, z);
>new (await x.a)(y, z) : any
>(await x.a) : any
>await x.a : any
>x.a : any
>x : any
>  : ^^^
>a : any
>  : ^^^
>y : any
>z : any
}

async function newExpression12() {
>newExpression12 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new (await x).a(y, z);
>new (await x).a(y, z) : any
>(await x).a : any
>(await x) : any
>          : ^^^
>await x : any
>x : any
>a : any
>  : ^^^
>y : any
>z : any
}

async function newExpression13() {
>newExpression13 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new x.a(await y, z);
>new x.a(await y, z) : any
>x.a : any
>x : any
>  : ^^^
>a : any
>  : ^^^
>await y : any
>y : any
>z : any
}

async function newExpression14() {
>newExpression14 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new x.a(y, await z);
>new x.a(y, await z) : any
>x.a : any
>x : any
>  : ^^^
>a : any
>  : ^^^
>y : any
>await z : any
>z : any
}

async function newExpression15() {
>newExpression15 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    await new x[a](y, z);
>await new x[a](y, z) : any
>new x[a](y, z) : any
>x[a] : any
>x : any
>a : any
>y : any
>z : any
}

async function newExpression16() {
>newExpression16 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new (await x[a])(y, z);
>new (await x[a])(y, z) : any
>(await x[a]) : any
>await x[a] : any
>x[a] : any
>x : any
>a : any
>y : any
>z : any
}

async function newExpression17() {
>newExpression17 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new (await x)[a](y, z);
>new (await x)[a](y, z) : any
>(await x)[a] : any
>(await x) : any
>await x : any
>x : any
>a : any
>y : any
>z : any
}

async function newExpression18() {
>newExpression18 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new x[await a](y, z);
>new x[await a](y, z) : any
>x[await a] : any
>x : any
>await a : any
>a : any
>y : any
>z : any
}

async function newExpression19() {
>newExpression19 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new x[a](await y, z);
>new x[a](await y, z) : any
>x[a] : any
>x : any
>a : any
>await y : any
>y : any
>z : any
}

async function newExpression20() {
>newExpression20 : () => Promise<void>
>                : ^^^^^^^^^^^^^^^^^^^

    new x[a](y, await z);
>new x[a](y, await z) : any
>x[a] : any
>x : any
>a : any
>y : any
>await z : any
>z : any
}
