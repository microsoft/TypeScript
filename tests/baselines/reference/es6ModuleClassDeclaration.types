//// [tests/cases/compiler/es6ModuleClassDeclaration.ts] ////

=== es6ModuleClassDeclaration.ts ===
export class c {
>c : c
>  : ^

    constructor() {
    }
    private x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

    public y = 30;
>y : number
>  : ^^^^^^
>30 : 30
>   : ^^

    static k = 20;
>k : number
>  : ^^^^^^
>20 : 20
>   : ^^

    private static l = 30;
>l : number
>  : ^^^^^^
>30 : 30
>   : ^^

    private method1() {
>method1 : () => void
>        : ^^^^^^^^^^
    }
    public method2() {
>method2 : () => void
>        : ^^^^^^^^^^
    }
    static method3() {
>method3 : () => void
>        : ^^^^^^^^^^
    }
    private static method4() {
>method4 : () => void
>        : ^^^^^^^^^^
    }
}
class c2 {
>c2 : c2
>   : ^^

    constructor() {
    }
    private x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

    public y = 30;
>y : number
>  : ^^^^^^
>30 : 30
>   : ^^

    static k = 20;
>k : number
>  : ^^^^^^
>20 : 20
>   : ^^

    private static l = 30;
>l : number
>  : ^^^^^^
>30 : 30
>   : ^^

    private method1() {
>method1 : () => void
>        : ^^^^^^^^^^
    }
    public method2() {
>method2 : () => void
>        : ^^^^^^^^^^
    }
    static method3() {
>method3 : () => void
>        : ^^^^^^^^^^
    }
    private static method4() {
>method4 : () => void
>        : ^^^^^^^^^^
    }
}
new c();
>new c() : c
>        : ^
>c : typeof c
>  : ^^^^^^^^

new c2();
>new c2() : c2
>         : ^^
>c2 : typeof c2
>   : ^^^^^^^^^

export module m1 {
>m1 : typeof m1
>   : ^^^^^^^^^

    export class c3 {
>c3 : c3
>   : ^^

        constructor() {
        }
        private x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

        public y = 30;
>y : number
>  : ^^^^^^
>30 : 30
>   : ^^

        static k = 20;
>k : number
>  : ^^^^^^
>20 : 20
>   : ^^

        private static l = 30;
>l : number
>  : ^^^^^^
>30 : 30
>   : ^^

        private method1() {
>method1 : () => void
>        : ^^^^^^^^^^
        }
        public method2() {
>method2 : () => void
>        : ^^^^^^^^^^
        }
        static method3() {
>method3 : () => void
>        : ^^^^^^^^^^
        }
        private static method4() {
>method4 : () => void
>        : ^^^^^^^^^^
        }
    }
    class c4 {
>c4 : c4
>   : ^^

        constructor() {
        }
        private x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

        public y = 30;
>y : number
>  : ^^^^^^
>30 : 30
>   : ^^

        static k = 20;
>k : number
>  : ^^^^^^
>20 : 20
>   : ^^

        private static l = 30;
>l : number
>  : ^^^^^^
>30 : 30
>   : ^^

        private method1() {
>method1 : () => void
>        : ^^^^^^^^^^
        }
        public method2() {
>method2 : () => void
>        : ^^^^^^^^^^
        }
        static method3() {
>method3 : () => void
>        : ^^^^^^^^^^
        }
        private static method4() {
>method4 : () => void
>        : ^^^^^^^^^^
        }
    }
    new c();
>new c() : c
>        : ^
>c : typeof c
>  : ^^^^^^^^

    new c2();
>new c2() : c2
>         : ^^
>c2 : typeof c2
>   : ^^^^^^^^^

    new c3();
>new c3() : c3
>         : ^^
>c3 : typeof c3
>   : ^^^^^^^^^

    new c4();
>new c4() : c4
>         : ^^
>c4 : typeof c4
>   : ^^^^^^^^^
}
module m2 {
>m2 : typeof m2
>   : ^^^^^^^^^

    export class c3 {
>c3 : c3
>   : ^^

        constructor() {
        }
        private x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

        public y = 30;
>y : number
>  : ^^^^^^
>30 : 30
>   : ^^

        static k = 20;
>k : number
>  : ^^^^^^
>20 : 20
>   : ^^

        private static l = 30;
>l : number
>  : ^^^^^^
>30 : 30
>   : ^^

        private method1() {
>method1 : () => void
>        : ^^^^^^^^^^
        }
        public method2() {
>method2 : () => void
>        : ^^^^^^^^^^
        }
        static method3() {
>method3 : () => void
>        : ^^^^^^^^^^
        }
        private static method4() {
>method4 : () => void
>        : ^^^^^^^^^^
        }
    }
    class c4 {
>c4 : c4
>   : ^^

        constructor() {
        }
        private x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

        public y = 30;
>y : number
>  : ^^^^^^
>30 : 30
>   : ^^

        static k = 20;
>k : number
>  : ^^^^^^
>20 : 20
>   : ^^

        private static l = 30;
>l : number
>  : ^^^^^^
>30 : 30
>   : ^^

        private method1() {
>method1 : () => void
>        : ^^^^^^^^^^
        }
        public method2() {
>method2 : () => void
>        : ^^^^^^^^^^
        }
        static method3() {
>method3 : () => void
>        : ^^^^^^^^^^
        }
        private static method4() {
>method4 : () => void
>        : ^^^^^^^^^^
        }
    }
    new c();
>new c() : c
>        : ^
>c : typeof c
>  : ^^^^^^^^

    new c2();
>new c2() : c2
>         : ^^
>c2 : typeof c2
>   : ^^^^^^^^^

    new c3();
>new c3() : c3
>         : ^^
>c3 : typeof c3
>   : ^^^^^^^^^

    new c4();
>new c4() : c4
>         : ^^
>c4 : typeof c4
>   : ^^^^^^^^^

    new m1.c3();
>new m1.c3() : m1.c3
>            : ^^^^^
>m1.c3 : typeof m1.c3
>      : ^^^^^^^^^^^^
>m1 : typeof m1
>   : ^^^^^^^^^
>c3 : typeof m1.c3
>   : ^^^^^^^^^^^^
}
