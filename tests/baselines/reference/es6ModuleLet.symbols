//// [tests/cases/compiler/es6ModuleLet.ts] ////

=== es6ModuleLet.ts ===
export let a = "hello";
>a : Symbol(a, Decl(es6ModuleLet.ts, 0, 10))

export let x: string = a, y = x;
>x : Symbol(x, Decl(es6ModuleLet.ts, 1, 10))
>a : Symbol(a, Decl(es6ModuleLet.ts, 0, 10))
>y : Symbol(y, Decl(es6ModuleLet.ts, 1, 25))
>x : Symbol(x, Decl(es6ModuleLet.ts, 1, 10))

let b = y;
>b : Symbol(b, Decl(es6ModuleLet.ts, 2, 3))
>y : Symbol(y, Decl(es6ModuleLet.ts, 1, 25))

let c: string = b, d = c;
>c : Symbol(c, Decl(es6ModuleLet.ts, 3, 3))
>b : Symbol(b, Decl(es6ModuleLet.ts, 2, 3))
>d : Symbol(d, Decl(es6ModuleLet.ts, 3, 18))
>c : Symbol(c, Decl(es6ModuleLet.ts, 3, 3))

export namespace m1 {
>m1 : Symbol(m1, Decl(es6ModuleLet.ts, 3, 25))

    export let k = a;
>k : Symbol(k, Decl(es6ModuleLet.ts, 5, 14))
>a : Symbol(a, Decl(es6ModuleLet.ts, 0, 10))

    export let l: string = b, m = k;
>l : Symbol(l, Decl(es6ModuleLet.ts, 6, 14))
>b : Symbol(b, Decl(es6ModuleLet.ts, 2, 3))
>m : Symbol(m, Decl(es6ModuleLet.ts, 6, 29))
>k : Symbol(k, Decl(es6ModuleLet.ts, 5, 14))

    let n = m1.k;
>n : Symbol(n, Decl(es6ModuleLet.ts, 7, 7))
>m1.k : Symbol(k, Decl(es6ModuleLet.ts, 5, 14))
>m1 : Symbol(m1, Decl(es6ModuleLet.ts, 3, 25))
>k : Symbol(k, Decl(es6ModuleLet.ts, 5, 14))

    let o: string = n, p = k;
>o : Symbol(o, Decl(es6ModuleLet.ts, 8, 7))
>n : Symbol(n, Decl(es6ModuleLet.ts, 7, 7))
>p : Symbol(p, Decl(es6ModuleLet.ts, 8, 22))
>k : Symbol(k, Decl(es6ModuleLet.ts, 5, 14))
}
namespace m2 {
>m2 : Symbol(m2, Decl(es6ModuleLet.ts, 9, 1))

    export let k = a;
>k : Symbol(k, Decl(es6ModuleLet.ts, 11, 14))
>a : Symbol(a, Decl(es6ModuleLet.ts, 0, 10))

    export let l: string = b, m = k;
>l : Symbol(l, Decl(es6ModuleLet.ts, 12, 14))
>b : Symbol(b, Decl(es6ModuleLet.ts, 2, 3))
>m : Symbol(m, Decl(es6ModuleLet.ts, 12, 29))
>k : Symbol(k, Decl(es6ModuleLet.ts, 11, 14))

    let n = m1.k;
>n : Symbol(n, Decl(es6ModuleLet.ts, 13, 7))
>m1.k : Symbol(m1.k, Decl(es6ModuleLet.ts, 5, 14))
>m1 : Symbol(m1, Decl(es6ModuleLet.ts, 3, 25))
>k : Symbol(m1.k, Decl(es6ModuleLet.ts, 5, 14))

    let o: string = n, p = k;
>o : Symbol(o, Decl(es6ModuleLet.ts, 14, 7))
>n : Symbol(n, Decl(es6ModuleLet.ts, 13, 7))
>p : Symbol(p, Decl(es6ModuleLet.ts, 14, 22))
>k : Symbol(k, Decl(es6ModuleLet.ts, 11, 14))
}
