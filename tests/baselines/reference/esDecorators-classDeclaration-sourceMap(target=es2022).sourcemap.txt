===================================================================
JsFile: esDecorators-classDeclaration-sourceMap.js
mapUrl: esDecorators-classDeclaration-sourceMap.js.map
sourceRoot: 
sources: esDecorators-classDeclaration-sourceMap.ts
===================================================================
-------------------------------------------------------------------
emittedFile:esDecorators-classDeclaration-sourceMap.js
sourceFile:esDecorators-classDeclaration-sourceMap.ts
-------------------------------------------------------------------
>>>var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
>>>    var useValue = arguments.length > 2;
>>>    for (var i = 0; i < initializers.length; i++) {
>>>        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
>>>    }
>>>    return useValue ? value : void 0;
>>>};
>>>var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
>>>    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
>>>    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
>>>    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
>>>    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
>>>    var _, done = false;
>>>    for (var i = decorators.length - 1; i >= 0; i--) {
>>>        var context = {};
>>>        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
>>>        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
>>>        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
>>>        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
>>>        if (kind === "accessor") {
>>>            if (result === void 0) continue;
>>>            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
>>>            if (_ = accept(result.get)) descriptor.get = _;
>>>            if (_ = accept(result.set)) descriptor.set = _;
>>>            if (_ = accept(result.init)) initializers.unshift(_);
>>>        }
>>>        else if (_ = accept(result)) {
>>>            if (kind === "field") initializers.unshift(_);
>>>            else descriptor[key] = _;
>>>        }
>>>    }
>>>    if (target) Object.defineProperty(target, contextIn.name, descriptor);
>>>    done = true;
>>>};
>>>var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
>>>    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
>>>    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
>>>};
>>>var __classPrivateFieldIn = (this && this.__classPrivateFieldIn) || function(state, receiver) {
>>>    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
>>>    return typeof state === "function" ? receiver === state : state.has(receiver);
>>>};
>>>var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
>>>    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
>>>    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
>>>    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
>>>};
>>>var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
>>>    if (kind === "m") throw new TypeError("Private method is not writable");
>>>    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
>>>    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
>>>    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
>>>};
>>>let C = (() => {
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >declare var dec: any;
  >
  >@dec
  >@dec
  >class 
2 >    C
1 >Emitted(54, 5) Source(5, 7) + SourceIndex(0)
2 >Emitted(54, 6) Source(5, 8) + SourceIndex(0)
---
>>>    var _C_method_get, _C_x_get, _C_x_set, _C_y, _C_z_accessor_storage, _C_z_get, _C_z_set;
>>>    let _classDecorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                            ^^^
3 >                               ^^
4 >                                 ^^^
1->
2 >                            dec
3 >                               
  >                               @
4 >                                 dec
1->Emitted(56, 29) Source(3, 2) + SourceIndex(0)
2 >Emitted(56, 32) Source(3, 5) + SourceIndex(0)
3 >Emitted(56, 34) Source(4, 2) + SourceIndex(0)
4 >Emitted(56, 37) Source(4, 5) + SourceIndex(0)
---
>>>    let _classDescriptor;
>>>    let _classExtraInitializers = [];
>>>    let _classThis;
>>>    let _staticExtraInitializers = [];
>>>    let _instanceExtraInitializers = [];
>>>    let _static_private_method_decorators;
>>>    let _static_private_method_descriptor;
>>>    let _static_private_get_x_decorators;
>>>    let _static_private_get_x_descriptor;
>>>    let _static_private_set_x_decorators;
>>>    let _static_private_set_x_descriptor;
>>>    let _static_private_y_decorators;
>>>    let _static_private_y_initializers = [];
>>>    let _static_private_y_extraInitializers = [];
>>>    let _static_private_z_decorators;
>>>    let _static_private_z_initializers = [];
>>>    let _static_private_z_extraInitializers = [];
>>>    let _static_private_z_descriptor;
>>>    let _method_decorators;
>>>    let _get_x_decorators;
>>>    let _set_x_decorators;
>>>    let _y_decorators;
>>>    let _y_initializers = [];
>>>    let _y_extraInitializers = [];
>>>    let _z_decorators;
>>>    let _z_initializers = [];
>>>    let _z_extraInitializers = [];
>>>    var C = class {
>>>        static { _classThis = this; }
>>>        static { __setFunctionName(this, "C"); }
>>>        static { _C_method_get = function _C_method_get() { return _static_private_method_descriptor.value; }, _C_x_get = function _C_x_get() { return _static_private_get_x_descriptor.get.call(this); }, _C_x_set = function _C_x_set(value) { return _static_private_set_x_descriptor.set.call(this, value); }, _C_z_get = function _C_z_get() { return _static_private_z_descriptor.get.call(this); }, _C_z_set = function _C_z_set(value) { return _static_private_z_descriptor.set.call(this, value); }; }
>>>        static {
>>>            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
>>>            _method_decorators = [dec, dec];
1 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                  ^^^
3 >                                     ^^
4 >                                       ^^^
5 >                                          ^^->
1 >
  >class C {
  >    @
2 >                                  dec
3 >                                     
  >                                         @
4 >                                       dec
1 >Emitted(90, 35) Source(6, 6) + SourceIndex(0)
2 >Emitted(90, 38) Source(6, 9) + SourceIndex(0)
3 >Emitted(90, 40) Source(7, 6) + SourceIndex(0)
4 >Emitted(90, 43) Source(7, 9) + SourceIndex(0)
---
>>>            _get_x_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                 ^^^
3 >                                    ^^
4 >                                      ^^^
5 >                                         ^^^->
1->
  >    method() {}
  >
  >    @
2 >                                 dec
3 >                                    
  >                                        @
4 >                                      dec
1->Emitted(91, 34) Source(10, 6) + SourceIndex(0)
2 >Emitted(91, 37) Source(10, 9) + SourceIndex(0)
3 >Emitted(91, 39) Source(11, 6) + SourceIndex(0)
4 >Emitted(91, 42) Source(11, 9) + SourceIndex(0)
---
>>>            _set_x_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                 ^^^
3 >                                    ^^
4 >                                      ^^^
1->
  >    get x() { return 1; }
  >
  >    @
2 >                                 dec
3 >                                    
  >                                        @
4 >                                      dec
1->Emitted(92, 34) Source(14, 6) + SourceIndex(0)
2 >Emitted(92, 37) Source(14, 9) + SourceIndex(0)
3 >Emitted(92, 39) Source(15, 6) + SourceIndex(0)
4 >Emitted(92, 42) Source(15, 9) + SourceIndex(0)
---
>>>            _y_decorators = [dec, dec];
1 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                             ^^^
3 >                                ^^
4 >                                  ^^^
5 >                                     ^^^->
1 >
  >    set x(value: number) { }
  >
  >    @
2 >                             dec
3 >                                
  >                                    @
4 >                                  dec
1 >Emitted(93, 30) Source(18, 6) + SourceIndex(0)
2 >Emitted(93, 33) Source(18, 9) + SourceIndex(0)
3 >Emitted(93, 35) Source(19, 6) + SourceIndex(0)
4 >Emitted(93, 38) Source(19, 9) + SourceIndex(0)
---
>>>            _z_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                             ^^^
3 >                                ^^
4 >                                  ^^^
5 >                                     ^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >    y = 1;
  >
  >    @
2 >                             dec
3 >                                
  >                                    @
4 >                                  dec
1->Emitted(94, 30) Source(22, 6) + SourceIndex(0)
2 >Emitted(94, 33) Source(22, 9) + SourceIndex(0)
3 >Emitted(94, 35) Source(23, 6) + SourceIndex(0)
4 >Emitted(94, 38) Source(23, 9) + SourceIndex(0)
---
>>>            _static_private_method_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                                 ^^^
3 >                                                    ^^
4 >                                                      ^^^
5 >                                                         ^^->
1->
  >    accessor z = 1;
  >
  >    @
2 >                                                 dec
3 >                                                    
  >                                                        @
4 >                                                      dec
1->Emitted(95, 50) Source(26, 6) + SourceIndex(0)
2 >Emitted(95, 53) Source(26, 9) + SourceIndex(0)
3 >Emitted(95, 55) Source(27, 6) + SourceIndex(0)
4 >Emitted(95, 58) Source(27, 9) + SourceIndex(0)
---
>>>            _static_private_get_x_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                                ^^^
3 >                                                   ^^
4 >                                                     ^^^
5 >                                                        ^^^->
1->
  >    static #method() {}
  >
  >    @
2 >                                                dec
3 >                                                   
  >                                                       @
4 >                                                     dec
1->Emitted(96, 49) Source(30, 6) + SourceIndex(0)
2 >Emitted(96, 52) Source(30, 9) + SourceIndex(0)
3 >Emitted(96, 54) Source(31, 6) + SourceIndex(0)
4 >Emitted(96, 57) Source(31, 9) + SourceIndex(0)
---
>>>            _static_private_set_x_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                                ^^^
3 >                                                   ^^
4 >                                                     ^^^
1->
  >    static get #x() { return 1; }
  >
  >    @
2 >                                                dec
3 >                                                   
  >                                                       @
4 >                                                     dec
1->Emitted(97, 49) Source(34, 6) + SourceIndex(0)
2 >Emitted(97, 52) Source(34, 9) + SourceIndex(0)
3 >Emitted(97, 54) Source(35, 6) + SourceIndex(0)
4 >Emitted(97, 57) Source(35, 9) + SourceIndex(0)
---
>>>            _static_private_y_decorators = [dec, dec];
1 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                            ^^^
3 >                                               ^^
4 >                                                 ^^^
5 >                                                    ^^^->
1 >
  >    static set #x(value: number) { }
  >
  >    @
2 >                                            dec
3 >                                               
  >                                                   @
4 >                                                 dec
1 >Emitted(98, 45) Source(38, 6) + SourceIndex(0)
2 >Emitted(98, 48) Source(38, 9) + SourceIndex(0)
3 >Emitted(98, 50) Source(39, 6) + SourceIndex(0)
4 >Emitted(98, 53) Source(39, 9) + SourceIndex(0)
---
>>>            _static_private_z_decorators = [dec, dec];
1->^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2 >                                            ^^^
3 >                                               ^^
4 >                                                 ^^^
5 >                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >    static #y = 1;
  >
  >    @
2 >                                            dec
3 >                                               
  >                                                   @
4 >                                                 dec
1->Emitted(99, 45) Source(42, 6) + SourceIndex(0)
2 >Emitted(99, 48) Source(42, 9) + SourceIndex(0)
3 >Emitted(99, 50) Source(43, 6) + SourceIndex(0)
4 >Emitted(99, 53) Source(43, 9) + SourceIndex(0)
---
>>>            __esDecorate(this, _static_private_method_descriptor = { value: __setFunctionName(function () { }, "#method") }, _static_private_method_decorators, { kind: "method", name: "#method", static: true, private: true, access: { has: obj => __classPrivateFieldIn(_classThis, obj), get: obj => __classPrivateFieldGet(obj, _classThis, "a", _C_method_get) }, metadata: _metadata }, null, _staticExtraInitializers);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                                                              ^^^^^^^^^^^^^^
5 >                                                                                                            ^
6 >                                                                                                             ^^^^^^^^^^^^
7 >                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >            
3 >                                                                     
4 >                                                                                              static #method() {
5 >                                                                                                            }
6 >                                                                                                             
7 >                                                                                                                         
1->Emitted(100, 13) Source(28, 5) + SourceIndex(0)
2 >Emitted(100, 70) Source(28, 5) + SourceIndex(0)
3 >Emitted(100, 95) Source(28, 5) + SourceIndex(0)
4 >Emitted(100, 109) Source(28, 23) + SourceIndex(0)
5 >Emitted(100, 110) Source(28, 24) + SourceIndex(0)
6 >Emitted(100, 122) Source(28, 24) + SourceIndex(0)
7 >Emitted(100, 417) Source(28, 24) + SourceIndex(0)
---
>>>            __esDecorate(this, _static_private_get_x_descriptor = { get: __setFunctionName(function () { return 1; }, "#x", "get") }, _static_private_get_x_decorators, { kind: "getter", name: "#x", static: true, private: true, access: { has: obj => __classPrivateFieldIn(_classThis, obj), get: obj => __classPrivateFieldGet(obj, _classThis, "a", _C_x_get) }, metadata: _metadata }, null, _staticExtraInitializers);
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                                                           ^^^^^^^^^^^^^^
5 >                                                                                                         ^^^^^^^
6 >                                                                                                                ^
7 >                                                                                                                 ^
8 >                                                                                                                  ^
9 >                                                                                                                   ^
10>                                                                                                                    ^^^^^^^^^^^^^^
11>                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                                                                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^->
1 >
  >
  >    @dec
  >    @dec
  >    
2 >            
3 >                                                                    
4 >                                                                                           static get #x() { 
5 >                                                                                                         return 
6 >                                                                                                                1
7 >                                                                                                                 ;
8 >                                                                                                                   
9 >                                                                                                                   }
10>                                                                                                                    
11>                                                                                                                                  
1 >Emitted(101, 13) Source(32, 5) + SourceIndex(0)
2 >Emitted(101, 69) Source(32, 5) + SourceIndex(0)
3 >Emitted(101, 92) Source(32, 5) + SourceIndex(0)
4 >Emitted(101, 106) Source(32, 23) + SourceIndex(0)
5 >Emitted(101, 113) Source(32, 30) + SourceIndex(0)
6 >Emitted(101, 114) Source(32, 31) + SourceIndex(0)
7 >Emitted(101, 115) Source(32, 32) + SourceIndex(0)
8 >Emitted(101, 116) Source(32, 33) + SourceIndex(0)
9 >Emitted(101, 117) Source(32, 34) + SourceIndex(0)
10>Emitted(101, 131) Source(32, 34) + SourceIndex(0)
11>Emitted(101, 415) Source(32, 34) + SourceIndex(0)
---
>>>            __esDecorate(this, _static_private_set_x_descriptor = { set: __setFunctionName(function (value) { }, "#x", "set") }, _static_private_set_x_decorators, { kind: "setter", name: "#x", static: true, private: true, access: { has: obj => __classPrivateFieldIn(_classThis, obj), set: (obj, value) => { __classPrivateFieldSet(obj, _classThis, value, "a", _C_x_set); } }, metadata: _metadata }, null, _staticExtraInitializers);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                                                           ^^^^^^^^^^
5 >                                                                                                     ^^^^^
6 >                                                                                                          ^^^^
7 >                                                                                                              ^
8 >                                                                                                               ^^^^^^^^^^^^^^
9 >                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1->
  >
  >    @dec
  >    @dec
  >    
2 >            
3 >                                                                    
4 >                                                                                           static set #x(
5 >                                                                                                     value: number
6 >                                                                                                          ) { 
7 >                                                                                                              }
8 >                                                                                                               
9 >                                                                                                                             
1->Emitted(102, 13) Source(36, 5) + SourceIndex(0)
2 >Emitted(102, 69) Source(36, 5) + SourceIndex(0)
3 >Emitted(102, 92) Source(36, 5) + SourceIndex(0)
4 >Emitted(102, 102) Source(36, 19) + SourceIndex(0)
5 >Emitted(102, 107) Source(36, 32) + SourceIndex(0)
6 >Emitted(102, 111) Source(36, 36) + SourceIndex(0)
7 >Emitted(102, 112) Source(36, 37) + SourceIndex(0)
8 >Emitted(102, 126) Source(36, 37) + SourceIndex(0)
9 >Emitted(102, 431) Source(36, 37) + SourceIndex(0)
---
>>>            __esDecorate(this, _static_private_z_descriptor = { get: __setFunctionName(function () { return __classPrivateFieldGet(this, _classThis, "f", _C_z_accessor_storage); }, "#z", "get"), set: __setFunctionName(function (value) { __classPrivateFieldSet(this, _classThis, value, "f", _C_z_accessor_storage); }, "#z", "set") }, _static_private_z_decorators, { kind: "accessor", name: "#z", static: true, private: true, access: { has: obj => __classPrivateFieldIn(_classThis, obj), get: obj => __classPrivateFieldGet(obj, _classThis, "a", _C_z_get), set: (obj, value) => { __classPrivateFieldSet(obj, _classThis, value, "a", _C_z_set); } }, metadata: _metadata }, _static_private_z_initializers, _static_private_z_extraInitializers);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                ^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                                                                                                                                   ^^^^^^^^^^^^^^
6 >                                                                                                                                                                                                 ^^
7 >                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
9 >                                                                                                                                                                                                                                                                                                                           ^^^^^^^^^^^^^^

1->
  >
  >    @dec
  >    @dec
  >    static #y = 1;
  >
  >    @dec
  >    @dec
  >    
2 >            
3 >                                                                
4 >                                                                                       static accessor #z = 1;
5 >                                                                                                                                                                                   
6 >                                                                                                                                                                                                 
7 >                                                                                                                                                                                                   
8 >                                                                                                                                                                                                                          static accessor #z = 1;
9 >                                                                                                                                                                                                                                                                                                                           
10>                                                                                                                                                                                                                                                                                                                                         
1->Emitted(103, 13) Source(44, 5) + SourceIndex(0)
2 >Emitted(103, 65) Source(44, 5) + SourceIndex(0)
3 >Emitted(103, 88) Source(44, 5) + SourceIndex(0)
4 >Emitted(103, 180) Source(44, 28) + SourceIndex(0)
5 >Emitted(103, 194) Source(44, 28) + SourceIndex(0)
6 >Emitted(103, 196) Source(44, 5) + SourceIndex(0)
7 >Emitted(103, 219) Source(44, 5) + SourceIndex(0)
8 >Emitted(103, 316) Source(44, 28) + SourceIndex(0)
9 >Emitted(103, 330) Source(44, 28) + SourceIndex(0)
10>Emitted(103, 738) Source(44, 28) + SourceIndex(0)
---
>>>            __esDecorate(this, null, _method_decorators, { kind: "method", name: "method", static: false, private: false, access: { has: obj => "method" in obj, get: obj => obj.method }, metadata: _metadata }, null, _instanceExtraInitializers);
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                                                                                 ^^^^^^
4 >                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >            
3 >                                                                                                                                                                                 method
4 >                                                                                                                                                                                       () {}
1 >Emitted(104, 13) Source(8, 5) + SourceIndex(0)
2 >Emitted(104, 178) Source(8, 5) + SourceIndex(0)
3 >Emitted(104, 184) Source(8, 11) + SourceIndex(0)
4 >Emitted(104, 245) Source(8, 16) + SourceIndex(0)
---
>>>            __esDecorate(this, null, _get_x_decorators, { kind: "getter", name: "x", static: false, private: false, access: { has: obj => "x" in obj, get: obj => obj.x }, metadata: _metadata }, null, _instanceExtraInitializers);
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                                                                      ^
4 >                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
  >    @dec
  >    @dec
  >    
2 >            get 
3 >                                                                                                                                                                      x
4 >                                                                                                                                                                       () { return 1; }
1 >Emitted(105, 13) Source(12, 5) + SourceIndex(0)
2 >Emitted(105, 167) Source(12, 9) + SourceIndex(0)
3 >Emitted(105, 168) Source(12, 10) + SourceIndex(0)
4 >Emitted(105, 229) Source(12, 26) + SourceIndex(0)
---
>>>            __esDecorate(this, null, _set_x_decorators, { kind: "setter", name: "x", static: false, private: false, access: { has: obj => "x" in obj, set: (obj, value) => { obj.x = value; } }, metadata: _metadata }, null, _instanceExtraInitializers);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                                                                                 ^
4 >                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >    @dec
  >    @dec
  >    
2 >            set 
3 >                                                                                                                                                                                 x
4 >                                                                                                                                                                                  (value: number) { }
1->Emitted(106, 13) Source(16, 5) + SourceIndex(0)
2 >Emitted(106, 178) Source(16, 9) + SourceIndex(0)
3 >Emitted(106, 179) Source(16, 10) + SourceIndex(0)
4 >Emitted(106, 251) Source(16, 29) + SourceIndex(0)
---
>>>            __esDecorate(this, null, _z_decorators, { kind: "accessor", name: "z", static: false, private: false, access: { has: obj => "z" in obj, get: obj => obj.z, set: (obj, value) => { obj.z = value; } }, metadata: _metadata }, _z_initializers, _z_extraInitializers);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                                                                    ^
4 >                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                                                                                                                                                  ^
6 >                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 >                                                                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >    @dec
  >    @dec
  >    y = 1;
  >
  >    @dec
  >    @dec
  >    
2 >            accessor 
3 >                                                                                                                                                                    z
4 >                                                                                                                                                                     
5 >                                                                                                                                                                                                  z
6 >                                                                                                                                                                                                    = 1;
1->Emitted(107, 13) Source(24, 5) + SourceIndex(0)
2 >Emitted(107, 165) Source(24, 14) + SourceIndex(0)
3 >Emitted(107, 166) Source(24, 15) + SourceIndex(0)
4 >Emitted(107, 195) Source(24, 14) + SourceIndex(0)
5 >Emitted(107, 196) Source(24, 15) + SourceIndex(0)
6 >Emitted(107, 273) Source(24, 20) + SourceIndex(0)
---
>>>            __esDecorate(null, null, _static_private_y_decorators, { kind: "field", name: "#y", static: true, private: true, access: { has: obj => __classPrivateFieldIn(_classThis, obj), get: obj => __classPrivateFieldGet(obj, _classThis, "f", _C_y), set: (obj, value) => { __classPrivateFieldSet(obj, _classThis, value, "f", _C_y); } }, metadata: _metadata }, _static_private_y_initializers, _static_private_y_extraInitializers);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
  >
  >    @dec
  >    @dec
  >    static #method() {}
  >
  >    @dec
  >    @dec
  >    static get #x() { return 1; }
  >
  >    @dec
  >    @dec
  >    static set #x(value: number) { }
  >
  >    @dec
  >    @dec
  >    
2 >            static #y = 1;
1->Emitted(108, 13) Source(40, 5) + SourceIndex(0)
2 >Emitted(108, 431) Source(40, 19) + SourceIndex(0)
---
>>>            __esDecorate(null, null, _y_decorators, { kind: "field", name: "y", static: false, private: false, access: { has: obj => "y" in obj, get: obj => obj.y, set: (obj, value) => { obj.y = value; } }, metadata: _metadata }, _y_initializers, _y_extraInitializers);
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                                                                 ^
4 >                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                                                                                                                                               ^
6 >                                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >            
3 >                                                                                                                                                                 y
4 >                                                                                                                                                                  
5 >                                                                                                                                                                                               y
6 >                                                                                                                                                                                                 = 1;
1 >Emitted(109, 13) Source(20, 5) + SourceIndex(0)
2 >Emitted(109, 162) Source(20, 5) + SourceIndex(0)
3 >Emitted(109, 163) Source(20, 6) + SourceIndex(0)
4 >Emitted(109, 192) Source(20, 5) + SourceIndex(0)
5 >Emitted(109, 193) Source(20, 6) + SourceIndex(0)
6 >Emitted(109, 270) Source(20, 11) + SourceIndex(0)
---
>>>            __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >            class C {
  >                @dec
  >                @dec
  >                method() {}
  >            
  >                @dec
  >                @dec
  >                get x() { return 1; }
  >            
  >                @dec
  >                @dec
  >                set x(value: number) { }
  >            
  >                @dec
  >                @dec
  >                y = 1;
  >            
  >                @dec
  >                @dec
  >                accessor z = 1;
  >            
  >                @dec
  >                @dec
  >                static #method() {}
  >            
  >                @dec
  >                @dec
  >                static get #x() { return 1; }
  >            
  >                @dec
  >                @dec
  >                static set #x(value: number) { }
  >            
  >                @dec
  >                @dec
  >                static #y = 1;
  >            
  >                @dec
  >                @dec
  >                static accessor #z = 1;
  >            }
1 >Emitted(110, 13) Source(5, 1) + SourceIndex(0)
2 >Emitted(110, 186) Source(45, 2) + SourceIndex(0)
---
>>>            C = _classThis = _classDescriptor.value;
>>>            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
>>>        }
>>>        method() { }
1 >^^^^^^^^
2 >        ^^^^^^
3 >              ^^^^^
4 >                   ^
5 >                    ^^^^^^^^^^->
1 >
2 >        method
3 >              () {
4 >                   }
1 >Emitted(114, 9) Source(8, 5) + SourceIndex(0)
2 >Emitted(114, 15) Source(8, 11) + SourceIndex(0)
3 >Emitted(114, 20) Source(8, 15) + SourceIndex(0)
4 >Emitted(114, 21) Source(8, 16) + SourceIndex(0)
---
>>>        get x() { return 1; }
1->^^^^^^^^
2 >        ^^^^
3 >            ^
4 >             ^^^^^
5 >                  ^^^^^^^
6 >                         ^
7 >                          ^
8 >                           ^
9 >                            ^
1->
  >
  >    @dec
  >    @dec
  >    
2 >        get 
3 >            x
4 >             () { 
5 >                  return 
6 >                         1
7 >                          ;
8 >                            
9 >                            }
1->Emitted(115, 9) Source(12, 5) + SourceIndex(0)
2 >Emitted(115, 13) Source(12, 9) + SourceIndex(0)
3 >Emitted(115, 14) Source(12, 10) + SourceIndex(0)
4 >Emitted(115, 19) Source(12, 15) + SourceIndex(0)
5 >Emitted(115, 26) Source(12, 22) + SourceIndex(0)
6 >Emitted(115, 27) Source(12, 23) + SourceIndex(0)
7 >Emitted(115, 28) Source(12, 24) + SourceIndex(0)
8 >Emitted(115, 29) Source(12, 25) + SourceIndex(0)
9 >Emitted(115, 30) Source(12, 26) + SourceIndex(0)
---
>>>        set x(value) { }
1 >^^^^^^^^
2 >        ^^^^
3 >            ^
4 >             ^
5 >              ^^^^^
6 >                   ^^^^
7 >                       ^
8 >                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
  >    @dec
  >    @dec
  >    
2 >        set 
3 >            x
4 >             (
5 >              value: number
6 >                   ) { 
7 >                       }
1 >Emitted(116, 9) Source(16, 5) + SourceIndex(0)
2 >Emitted(116, 13) Source(16, 9) + SourceIndex(0)
3 >Emitted(116, 14) Source(16, 10) + SourceIndex(0)
4 >Emitted(116, 15) Source(16, 11) + SourceIndex(0)
5 >Emitted(116, 20) Source(16, 24) + SourceIndex(0)
6 >Emitted(116, 24) Source(16, 28) + SourceIndex(0)
7 >Emitted(116, 25) Source(16, 29) + SourceIndex(0)
---
>>>        y = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _y_initializers, 1));
1->^^^^^^^^
2 >        ^
3 >         ^^^^
4 >             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 >                                                                                                           ^
7 >                                                                                                            ^^^
8 >                                                                                                               ^^^^^^^^^^^^^^^->
1->
  >
  >    @dec
  >    @dec
  >    
2 >        y
3 >         
4 >             C
5 >                                                                 {
  >                                                                    @dec
  >                                                                    @dec
  >                                                                    method() {}
  >                                                                
  >                                                                    @dec
  >                                                                    @dec
  >                                                                    get x() { return 1; }
  >                                                                
  >                                                                    @dec
  >                                                                    @dec
  >                                                                    set x(value: number) { }
  >                                                                
  >                                                                    @dec
  >                                                                    @dec
  >                                                                    y = 
6 >                                                                                                           1
7 >                                                                                                            ;
1->Emitted(117, 9) Source(20, 5) + SourceIndex(0)
2 >Emitted(117, 10) Source(20, 6) + SourceIndex(0)
3 >Emitted(117, 14) Source(5, 7) + SourceIndex(0)
4 >Emitted(117, 65) Source(5, 8) + SourceIndex(0)
5 >Emitted(117, 108) Source(20, 9) + SourceIndex(0)
6 >Emitted(117, 109) Source(20, 10) + SourceIndex(0)
7 >Emitted(117, 112) Source(20, 11) + SourceIndex(0)
---
>>>        #z_1_accessor_storage = (__runInitializers(this, _y_extraInitializers), __runInitializers(this, _z_initializers, 1));
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                         ^
4 >                                                                                                                          ^^^
1->
  >
  >    @dec
  >    @dec
  >    
2 >        accessor z = 
3 >                                                                                                                         1
4 >                                                                                                                          ;
1->Emitted(118, 9) Source(24, 5) + SourceIndex(0)
2 >Emitted(118, 122) Source(24, 18) + SourceIndex(0)
3 >Emitted(118, 123) Source(24, 19) + SourceIndex(0)
4 >Emitted(118, 126) Source(24, 20) + SourceIndex(0)
---
>>>        get z() { return this.#z_1_accessor_storage; }
1 >^^^^^^^^
2 >        ^^^^
3 >            ^
4 >             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                      ^^^^^^^->
1 >
2 >        accessor 
3 >            z
4 >              = 1;
1 >Emitted(119, 9) Source(24, 5) + SourceIndex(0)
2 >Emitted(119, 13) Source(24, 14) + SourceIndex(0)
3 >Emitted(119, 14) Source(24, 15) + SourceIndex(0)
4 >Emitted(119, 55) Source(24, 20) + SourceIndex(0)
---
>>>        set z(value) { this.#z_1_accessor_storage = value; }
1->^^^^^^^^
2 >        ^^^^
3 >            ^
4 >             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        accessor 
3 >            z
4 >              = 1;
1->Emitted(120, 9) Source(24, 5) + SourceIndex(0)
2 >Emitted(120, 13) Source(24, 14) + SourceIndex(0)
3 >Emitted(120, 14) Source(24, 15) + SourceIndex(0)
4 >Emitted(120, 61) Source(24, 20) + SourceIndex(0)
---
>>>        static {
>>>            _C_y = { value: (__runInitializers(_classThis, _staticExtraInitializers), __runInitializers(_classThis, _static_private_y_initializers, 1)) };
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^
3 >                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                                                                                                                    ^
6 >                                                                                                                                                     ^^^^
7 >                                                                                                                                                         ^
1 >
  >
  >    @dec
  >    @dec
  >    static #method() {}
  >
  >    @dec
  >    @dec
  >    static get #x() { return 1; }
  >
  >    @dec
  >    @dec
  >    static set #x(value: number) { }
  >
  >    @dec
  >    @dec
  >    static 
2 >            
3 >                             C
4 >                                                                                     {
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        method() {}
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        get x() { return 1; }
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        set x(value: number) { }
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        y = 1;
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        accessor z = 1;
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        static #method() {}
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        static get #x() { return 1; }
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        static set #x(value: number) { }
  >                                                                                    
  >                                                                                        @dec
  >                                                                                        @dec
  >                                                                                        static #y = 
5 >                                                                                                                                                    1
6 >                                                                                                                                                     
7 >                                                                                                                                                          = 1;
1 >Emitted(122, 13) Source(40, 12) + SourceIndex(0)
2 >Emitted(122, 30) Source(5, 7) + SourceIndex(0)
3 >Emitted(122, 85) Source(5, 8) + SourceIndex(0)
4 >Emitted(122, 149) Source(40, 17) + SourceIndex(0)
5 >Emitted(122, 150) Source(40, 18) + SourceIndex(0)
6 >Emitted(122, 154) Source(40, 14) + SourceIndex(0)
7 >Emitted(122, 155) Source(40, 19) + SourceIndex(0)
---
>>>        }
>>>        static {
>>>            _C_z_accessor_storage = { value: (__runInitializers(_classThis, _static_private_y_extraInitializers), __runInitializers(_classThis, _static_private_z_initializers, 1)) };
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                                                                                                                                                ^
4 >                                                                                                                                                                                 ^^^^
5 >                                                                                                                                                                                     ^
1 >
  >
  >    @dec
  >    @dec
  >    static accessor 
2 >            #z = 
3 >                                                                                                                                                                                1
4 >                                                                                                                                                                                 
5 >                                                                                                                                                                                      = 1;
1 >Emitted(125, 13) Source(44, 21) + SourceIndex(0)
2 >Emitted(125, 177) Source(44, 26) + SourceIndex(0)
3 >Emitted(125, 178) Source(44, 27) + SourceIndex(0)
4 >Emitted(125, 182) Source(44, 23) + SourceIndex(0)
5 >Emitted(125, 183) Source(44, 28) + SourceIndex(0)
---
>>>        }
>>>        constructor() {
>>>            __runInitializers(this, _z_extraInitializers);
>>>        }
>>>        static {
>>>            __runInitializers(_classThis, _static_private_z_extraInitializers);
>>>            __runInitializers(_classThis, _classExtraInitializers);
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >            C
1 >Emitted(132, 13) Source(5, 7) + SourceIndex(0)
2 >Emitted(132, 68) Source(5, 8) + SourceIndex(0)
---
>>>        }
>>>    };
>>>    return C = _classThis;
>>>})();
>>>//# sourceMappingURL=esDecorators-classDeclaration-sourceMap.js.map===================================================================
JsFile: esDecorators-classDeclaration-sourceMap.d.ts
mapUrl: esDecorators-classDeclaration-sourceMap.d.ts.map
sourceRoot: 
sources: esDecorators-classDeclaration-sourceMap.ts
===================================================================
-------------------------------------------------------------------
emittedFile:esDecorators-classDeclaration-sourceMap.d.ts
sourceFile:esDecorators-classDeclaration-sourceMap.ts
-------------------------------------------------------------------
>>>declare var dec: any;
1 >
2 >^^^^^^^
3 >       ^
4 >        ^^^^
5 >            ^^^
6 >               ^^
7 >                 ^^^
8 >                    ^
1 >
2 >declare
3 >        
4 >        var 
5 >            dec
6 >               : 
7 >                 any
8 >                    ;
1 >Emitted(1, 1) Source(1, 1) + SourceIndex(0)
2 >Emitted(1, 8) Source(1, 8) + SourceIndex(0)
3 >Emitted(1, 9) Source(1, 9) + SourceIndex(0)
4 >Emitted(1, 13) Source(1, 13) + SourceIndex(0)
5 >Emitted(1, 16) Source(1, 16) + SourceIndex(0)
6 >Emitted(1, 18) Source(1, 18) + SourceIndex(0)
7 >Emitted(1, 21) Source(1, 21) + SourceIndex(0)
8 >Emitted(1, 22) Source(1, 22) + SourceIndex(0)
---
>>>declare class C {
1 >
2 >^^^^^^^^^^^^^^
3 >              ^
1 >
  >
  >
2 >@dec
  >@dec
  >class 
3 >              C
1 >Emitted(2, 1) Source(3, 1) + SourceIndex(0)
2 >Emitted(2, 15) Source(5, 7) + SourceIndex(0)
3 >Emitted(2, 16) Source(5, 8) + SourceIndex(0)
---
>>>    #private;
>>>    method(): void;
1 >^^^^
2 >    ^^^^^^
3 >          ^^^^^^^^^^^->
1 > {
  >    @dec
  >    @dec
  >    
2 >    method
1 >Emitted(4, 5) Source(8, 5) + SourceIndex(0)
2 >Emitted(4, 11) Source(8, 11) + SourceIndex(0)
---
>>>    get x(): number;
1->^^^^
2 >    ^^^^
3 >        ^
4 >         ^^^^
5 >             ^^^^^^
6 >                   ^
7 >                    ^^^^^^->
1->() {}
  >
  >    
2 >    @dec
  >        @dec
  >        get 
3 >        x
4 >         () { return 1; }
  >         
  >             @dec
  >             @dec
  >             set x(value: 
5 >             number
6 >                   
1->Emitted(5, 5) Source(10, 5) + SourceIndex(0)
2 >Emitted(5, 9) Source(12, 9) + SourceIndex(0)
3 >Emitted(5, 10) Source(12, 10) + SourceIndex(0)
4 >Emitted(5, 14) Source(16, 18) + SourceIndex(0)
5 >Emitted(5, 20) Source(16, 24) + SourceIndex(0)
6 >Emitted(5, 21) Source(12, 26) + SourceIndex(0)
---
>>>    set x(value: number);
1->^^^^
2 >    ^^^^
3 >        ^
4 >         ^
5 >          ^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^
1->
  >
  >    
2 >    @dec
  >        @dec
  >        set 
3 >        x
4 >         (
5 >          value
6 >               : 
7 >                 number
8 >                       ) { }
1->Emitted(6, 5) Source(14, 5) + SourceIndex(0)
2 >Emitted(6, 9) Source(16, 9) + SourceIndex(0)
3 >Emitted(6, 10) Source(16, 10) + SourceIndex(0)
4 >Emitted(6, 11) Source(16, 11) + SourceIndex(0)
5 >Emitted(6, 16) Source(16, 16) + SourceIndex(0)
6 >Emitted(6, 18) Source(16, 18) + SourceIndex(0)
7 >Emitted(6, 24) Source(16, 24) + SourceIndex(0)
8 >Emitted(6, 26) Source(16, 29) + SourceIndex(0)
---
>>>    y: number;
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^
4 >              ^^^^^^^^^^->
1 >
  >
  >    @dec
  >    @dec
  >    
2 >    y
3 >      = 1;
1 >Emitted(7, 5) Source(20, 5) + SourceIndex(0)
2 >Emitted(7, 6) Source(20, 6) + SourceIndex(0)
3 >Emitted(7, 15) Source(20, 11) + SourceIndex(0)
---
>>>    accessor z: number;
1->^^^^
2 >    ^^^^^^^^
3 >            ^
4 >             ^
5 >              ^^^^^^^^^
1->
  >
  >    @dec
  >    @dec
  >    
2 >    accessor
3 >             
4 >             z
5 >               = 1;
1->Emitted(8, 5) Source(24, 5) + SourceIndex(0)
2 >Emitted(8, 13) Source(24, 13) + SourceIndex(0)
3 >Emitted(8, 14) Source(24, 14) + SourceIndex(0)
4 >Emitted(8, 15) Source(24, 15) + SourceIndex(0)
5 >Emitted(8, 24) Source(24, 20) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
  >    @dec
  >    @dec
  >    static #method() {}
  >
  >    @dec
  >    @dec
  >    static get #x() { return 1; }
  >
  >    @dec
  >    @dec
  >    static set #x(value: number) { }
  >
  >    @dec
  >    @dec
  >    static #y = 1;
  >
  >    @dec
  >    @dec
  >    static accessor #z = 1;
  >}
1 >Emitted(9, 2) Source(45, 2) + SourceIndex(0)
---
>>>//# sourceMappingURL=esDecorators-classDeclaration-sourceMap.d.ts.map