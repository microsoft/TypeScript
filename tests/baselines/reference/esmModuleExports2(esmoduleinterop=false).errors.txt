error TS5107: Option 'esModuleInterop=false' is deprecated and will stop functioning in TypeScript 7.0. Specify compilerOption '"ignoreDeprecations": "6.0"' to silence this error.
/importer-cjs.cjs(2,5): error TS2351: This expression is not constructable.
  Type 'String' has no construct signatures.
/importer-cts.cts(2,5): error TS2351: This expression is not constructable.
  Type 'String' has no construct signatures.
/importer-cts.cts(4,8): error TS1259: Module '"/exporter"' can only be default-imported using the 'esModuleInterop' flag
/importer-cts.cts(8,5): error TS2351: This expression is not constructable.
  Type 'String' has no construct signatures.
/importer-cts.cts(10,10): error TS2614: Module '"./exporter.mjs"' has no exported member 'Oops'. Did you mean to use 'import Oops from "./exporter.mjs"' instead?


!!! error TS5107: Option 'esModuleInterop=false' is deprecated and will stop functioning in TypeScript 7.0. Specify compilerOption '"ignoreDeprecations": "6.0"' to silence this error.
==== /importer-cjs.cjs (1 errors) ====
    const Foo = require("./exporter.mjs");
    new Foo();
        ~~~
!!! error TS2351: This expression is not constructable.
!!! error TS2351:   Type 'String' has no construct signatures.
    
==== /importer-cts.cts (4 errors) ====
    import Foo = require("./exporter.mjs");
    new Foo();
        ~~~
!!! error TS2351: This expression is not constructable.
!!! error TS2351:   Type 'String' has no construct signatures.
    
    import Foo2 from "./exporter.mjs";
           ~~~~
!!! error TS1259: Module '"/exporter"' can only be default-imported using the 'esModuleInterop' flag
    new Foo2();
    
    import * as Foo3 from "./exporter.mjs";
    new Foo3();
        ~~~~
!!! error TS2351: This expression is not constructable.
!!! error TS2351:   Type 'String' has no construct signatures.
    
    import { Oops } from "./exporter.mjs";
             ~~~~
!!! error TS2614: Module '"./exporter.mjs"' has no exported member 'Oops'. Did you mean to use 'import Oops from "./exporter.mjs"' instead?
    
==== /exporter.mts (0 errors) ====
    export default class Foo {}
    const oops = "oops";
    export { oops as "module.exports" };