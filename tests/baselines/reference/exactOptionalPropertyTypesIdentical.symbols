//// [tests/cases/compiler/exactOptionalPropertyTypesIdentical.ts] ////

=== exactOptionalPropertyTypesIdentical.ts ===
export let a: <T>() => T extends {a?: string} ? 0 : 1 = null!;
>a : Symbol(a, Decl(exactOptionalPropertyTypesIdentical.ts, 0, 10))
>T : Symbol(T, Decl(exactOptionalPropertyTypesIdentical.ts, 0, 15))
>T : Symbol(T, Decl(exactOptionalPropertyTypesIdentical.ts, 0, 15))
>a : Symbol(a, Decl(exactOptionalPropertyTypesIdentical.ts, 0, 34))

export let b: <T>() => T extends {a?: string | undefined} ? 0 : 1 = a;
>b : Symbol(b, Decl(exactOptionalPropertyTypesIdentical.ts, 1, 10))
>T : Symbol(T, Decl(exactOptionalPropertyTypesIdentical.ts, 1, 15))
>T : Symbol(T, Decl(exactOptionalPropertyTypesIdentical.ts, 1, 15))
>a : Symbol(a, Decl(exactOptionalPropertyTypesIdentical.ts, 1, 34))
>a : Symbol(a, Decl(exactOptionalPropertyTypesIdentical.ts, 0, 10))

