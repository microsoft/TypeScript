excessPropertyCheckSpreadConditionalInlineObject.ts(6,7): error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'C'.
excessPropertyCheckSpreadConditionalInlineObject.ts(24,3): error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'C'.
excessPropertyCheckSpreadConditionalInlineObject.ts(46,7): error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'D'.
excessPropertyCheckSpreadConditionalInlineObject.ts(64,3): error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'D'.


==== excessPropertyCheckSpreadConditionalInlineObject.ts (4 errors) ====
    declare const someCondition: boolean;
    
    // bar is optional
    type C = { foo: number; bar?: number };
    
    const c: C = {
          ~
!!! error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'C'.
        foo: 1,
        ...(someCondition
            ? {
                bar: 2,
                excessProperty: 3,
            }
            : {}),
    };
    
    const c2 = {
        foo: 1,
        ...(someCondition
            ? {
                bar: 2,
                excessProperty: 3,
            }
            : {}),
    } satisfies C;
      ~~~~~~~~~
!!! error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'C'.
    
    function testC(condition: boolean) {
        return someCondition ? { bar: 2, excessProperty: 3 } : {};
    }
    
    // no errors on c3 and c4 since not defined inline
    const c3: C = {
        foo: 1,
        ...testC(someCondition)
    };
    
    const c4 = {
        foo: 1,
        ...testC(someCondition)
    } satisfies C;
    
    
    
    // bar is not optional 
    type D = { foo: number; bar: number };
    
    const d: D = {
          ~
!!! error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'D'.
        foo: 1,
        ...(someCondition
            ? {
                bar: 2,
                excessProperty: 3,
            }
            : {}),
    };
    
    const d2 = {
        foo: 1,
        ...(someCondition
            ? {
                bar: 2,
                excessProperty: 3,
            }
            : {}),
    } satisfies D;
      ~~~~~~~~~
!!! error TS2353: Object literal may only specify known properties, and 'excessProperty' does not exist in type 'D'.