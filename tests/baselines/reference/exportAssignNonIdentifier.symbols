//// [tests/cases/conformance/externalModules/exportAssignNonIdentifier.ts] ////

=== foo1.ts ===
var x = 10;
>x : Symbol(x, Decl(foo1.ts, 0, 3))

export = typeof x; // Ok
>x : Symbol(x, Decl(foo1.ts, 0, 3))

=== foo2.ts ===

export = "sausages"; // Ok

=== foo3.ts ===
export = class Foo3 {}; // Error, not an expression
>Foo3 : Symbol(Foo3, Decl(foo3.ts, 0, 8))

=== foo4.ts ===

export = true; // Ok

=== foo5.ts ===
export = undefined; // Valid.  undefined is an identifier in JavaScript/TypeScript
>undefined : Symbol(undefined)

=== foo6.ts ===

export = void; // Error, void operator requires an argument

=== foo7.ts ===
export = Date || String; // Ok
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))
>String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

=== foo8.ts ===

export = null; // Ok


