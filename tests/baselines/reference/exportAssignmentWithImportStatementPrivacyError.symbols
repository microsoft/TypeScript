//// [tests/cases/compiler/exportAssignmentWithImportStatementPrivacyError.ts] ////

=== exportAssignmentWithImportStatementPrivacyError.ts ===
namespace m2 {
>m2 : Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))

    export interface connectModule {
>connectModule : Symbol(connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 14))

        (res, req, next): void;
>res : Symbol(res, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 2, 9))
>req : Symbol(req, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 2, 13))
>next : Symbol(next, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 2, 18))
    }
    export interface connectExport {
>connectExport : Symbol(connectExport, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 3, 5))

        use: (mod: connectModule) => connectExport;
>use : Symbol(connectExport.use, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 4, 36))
>mod : Symbol(mod, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 5, 14))
>connectModule : Symbol(connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 14))
>connectExport : Symbol(connectExport, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 3, 5))

        listen: (port: number) => void;
>listen : Symbol(connectExport.listen, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 5, 51))
>port : Symbol(port, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 6, 17))
    }

}

namespace M {
>M : Symbol(M, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 9, 1))

    export var server: {
>server : Symbol(server, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 12, 14))

        (): m2.connectExport;
>m2 : Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))
>connectExport : Symbol(m2.connectExport, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 3, 5))

        test1: m2.connectModule;
>test1 : Symbol(test1, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 13, 29))
>m2 : Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))
>connectModule : Symbol(m2.connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 14))

        test2(): m2.connectModule;
>test2 : Symbol(test2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 14, 32))
>m2 : Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))
>connectModule : Symbol(m2.connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 14))

    };
}
import M22 = M;
>M22 : Symbol(M22, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 17, 1))
>M : Symbol(M, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 9, 1))

export = M;
>M : Symbol(M, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 9, 1))

