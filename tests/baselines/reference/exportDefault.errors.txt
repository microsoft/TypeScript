/d.ts(2,5): error TS1361: 'types' cannot be used as a value because it was imported using 'import type'.
/e.ts(1,1): error TS1202: Import assignment cannot be used when targeting ECMAScript modules. Consider using 'import * as ns from "mod"', 'import {a} from "mod"', 'import d from "mod"', or another module format instead.
/e.ts(2,11): error TS2339: Property 'A' does not exist on type 'typeof import("/b")'.
/f.ts(2,11): error TS2339: Property 'default' does not exist on type 'typeof import("/b")'.
/g.ts(2,5): error TS1361: 'types' cannot be used as a value because it was imported using 'import type'.


==== /a.ts (0 errors) ====
    export class A {}
    
==== /b.ts (0 errors) ====
    import type * as types from './a';
    export default types;
    
==== /c.ts (0 errors) ====
    import * as types from './a';
    export default types;
    
==== /d.ts (1 errors) ====
    import types from './b';
    new types.A(); // Error
        ~~~~~
!!! error TS1361: 'types' cannot be used as a value because it was imported using 'import type'.
!!! related TS1376 /b.ts:1:18: 'types' was imported here.
    
==== /e.ts (2 errors) ====
    import types = require('./b');
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS1202: Import assignment cannot be used when targeting ECMAScript modules. Consider using 'import * as ns from "mod"', 'import {a} from "mod"', 'import d from "mod"', or another module format instead.
    new types.A(); // Error
              ~
!!! error TS2339: Property 'A' does not exist on type 'typeof import("/b")'.
    
==== /f.ts (1 errors) ====
    import * as types from './b';
    new types.default.A(); // Error
              ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type 'typeof import("/b")'.
    
==== /g.ts (1 errors) ====
    import type types from './c'
    new types.A(); // Error
        ~~~~~
!!! error TS1361: 'types' cannot be used as a value because it was imported using 'import type'.
!!! related TS1376 /g.ts:1:8: 'types' was imported here.
    