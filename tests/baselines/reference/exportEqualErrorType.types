//// [tests/cases/compiler/exportEqualErrorType.ts] ////

=== exportEqualErrorType_1.ts ===
///<reference path='exportEqualErrorType_0.ts'/>
import connect = require('exportEqualErrorType_0');
>connect : { (): connect.connectExport; foo: Date; }
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    ^^^

connect().use(connect.static('foo')); // Error  1      The property 'static' does not exist on value of type ''.
>connect().use(connect.static('foo')) : connect.connectExport
>                                     : ^^^^^^^^^^^^^^^^^^^^^
>connect().use : (mod: connect.connectModule) => connect.connectExport
>              : ^   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>connect() : connect.connectExport
>          : ^^^^^^^^^^^^^^^^^^^^^
>connect : { (): connect.connectExport; foo: Date; }
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    ^^^
>use : (mod: connect.connectModule) => connect.connectExport
>    : ^   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>connect.static('foo') : any
>                      : ^^^
>connect.static : any
>               : ^^^
>connect : { (): connect.connectExport; foo: Date; }
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    ^^^
>static : any
>       : ^^^
>'foo' : "foo"
>      : ^^^^^

=== exportEqualErrorType_0.ts ===
module server {
    export interface connectModule {
        (res, req, next): void;
>res : any
>    : ^^^
>req : any
>    : ^^^
>next : any
>     : ^^^
    }
    export interface connectExport {
        use: (mod: connectModule) => connectExport;
>use : (mod: connectModule) => connectExport
>    : ^   ^^             ^^^^^             
>mod : connectModule
>    : ^^^^^^^^^^^^^
    }
}
var server: {
>server : { (): server.connectExport; foo: Date; }
>       : ^^^^^^                    ^^^^^^^    ^^^

    (): server.connectExport;
>server : any
>       : ^^^

    foo: Date;
>foo : Date
>    : ^^^^

};
export = server;
>server : { (): server.connectExport; foo: Date; }
>       : ^^^^^^                    ^^^^^^^    ^^^
 
