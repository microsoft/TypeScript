//// [tests/cases/conformance/salsa/exportNestedNamespaces2.ts] ////

=== mod.js ===
// Based on a pattern from adonis
exports.formatters = {}
>exports.formatters = {} : {}
>                        : ^^
>exports.formatters : {}
>                   : ^^
>exports : typeof import("mod")
>        : ^^^^^^^^^^^^^^^^^^^^
>formatters : {}
>           : ^^
>{} : {}
>   : ^^

=== first.js ===
exports = require('./mod')
>exports = require('./mod') : typeof import("mod")
>                           : ^^^^^^^^^^^^^^^^^^^^
>exports : typeof import("first")
>        : ^^^^^^^^^^^^^^^^^^^^^^
>require('./mod') : typeof import("mod")
>                 : ^^^^^^^^^^^^^^^^^^^^
>require : any
>        : ^^^
>'./mod' : "./mod"
>        : ^^^^^^^

exports.formatters.j = function (v) {
>exports.formatters.j = function (v) {    return v} : (v: any) => any
>                                                   : ^ ^^^^^^^^^^^^^
>exports.formatters.j : any
>                     : ^^^
>exports.formatters : any
>                   : ^^^
>exports : typeof import("first")
>        : ^^^^^^^^^^^^^^^^^^^^^^
>formatters : any
>           : ^^^
>j : any
>  : ^^^
>function (v) {    return v} : (v: any) => any
>                            : ^ ^^^^^^^^^^^^^
>v : any
>  : ^^^

    return v
>v : any
>  : ^^^
}
=== second.js ===
exports = require('./mod')
>exports = require('./mod') : typeof import("mod")
>                           : ^^^^^^^^^^^^^^^^^^^^
>exports : typeof import("second")
>        : ^^^^^^^^^^^^^^^^^^^^^^^
>require('./mod') : typeof import("mod")
>                 : ^^^^^^^^^^^^^^^^^^^^
>require : any
>        : ^^^
>'./mod' : "./mod"
>        : ^^^^^^^

exports.formatters.o = function (v) {
>exports.formatters.o = function (v) {    return v} : (v: any) => any
>                                                   : ^ ^^^^^^^^^^^^^
>exports.formatters.o : any
>                     : ^^^
>exports.formatters : any
>                   : ^^^
>exports : typeof import("second")
>        : ^^^^^^^^^^^^^^^^^^^^^^^
>formatters : any
>           : ^^^
>o : any
>  : ^^^
>function (v) {    return v} : (v: any) => any
>                            : ^ ^^^^^^^^^^^^^
>v : any
>  : ^^^

    return v
>v : any
>  : ^^^
}

=== use.js ===
import * as debug from './mod'
>debug : typeof debug
>      : ^^^^^^^^^^^^

debug.formatters.j
>debug.formatters.j : any
>                   : ^^^
>debug.formatters : {}
>                 : ^^
>debug : typeof debug
>      : ^^^^^^^^^^^^
>formatters : {}
>           : ^^
>j : any
>  : ^^^

var one = debug.formatters.o(1)
>one : any
>    : ^^^
>debug.formatters.o(1) : any
>                      : ^^^
>debug.formatters.o : any
>                   : ^^^
>debug.formatters : {}
>                 : ^^
>debug : typeof debug
>      : ^^^^^^^^^^^^
>formatters : {}
>           : ^^
>o : any
>  : ^^^
>1 : 1
>  : ^

