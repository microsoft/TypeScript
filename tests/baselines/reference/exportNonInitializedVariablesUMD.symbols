//// [tests/cases/conformance/externalModules/exportNonInitializedVariablesUMD.ts] ////

=== exportNonInitializedVariablesUMD.ts ===
var;
let;
const;

export var a;
>a : Symbol(a, Decl(exportNonInitializedVariablesUMD.ts, 4, 10))

export let b;
>b : Symbol(b, Decl(exportNonInitializedVariablesUMD.ts, 5, 10))

export var c: string;
>c : Symbol(c, Decl(exportNonInitializedVariablesUMD.ts, 6, 10))

export let d: number;
>d : Symbol(d, Decl(exportNonInitializedVariablesUMD.ts, 7, 10))

class A {}
>A : Symbol(A, Decl(exportNonInitializedVariablesUMD.ts, 7, 21))

export var e: A;
>e : Symbol(e, Decl(exportNonInitializedVariablesUMD.ts, 9, 10))
>A : Symbol(A, Decl(exportNonInitializedVariablesUMD.ts, 7, 21))

export let f: A;
>f : Symbol(f, Decl(exportNonInitializedVariablesUMD.ts, 10, 10))
>A : Symbol(A, Decl(exportNonInitializedVariablesUMD.ts, 7, 21))

namespace B {
>B : Symbol(B, Decl(exportNonInitializedVariablesUMD.ts, 10, 16))

    export let a = 1, b, c = 2;
>a : Symbol(a, Decl(exportNonInitializedVariablesUMD.ts, 13, 14))
>b : Symbol(b, Decl(exportNonInitializedVariablesUMD.ts, 13, 21))
>c : Symbol(c, Decl(exportNonInitializedVariablesUMD.ts, 13, 24))

    export let x, y, z;
>x : Symbol(x, Decl(exportNonInitializedVariablesUMD.ts, 14, 14))
>y : Symbol(y, Decl(exportNonInitializedVariablesUMD.ts, 14, 17))
>z : Symbol(z, Decl(exportNonInitializedVariablesUMD.ts, 14, 20))
}

namespace C {
>C : Symbol(C, Decl(exportNonInitializedVariablesUMD.ts, 15, 1))

    export var a = 1, b, c = 2;
>a : Symbol(a, Decl(exportNonInitializedVariablesUMD.ts, 18, 14))
>b : Symbol(b, Decl(exportNonInitializedVariablesUMD.ts, 18, 21))
>c : Symbol(c, Decl(exportNonInitializedVariablesUMD.ts, 18, 24))

    export var x, y, z;
>x : Symbol(x, Decl(exportNonInitializedVariablesUMD.ts, 19, 14))
>y : Symbol(y, Decl(exportNonInitializedVariablesUMD.ts, 19, 17))
>z : Symbol(z, Decl(exportNonInitializedVariablesUMD.ts, 19, 20))
}

// Shouldn't be filtered
export var a1 = 1;
>a1 : Symbol(a1, Decl(exportNonInitializedVariablesUMD.ts, 23, 10))

export let b1 = 1;
>b1 : Symbol(b1, Decl(exportNonInitializedVariablesUMD.ts, 24, 10))

export var c1: string = 'a';
>c1 : Symbol(c1, Decl(exportNonInitializedVariablesUMD.ts, 25, 10))

export let d1: number = 1;
>d1 : Symbol(d1, Decl(exportNonInitializedVariablesUMD.ts, 26, 10))

class D {}
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))

export var e1 = new D;
>e1 : Symbol(e1, Decl(exportNonInitializedVariablesUMD.ts, 28, 10))
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))

export let f1 = new D;
>f1 : Symbol(f1, Decl(exportNonInitializedVariablesUMD.ts, 29, 10))
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))

export var g1: D = new D;
>g1 : Symbol(g1, Decl(exportNonInitializedVariablesUMD.ts, 30, 10))
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))

export let h1: D = new D;
>h1 : Symbol(h1, Decl(exportNonInitializedVariablesUMD.ts, 31, 10))
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))
>D : Symbol(D, Decl(exportNonInitializedVariablesUMD.ts, 26, 26))

