//// [tests/cases/conformance/externalModules/exportNonVisibleType.ts] ////

=== foo1.ts ===
interface I1 {
	a: string;
>a : string
>  : ^^^^^^

	b: number;
>b : number
>  : ^^^^^^
}

var x: I1 = {a: "test", b: 42};
>x : I1
>  : ^^
>{a: "test", b: 42} : { a: string; b: number; }
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^^
>a : string
>  : ^^^^^^
>"test" : "test"
>       : ^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

export = x; // Should fail, I1 not exported.
>x : I1
>  : ^^


=== foo2.ts ===
interface I1 {
	a: string;
>a : string
>  : ^^^^^^

	b: number;
>b : number
>  : ^^^^^^
}

class C1 {
>C1 : C1
>   : ^^

	m1: I1;
>m1 : I1
>   : ^^
}

export = C1; // Should fail, type I1 of visible member C1.m1 not exported.
>C1 : C1
>   : ^^

=== foo3.ts ===
interface I1 {
	a: string;
>a : string
>  : ^^^^^^

	b: number;
>b : number
>  : ^^^^^^
}

class C1 {
>C1 : C1
>   : ^^

	private m1: I1;
>m1 : I1
>   : ^^
}

export = C1; // Should work, private type I1 of visible class C1 only used in private member m1.
>C1 : C1
>   : ^^

