extendPrivateConstructorClass2.ts(10,1): error TS2673: Constructor of class 'typeof A1 & typeof B1' is private and only accessible within the class declaration.
extendPrivateConstructorClass2.ts(11,24): error TS2675: Cannot extend a class 'typeof A1 & typeof B1'. Class constructor is marked as private.
extendPrivateConstructorClass2.ts(22,1): error TS2673: Constructor of class 'typeof A2 & typeof B2' is private and only accessible within the class declaration.
extendPrivateConstructorClass2.ts(23,24): error TS2675: Cannot extend a class 'typeof A2 & typeof B2'. Class constructor is marked as private.
extendPrivateConstructorClass2.ts(33,26): error TS2675: Cannot extend a class 'typeof j1 & typeof j2'. Class constructor is marked as private.
extendPrivateConstructorClass2.ts(44,5): error TS1184: Modifiers cannot appear here.
extendPrivateConstructorClass2.ts(44,30): error TS2510: Base constructors must all have the same return type.
extendPrivateConstructorClass2.ts(44,30): error TS2675: Cannot extend a class 'typeof j3 & typeof j4'. Class constructor is marked as private.


==== extendPrivateConstructorClass2.ts (8 errors) ====
    class A1 {
      private constructor(arg: string) {}
    }
    class B1 {
      constructor(arg: number) {}
    }
    
    declare const Cls1: typeof A1 & typeof B1;
    
    new Cls1(42); // error
    ~~~~~~~~~~~~
!!! error TS2673: Constructor of class 'typeof A1 & typeof B1' is private and only accessible within the class declaration.
    class Derived1 extends Cls1 {} // error
                           ~~~~
!!! error TS2675: Cannot extend a class 'typeof A1 & typeof B1'. Class constructor is marked as private.
    
    class A2 {
      constructor(arg: string) {}
    }
    class B2 {
      private constructor(arg: number) {}
    }
    
    declare const Cls2: typeof A2 & typeof B2;
    
    new Cls2(42); // error
    ~~~~~~~~~~~~
!!! error TS2673: Constructor of class 'typeof A2 & typeof B2' is private and only accessible within the class declaration.
    class Derived2 extends Cls2 {} // error
                           ~~~~
!!! error TS2675: Cannot extend a class 'typeof A2 & typeof B2'. Class constructor is marked as private.
    
    // https://github.com/microsoft/TypeScript/issues/62614
    declare abstract class j1 {
      private constructor(...args: any[]);
    }
    declare abstract class j2 {
      private constructor(...args: any[]);
    }
    declare const jS: typeof j1 & typeof j2;
    declare class j0 extends jS {} // error
                             ~~
!!! error TS2675: Cannot extend a class 'typeof j1 & typeof j2'. Class constructor is marked as private.
    
    abstract class j3 {
      private constructor(arg: number) {}
      method(_any: any) {
        abstract class j4 {
          private constructor(arg: number) {}
        }
    
        const jS: typeof j3 & typeof j4 = _any;
    
        declare class j0 extends jS {} // bizarre but ok
        ~~~~~~~
!!! error TS1184: Modifiers cannot appear here.
                                 ~~
!!! error TS2510: Base constructors must all have the same return type.
                                 ~~
!!! error TS2675: Cannot extend a class 'typeof j3 & typeof j4'. Class constructor is marked as private.
      }
    }
    