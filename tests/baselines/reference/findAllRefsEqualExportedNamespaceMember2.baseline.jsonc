// === findAllReferences ===
// === /mod.d.ts ===
// export = Outer.Inner;
// 
// declare namespace Outer {
//   namespace Inner {
//     <|function /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}lazy|](): void;|>
//   }
// }

// === /index.ts ===
// <|import { [|{| defId: 1, isWriteAccess: true |}lazy|] } from "./mod"|>
// [|{| defId: 1 |}lazy|]();

  // === Definitions ===
  // === /mod.d.ts ===
  // export = Outer.Inner;
  // 
  // declare namespace Outer {
  //   namespace Inner {
  //     <|function /*FIND ALL REFS*/[|{| defId: 0 |}lazy|](): void;|>
  //   }
  // }

  // === /index.ts ===
  // <|import { [|{| defId: 1 |}lazy|] } from "./mod"|>
  // lazy();

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Outer.Inner.lazy(): void",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Outer",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Inner",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "lazy",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) function lazy(): void\nimport lazy",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "lazy",
      "kind": "aliasName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "lazy",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /index.ts ===
// <|import { /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}lazy|] } from "./mod"|>
// [|{| defId: 0 |}lazy|]();

// === /mod.d.ts ===
// export = Outer.Inner;
// 
// declare namespace Outer {
//   namespace Inner {
//     <|function [|{| defId: 1, isWriteAccess: true |}lazy|](): void;|>
//   }
// }

  // === Definitions ===
  // === /index.ts ===
  // <|import { /*FIND ALL REFS*/[|{| defId: 0 |}lazy|] } from "./mod"|>
  // lazy();

  // === /mod.d.ts ===
  // export = Outer.Inner;
  // 
  // declare namespace Outer {
  //   namespace Inner {
  //     <|function [|{| defId: 1 |}lazy|](): void;|>
  //   }
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) function lazy(): void\nimport lazy",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "lazy",
      "kind": "aliasName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "lazy",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Outer.Inner.lazy(): void",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Outer",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Inner",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "lazy",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /index.ts ===
// <|import { [|{| defId: 0, isWriteAccess: true |}lazy|] } from "./mod"|>
// /*FIND ALL REFS*/[|{| defId: 0 |}lazy|]();

// === /mod.d.ts ===
// export = Outer.Inner;
// 
// declare namespace Outer {
//   namespace Inner {
//     <|function [|{| defId: 1, isWriteAccess: true |}lazy|](): void;|>
//   }
// }

  // === Definitions ===
  // === /index.ts ===
  // <|import { [|{| defId: 0 |}lazy|] } from "./mod"|>
  // /*FIND ALL REFS*/lazy();

  // === /mod.d.ts ===
  // export = Outer.Inner;
  // 
  // declare namespace Outer {
  //   namespace Inner {
  //     <|function [|{| defId: 1 |}lazy|](): void;|>
  //   }
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) function lazy(): void\nimport lazy",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "lazy",
      "kind": "aliasName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "lazy",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Outer.Inner.lazy(): void",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Outer",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Inner",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "lazy",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]