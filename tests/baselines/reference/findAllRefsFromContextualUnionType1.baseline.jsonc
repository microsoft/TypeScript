// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsFromContextualUnionType1.ts ===
// function test1(arg: { <|[|prop|]: "foo"|> }) {}
// test1({ /*FIND ALL REFS*/<|[|{| isWriteAccess: true, isDefinition: true |}prop|]: "bar"|> });
// 
// function test2(arg: { prop: "foo" } | undefined) {}
// test2({ prop: "bar" });

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsFromContextualUnionType1.ts ===
  // function test1(arg: { <|[|prop|]: "foo"|> }) {}
  // test1({ /*FIND ALL REFS*/prop: "bar" });
  // 
  // function test2(arg: { prop: "foo" } | undefined) {}
  // test2({ prop: "bar" });

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) prop: \"foo\"",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "prop",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "\"foo\"",
      "kind": "stringLiteral"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsFromContextualUnionType1.ts ===
// function test1(arg: { prop: "foo" }) {}
// test1({ prop: "bar" });
// 
// function test2(arg: { <|[|prop|]: "foo"|> } | undefined) {}
// test2({ /*FIND ALL REFS*/<|[|{| isWriteAccess: true, isDefinition: true |}prop|]: "bar"|> });

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsFromContextualUnionType1.ts ===
  // function test1(arg: { prop: "foo" }) {}
  // test1({ prop: "bar" });
  // 
  // function test2(arg: { <|[|prop|]: "foo"|> } | undefined) {}
  // test2({ /*FIND ALL REFS*/prop: "bar" });

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) prop: \"foo\"",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "prop",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "\"foo\"",
      "kind": "stringLiteral"
     }
    ]
   }
  ]