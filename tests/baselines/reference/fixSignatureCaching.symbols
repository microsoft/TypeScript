//// [tests/cases/conformance/fixSignatureCaching.ts] ////

=== fixSignatureCaching.ts ===
// Repro from #10697

(function (define, undefined) {
>define : Symbol(define, Decl(fixSignatureCaching.ts, 2, 11))
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

define(function () {
>define : Symbol(define, Decl(fixSignatureCaching.ts, 2, 11))

    'use strict';

    var impl = {};
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

    impl.mobileDetectRules = {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

    "phones": {
>"phones" : Symbol("phones", Decl(fixSignatureCaching.ts, 8, 30))

        "iPhone": "\\biPhone\\b|\\biPod\\b",
>"iPhone" : Symbol("iPhone", Decl(fixSignatureCaching.ts, 9, 15))

        "BlackBerry": "BlackBerry|\\bBB10\\b|rim[0-9]+",
>"BlackBerry" : Symbol("BlackBerry", Decl(fixSignatureCaching.ts, 10, 44))

        "HTC": "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m",
>"HTC" : Symbol("HTC", Decl(fixSignatureCaching.ts, 11, 56))

        "Nexus": "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6",
>"Nexus" : Symbol("Nexus", Decl(fixSignatureCaching.ts, 12, 277))

        "Dell": "Dell.*Streak|Dell.*Aero|Dell.*Venue|DELL.*Venue Pro|Dell Flash|Dell Smoke|Dell Mini 3iX|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",
>"Dell" : Symbol("Dell", Decl(fixSignatureCaching.ts, 13, 98))

        "Motorola": "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b",
>"Motorola" : Symbol("Motorola", Decl(fixSignatureCaching.ts, 14, 153))

        "Samsung": "Samsung|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F",
>"Samsung" : Symbol("Samsung", Decl(fixSignatureCaching.ts, 15, 687))

        "LG": "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323)",
>"LG" : Symbol("LG", Decl(fixSignatureCaching.ts, 16, 5336))

        "Sony": "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533",
>"Sony" : Symbol("Sony", Decl(fixSignatureCaching.ts, 17, 541))

        "Asus": "Asus.*Galaxy|PadFone.*Mobile",
>"Asus" : Symbol("Asus", Decl(fixSignatureCaching.ts, 18, 141))

        "NokiaLumia": "Lumia [0-9]{3,4}",
>"NokiaLumia" : Symbol("NokiaLumia", Decl(fixSignatureCaching.ts, 19, 47))

        "Micromax": "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",
>"Micromax" : Symbol("Micromax", Decl(fixSignatureCaching.ts, 20, 41))

        "Palm": "PalmSource|Palm",
>"Palm" : Symbol("Palm", Decl(fixSignatureCaching.ts, 21, 132))

        "Vertu": "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",
>"Vertu" : Symbol("Vertu", Decl(fixSignatureCaching.ts, 22, 34))

        "Pantech": "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",
>"Pantech" : Symbol("Pantech", Decl(fixSignatureCaching.ts, 23, 125))

        "Fly": "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",
>"Fly" : Symbol("Fly", Decl(fixSignatureCaching.ts, 24, 444))

        "Wiko": "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",
>"Wiko" : Symbol("Wiko", Decl(fixSignatureCaching.ts, 25, 131))

        "iMobile": "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",
>"iMobile" : Symbol("iMobile", Decl(fixSignatureCaching.ts, 26, 253))

        "SimValley": "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",
>"SimValley" : Symbol("SimValley", Decl(fixSignatureCaching.ts, 27, 57))

        "Wolfgang": "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",
>"Wolfgang" : Symbol("Wolfgang", Decl(fixSignatureCaching.ts, 28, 139))

        "Alcatel": "Alcatel",
>"Alcatel" : Symbol("Alcatel", Decl(fixSignatureCaching.ts, 29, 86))

        "Nintendo": "Nintendo 3DS",
>"Nintendo" : Symbol("Nintendo", Decl(fixSignatureCaching.ts, 30, 29))

        "Amoi": "Amoi",
>"Amoi" : Symbol("Amoi", Decl(fixSignatureCaching.ts, 31, 35))

        "INQ": "INQ",
>"INQ" : Symbol("INQ", Decl(fixSignatureCaching.ts, 32, 23))

        "GenericPhone": "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"
>"GenericPhone" : Symbol("GenericPhone", Decl(fixSignatureCaching.ts, 33, 21))

    },
    "tablets": {
>"tablets" : Symbol("tablets", Decl(fixSignatureCaching.ts, 35, 6))

        "iPad": "iPad|iPad.*Mobile",
>"iPad" : Symbol("iPad", Decl(fixSignatureCaching.ts, 36, 16))

        "NexusTablet": "Android.*Nexus[\\s]+(7|9|10)",
>"NexusTablet" : Symbol("NexusTablet", Decl(fixSignatureCaching.ts, 37, 36))

        "SamsungTablet": "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561",
>"SamsungTablet" : Symbol("SamsungTablet", Decl(fixSignatureCaching.ts, 38, 54))

        "Kindle": "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI)\\b",
>"Kindle" : Symbol("Kindle", Decl(fixSignatureCaching.ts, 39, 1622))

        "SurfaceTablet": "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",
>"SurfaceTablet" : Symbol("SurfaceTablet", Decl(fixSignatureCaching.ts, 40, 160))

        "HPTablet": "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",
>"HPTablet" : Symbol("HPTablet", Decl(fixSignatureCaching.ts, 41, 69))

        "AsusTablet": "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K017 |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA",
>"AsusTablet" : Symbol("AsusTablet", Decl(fixSignatureCaching.ts, 42, 113))

        "BlackBerryTablet": "PlayBook|RIM Tablet",
>"BlackBerryTablet" : Symbol("BlackBerryTablet", Decl(fixSignatureCaching.ts, 43, 409))

        "HTCtablet": "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",
>"HTCtablet" : Symbol("HTCtablet", Decl(fixSignatureCaching.ts, 44, 50))

        "MotorolaTablet": "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",
>"MotorolaTablet" : Symbol("MotorolaTablet", Decl(fixSignatureCaching.ts, 45, 104))

        "NookTablet": "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",
>"NookTablet" : Symbol("NookTablet", Decl(fixSignatureCaching.ts, 46, 125))

        "AcerTablet": "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20",
>"AcerTablet" : Symbol("AcerTablet", Decl(fixSignatureCaching.ts, 47, 125))

        "ToshibaTablet": "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",
>"ToshibaTablet" : Symbol("ToshibaTablet", Decl(fixSignatureCaching.ts, 48, 236))

        "LGTablet": "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",
>"LGTablet" : Symbol("LGTablet", Decl(fixSignatureCaching.ts, 49, 131))

        "FujitsuTablet": "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",
>"FujitsuTablet" : Symbol("FujitsuTablet", Decl(fixSignatureCaching.ts, 50, 99))

        "PrestigioTablet": "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",
>"PrestigioTablet" : Symbol("PrestigioTablet", Decl(fixSignatureCaching.ts, 51, 78))

        "LenovoTablet": "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)",
>"LenovoTablet" : Symbol("LenovoTablet", Decl(fixSignatureCaching.ts, 52, 443))

        "DellTablet": "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",
>"DellTablet" : Symbol("DellTablet", Decl(fixSignatureCaching.ts, 53, 236))

        "YarvikTablet": "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",
>"YarvikTablet" : Symbol("YarvikTablet", Decl(fixSignatureCaching.ts, 54, 78))

        "MedionTablet": "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",
>"MedionTablet" : Symbol("MedionTablet", Decl(fixSignatureCaching.ts, 55, 521))

        "ArnovaTablet": "AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",
>"ArnovaTablet" : Symbol("ArnovaTablet", Decl(fixSignatureCaching.ts, 56, 85))

        "IntensoTablet": "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",
>"IntensoTablet" : Symbol("IntensoTablet", Decl(fixSignatureCaching.ts, 57, 127))

        "IRUTablet": "M702pro",
>"IRUTablet" : Symbol("IRUTablet", Decl(fixSignatureCaching.ts, 58, 76))

        "MegafonTablet": "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",
>"MegafonTablet" : Symbol("MegafonTablet", Decl(fixSignatureCaching.ts, 59, 31))

        "EbodaTablet": "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",
>"EbodaTablet" : Symbol("EbodaTablet", Decl(fixSignatureCaching.ts, 60, 71))

        "AllViewTablet": "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",
>"AllViewTablet" : Symbol("AllViewTablet", Decl(fixSignatureCaching.ts, 61, 73))

        "ArchosTablet": "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",
>"ArchosTablet" : Symbol("ArchosTablet", Decl(fixSignatureCaching.ts, 62, 100))

        "AinolTablet": "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",
>"AinolTablet" : Symbol("AinolTablet", Decl(fixSignatureCaching.ts, 63, 200))

        "NokiaLumiaTablet": "Lumia 2520",
>"NokiaLumiaTablet" : Symbol("NokiaLumiaTablet", Decl(fixSignatureCaching.ts, 64, 92))

        "SonyTablet": "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP612|SOT31",
>"SonyTablet" : Symbol("SonyTablet", Decl(fixSignatureCaching.ts, 65, 41))

        "PhilipsTablet": "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",
>"PhilipsTablet" : Symbol("PhilipsTablet", Decl(fixSignatureCaching.ts, 66, 307))

        "CubeTablet": "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",
>"CubeTablet" : Symbol("CubeTablet", Decl(fixSignatureCaching.ts, 67, 112))

        "CobyTablet": "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",
>"CobyTablet" : Symbol("CobyTablet", Decl(fixSignatureCaching.ts, 68, 103))

        "MIDTablet": "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",
>"MIDTablet" : Symbol("MIDTablet", Decl(fixSignatureCaching.ts, 69, 192))

        "MSITablet": "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",
>"MSITablet" : Symbol("MSITablet", Decl(fixSignatureCaching.ts, 70, 287))

        "SMiTTablet": "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",
>"SMiTTablet" : Symbol("SMiTTablet", Decl(fixSignatureCaching.ts, 71, 163))

        "RockChipTablet": "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",
>"RockChipTablet" : Symbol("RockChipTablet", Decl(fixSignatureCaching.ts, 72, 95))

        "FlyTablet": "IQ310|Fly Vision",
>"FlyTablet" : Symbol("FlyTablet", Decl(fixSignatureCaching.ts, 73, 83))

        "bqTablet": "Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris E10)|Maxwell.*Lite|Maxwell.*Plus",
>"bqTablet" : Symbol("bqTablet", Decl(fixSignatureCaching.ts, 74, 40))

        "HuaweiTablet": "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim",
>"HuaweiTablet" : Symbol("HuaweiTablet", Decl(fixSignatureCaching.ts, 75, 178))

        "NecTablet": "\\bN-06D|\\bN-08D",
>"NecTablet" : Symbol("NecTablet", Decl(fixSignatureCaching.ts, 76, 127))

        "PantechTablet": "Pantech.*P4100",
>"PantechTablet" : Symbol("PantechTablet", Decl(fixSignatureCaching.ts, 77, 41))

        "BronchoTablet": "Broncho.*(N701|N708|N802|a710)",
>"BronchoTablet" : Symbol("BronchoTablet", Decl(fixSignatureCaching.ts, 78, 42))

        "VersusTablet": "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",
>"VersusTablet" : Symbol("VersusTablet", Decl(fixSignatureCaching.ts, 79, 58))

        "ZyncTablet": "z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900",
>"ZyncTablet" : Symbol("ZyncTablet", Decl(fixSignatureCaching.ts, 80, 59))

        "PositivoTablet": "TB07STA|TB10STA|TB07FTA|TB10FTA",
>"PositivoTablet" : Symbol("PositivoTablet", Decl(fixSignatureCaching.ts, 81, 71))

        "NabiTablet": "Android.*\\bNabi",
>"NabiTablet" : Symbol("NabiTablet", Decl(fixSignatureCaching.ts, 82, 60))

        "KoboTablet": "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",
>"KoboTablet" : Symbol("KoboTablet", Decl(fixSignatureCaching.ts, 83, 41))

        "DanewTablet": "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",
>"DanewTablet" : Symbol("DanewTablet", Decl(fixSignatureCaching.ts, 84, 78))

        "TexetTablet": "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",
>"TexetTablet" : Symbol("TexetTablet", Decl(fixSignatureCaching.ts, 85, 97))

        "PlaystationTablet": "Playstation.*(Portable|Vita)",
>"PlaystationTablet" : Symbol("PlaystationTablet", Decl(fixSignatureCaching.ts, 86, 641))

        "TrekstorTablet": "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",
>"TrekstorTablet" : Symbol("TrekstorTablet", Decl(fixSignatureCaching.ts, 87, 60))

        "PyleAudioTablet": "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",
>"PyleAudioTablet" : Symbol("PyleAudioTablet", Decl(fixSignatureCaching.ts, 88, 133))

        "AdvanTablet": "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",
>"AdvanTablet" : Symbol("AdvanTablet", Decl(fixSignatureCaching.ts, 89, 136))

        "DanyTechTablet": "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",
>"DanyTechTablet" : Symbol("DanyTechTablet", Decl(fixSignatureCaching.ts, 90, 152))

        "GalapadTablet": "Android.*\\bG1\\b",
>"GalapadTablet" : Symbol("GalapadTablet", Decl(fixSignatureCaching.ts, 91, 159))

        "MicromaxTablet": "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",
>"MicromaxTablet" : Symbol("MicromaxTablet", Decl(fixSignatureCaching.ts, 92, 45))

        "KarbonnTablet": "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",
>"KarbonnTablet" : Symbol("KarbonnTablet", Decl(fixSignatureCaching.ts, 93, 99))

        "AllFineTablet": "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",
>"AllFineTablet" : Symbol("AllFineTablet", Decl(fixSignatureCaching.ts, 94, 91))

        "PROSCANTablet": "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",
>"PROSCANTablet" : Symbol("PROSCANTablet", Decl(fixSignatureCaching.ts, 95, 108))

        "YONESTablet": "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",
>"YONESTablet" : Symbol("YONESTablet", Decl(fixSignatureCaching.ts, 96, 405))

        "ChangJiaTablet": "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",
>"ChangJiaTablet" : Symbol("ChangJiaTablet", Decl(fixSignatureCaching.ts, 97, 128))

        "GUTablet": "TX-A1301|TX-M9002|Q702|kf026",
>"GUTablet" : Symbol("GUTablet", Decl(fixSignatureCaching.ts, 98, 357))

        "PointOfViewTablet": "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",
>"PointOfViewTablet" : Symbol("PointOfViewTablet", Decl(fixSignatureCaching.ts, 99, 51))

        "OvermaxTablet": "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)",
>"OvermaxTablet" : Symbol("OvermaxTablet", Decl(fixSignatureCaching.ts, 100, 360))

        "HCLTablet": "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",
>"HCLTablet" : Symbol("HCLTablet", Decl(fixSignatureCaching.ts, 101, 152))

        "DPSTablet": "DPS Dream 9|DPS Dual 7",
>"DPSTablet" : Symbol("DPSTablet", Decl(fixSignatureCaching.ts, 102, 145))

        "VistureTablet": "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",
>"VistureTablet" : Symbol("VistureTablet", Decl(fixSignatureCaching.ts, 103, 46))

        "CrestaTablet": "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",
>"CrestaTablet" : Symbol("CrestaTablet", Decl(fixSignatureCaching.ts, 104, 87))

        "MediatekTablet": "\\bMT8125|MT8389|MT8135|MT8377\\b",
>"MediatekTablet" : Symbol("MediatekTablet", Decl(fixSignatureCaching.ts, 105, 136))

        "ConcordeTablet": "Concorde([ ]+)?Tab|ConCorde ReadMan",
>"ConcordeTablet" : Symbol("ConcordeTablet", Decl(fixSignatureCaching.ts, 106, 62))

        "GoCleverTablet": "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",
>"GoCleverTablet" : Symbol("GoCleverTablet", Decl(fixSignatureCaching.ts, 107, 64))

        "ModecomTablet": "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",
>"ModecomTablet" : Symbol("ModecomTablet", Decl(fixSignatureCaching.ts, 108, 482))

        "VoninoTablet": "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",
>"VoninoTablet" : Symbol("VoninoTablet", Decl(fixSignatureCaching.ts, 109, 299))

        "ECSTablet": "V07OT2|TM105A|S10OT1|TR10CS1",
>"ECSTablet" : Symbol("ECSTablet", Decl(fixSignatureCaching.ts, 110, 296))

        "StorexTablet": "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",
>"StorexTablet" : Symbol("StorexTablet", Decl(fixSignatureCaching.ts, 111, 52))

        "VodafoneTablet": "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497",
>"VodafoneTablet" : Symbol("VodafoneTablet", Decl(fixSignatureCaching.ts, 112, 74))

        "EssentielBTablet": "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",
>"EssentielBTablet" : Symbol("EssentielBTablet", Decl(fixSignatureCaching.ts, 113, 83))

        "RossMoorTablet": "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",
>"RossMoorTablet" : Symbol("RossMoorTablet", Decl(fixSignatureCaching.ts, 114, 71))

        "iMobileTablet": "i-mobile i-note",
>"iMobileTablet" : Symbol("iMobileTablet", Decl(fixSignatureCaching.ts, 115, 101))

        "TolinoTablet": "tolino tab [0-9.]+|tolino shine",
>"TolinoTablet" : Symbol("TolinoTablet", Decl(fixSignatureCaching.ts, 116, 43))

        "AudioSonicTablet": "\\bC-22Q|T7-QC|T-17B|T-17P\\b",
>"AudioSonicTablet" : Symbol("AudioSonicTablet", Decl(fixSignatureCaching.ts, 117, 58))

        "AMPETablet": "Android.* A78 ",
>"AMPETablet" : Symbol("AMPETablet", Decl(fixSignatureCaching.ts, 118, 60))

        "SkkTablet": "Android.* (SKYPAD|PHOENIX|CYCLOPS)",
>"SkkTablet" : Symbol("SkkTablet", Decl(fixSignatureCaching.ts, 119, 39))

        "TecnoTablet": "TECNO P9",
>"TecnoTablet" : Symbol("TecnoTablet", Decl(fixSignatureCaching.ts, 120, 58))

        "JXDTablet": "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",
>"JXDTablet" : Symbol("JXDTablet", Decl(fixSignatureCaching.ts, 121, 34))

        "iJoyTablet": "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",
>"iJoyTablet" : Symbol("iJoyTablet", Decl(fixSignatureCaching.ts, 122, 253))

        "FX2Tablet": "FX2 PAD7|FX2 PAD10",
>"FX2Tablet" : Symbol("FX2Tablet", Decl(fixSignatureCaching.ts, 123, 526))

        "XoroTablet": "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",
>"XoroTablet" : Symbol("XoroTablet", Decl(fixSignatureCaching.ts, 124, 42))

        "ViewsonicTablet": "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",
>"ViewsonicTablet" : Symbol("ViewsonicTablet", Decl(fixSignatureCaching.ts, 125, 368))

        "OdysTablet": "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",
>"OdysTablet" : Symbol("OdysTablet", Decl(fixSignatureCaching.ts, 126, 134))

        "CaptivaTablet": "CAPTIVA PAD",
>"CaptivaTablet" : Symbol("CaptivaTablet", Decl(fixSignatureCaching.ts, 127, 141))

        "IconbitTablet": "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",
>"IconbitTablet" : Symbol("IconbitTablet", Decl(fixSignatureCaching.ts, 128, 39))

        "TeclastTablet": "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",
>"TeclastTablet" : Symbol("TeclastTablet", Decl(fixSignatureCaching.ts, 129, 186))

        "OndaTablet": "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+",
>"OndaTablet" : Symbol("OndaTablet", Decl(fixSignatureCaching.ts, 130, 931))

        "JaytechTablet": "TPC-PA762",
>"JaytechTablet" : Symbol("JaytechTablet", Decl(fixSignatureCaching.ts, 131, 334))

        "BlaupunktTablet": "Endeavour 800NG|Endeavour 1010",
>"BlaupunktTablet" : Symbol("BlaupunktTablet", Decl(fixSignatureCaching.ts, 132, 37))

        "DigmaTablet": "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",
>"DigmaTablet" : Symbol("DigmaTablet", Decl(fixSignatureCaching.ts, 133, 60))

        "EvolioTablet": "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",
>"EvolioTablet" : Symbol("EvolioTablet", Decl(fixSignatureCaching.ts, 134, 123))

        "LavaTablet": "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",
>"LavaTablet" : Symbol("LavaTablet", Decl(fixSignatureCaching.ts, 135, 110))

        "AocTablet": "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",
>"AocTablet" : Symbol("AocTablet", Decl(fixSignatureCaching.ts, 136, 71))

        "MpmanTablet": "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",
>"MpmanTablet" : Symbol("MpmanTablet", Decl(fixSignatureCaching.ts, 137, 87))

        "CelkonTablet": "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",
>"CelkonTablet" : Symbol("CelkonTablet", Decl(fixSignatureCaching.ts, 138, 292))

        "WolderTablet": "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",
>"WolderTablet" : Symbol("WolderTablet", Decl(fixSignatureCaching.ts, 139, 111))

        "MiTablet": "\\bMI PAD\\b|\\bHM NOTE 1W\\b",
>"MiTablet" : Symbol("MiTablet", Decl(fixSignatureCaching.ts, 140, 306))

        "NibiruTablet": "Nibiru M1|Nibiru Jupiter One",
>"NibiruTablet" : Symbol("NibiruTablet", Decl(fixSignatureCaching.ts, 141, 52))

        "NexoTablet": "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",
>"NexoTablet" : Symbol("NexoTablet", Decl(fixSignatureCaching.ts, 142, 55))

        "LeaderTablet": "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",
>"LeaderTablet" : Symbol("LeaderTablet", Decl(fixSignatureCaching.ts, 143, 119))

        "UbislateTablet": "UbiSlate[\\s]?7C",
>"UbislateTablet" : Symbol("UbislateTablet", Decl(fixSignatureCaching.ts, 144, 167))

        "PocketBookTablet": "Pocketbook",
>"PocketBookTablet" : Symbol("PocketBookTablet", Decl(fixSignatureCaching.ts, 145, 45))

        "KocasoTablet": "\\b(TB-1207)\\b",
>"KocasoTablet" : Symbol("KocasoTablet", Decl(fixSignatureCaching.ts, 146, 41))

        "Hudl": "Hudl HT7S3|Hudl 2",
>"Hudl" : Symbol("Hudl", Decl(fixSignatureCaching.ts, 147, 42))

        "TelstraTablet": "T-Hub2",
>"TelstraTablet" : Symbol("TelstraTablet", Decl(fixSignatureCaching.ts, 148, 36))

        "GenericTablet": "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bJolla\\b|\\bTP750\\b"
>"GenericTablet" : Symbol("GenericTablet", Decl(fixSignatureCaching.ts, 149, 34))

    },
    "oss": {
>"oss" : Symbol("oss", Decl(fixSignatureCaching.ts, 151, 6))

        "AndroidOS": "Android",
>"AndroidOS" : Symbol("AndroidOS", Decl(fixSignatureCaching.ts, 152, 12))

        "BlackBerryOS": "blackberry|\\bBB10\\b|rim tablet os",
>"BlackBerryOS" : Symbol("BlackBerryOS", Decl(fixSignatureCaching.ts, 153, 31))

        "PalmOS": "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",
>"PalmOS" : Symbol("PalmOS", Decl(fixSignatureCaching.ts, 154, 62))

        "SymbianOS": "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",
>"SymbianOS" : Symbol("SymbianOS", Decl(fixSignatureCaching.ts, 155, 75))

        "WindowsMobileOS": "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Window Mobile|Windows Phone [0-9.]+|WCE;",
>"WindowsMobileOS" : Symbol("WindowsMobileOS", Decl(fixSignatureCaching.ts, 156, 77))

        "WindowsPhoneOS": "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",
>"WindowsPhoneOS" : Symbol("WindowsPhoneOS", Decl(fixSignatureCaching.ts, 157, 124))

        "iOS": "\\biPhone.*Mobile|\\biPod|\\biPad",
>"iOS" : Symbol("iOS", Decl(fixSignatureCaching.ts, 158, 139))

        "MeeGoOS": "MeeGo",
>"MeeGoOS" : Symbol("MeeGoOS", Decl(fixSignatureCaching.ts, 159, 51))

        "MaemoOS": "Maemo",
>"MaemoOS" : Symbol("MaemoOS", Decl(fixSignatureCaching.ts, 160, 27))

        "JavaOS": "J2ME\/|\\bMIDP\\b|\\bCLDC\\b",
>"JavaOS" : Symbol("JavaOS", Decl(fixSignatureCaching.ts, 161, 27))

        "webOS": "webOS|hpwOS",
>"webOS" : Symbol("webOS", Decl(fixSignatureCaching.ts, 162, 49))

        "badaOS": "\\bBada\\b",
>"badaOS" : Symbol("badaOS", Decl(fixSignatureCaching.ts, 163, 31))

        "BREWOS": "BREW"
>"BREWOS" : Symbol("BREWOS", Decl(fixSignatureCaching.ts, 164, 31))

    },
    "uas": {
>"uas" : Symbol("uas", Decl(fixSignatureCaching.ts, 166, 6))

        "Vivaldi": "Vivaldi",
>"Vivaldi" : Symbol("Vivaldi", Decl(fixSignatureCaching.ts, 167, 12))

        "Chrome": "\\bCrMo\\b|CriOS|Android.*Chrome\/[.0-9]* (Mobile)?",
>"Chrome" : Symbol("Chrome", Decl(fixSignatureCaching.ts, 168, 29))

        "Dolfin": "\\bDolfin\\b",
>"Dolfin" : Symbol("Dolfin", Decl(fixSignatureCaching.ts, 169, 72))

        "Opera": "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\/[0-9.]+|Coast\/[0-9.]+",
>"Opera" : Symbol("Opera", Decl(fixSignatureCaching.ts, 170, 33))

        "Skyfire": "Skyfire",
>"Skyfire" : Symbol("Skyfire", Decl(fixSignatureCaching.ts, 171, 94))

        "Edge": "Mobile Safari\/[.0-9]* Edge",
>"Edge" : Symbol("Edge", Decl(fixSignatureCaching.ts, 172, 29))

        "IE": "IEMobile|MSIEMobile",
>"IE" : Symbol("IE", Decl(fixSignatureCaching.ts, 173, 46))

        "Firefox": "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile",
>"Firefox" : Symbol("Firefox", Decl(fixSignatureCaching.ts, 174, 36))

        "Bolt": "bolt",
>"Bolt" : Symbol("Bolt", Decl(fixSignatureCaching.ts, 175, 84))

        "TeaShark": "teashark",
>"TeaShark" : Symbol("TeaShark", Decl(fixSignatureCaching.ts, 176, 23))

        "Blazer": "Blazer",
>"Blazer" : Symbol("Blazer", Decl(fixSignatureCaching.ts, 177, 31))

        "Safari": "Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari",
>"Safari" : Symbol("Safari", Decl(fixSignatureCaching.ts, 178, 27))

        "Tizen": "Tizen",
>"Tizen" : Symbol("Tizen", Decl(fixSignatureCaching.ts, 179, 72))

        "UCBrowser": "UC.*Browser|UCWEB",
>"UCBrowser" : Symbol("UCBrowser", Decl(fixSignatureCaching.ts, 180, 25))

        "baiduboxapp": "baiduboxapp",
>"baiduboxapp" : Symbol("baiduboxapp", Decl(fixSignatureCaching.ts, 181, 41))

        "baidubrowser": "baidubrowser",
>"baidubrowser" : Symbol("baidubrowser", Decl(fixSignatureCaching.ts, 182, 37))

        "DiigoBrowser": "DiigoBrowser",
>"DiigoBrowser" : Symbol("DiigoBrowser", Decl(fixSignatureCaching.ts, 183, 39))

        "Puffin": "Puffin",
>"Puffin" : Symbol("Puffin", Decl(fixSignatureCaching.ts, 184, 39))

        "Mercury": "\\bMercury\\b",
>"Mercury" : Symbol("Mercury", Decl(fixSignatureCaching.ts, 185, 27))

        "ObigoBrowser": "Obigo",
>"ObigoBrowser" : Symbol("ObigoBrowser", Decl(fixSignatureCaching.ts, 186, 35))

        "NetFront": "NF-Browser",
>"NetFront" : Symbol("NetFront", Decl(fixSignatureCaching.ts, 187, 32))

        "GenericBrowser": "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",
>"GenericBrowser" : Symbol("GenericBrowser", Decl(fixSignatureCaching.ts, 188, 33))

        "PaleMoon": "Android.*PaleMoon|Mobile.*PaleMoon"
>"PaleMoon" : Symbol("PaleMoon", Decl(fixSignatureCaching.ts, 189, 160))

    },
    "props": {
>"props" : Symbol("props", Decl(fixSignatureCaching.ts, 191, 6))

        "Mobile": "Mobile\/[VER]",
>"Mobile" : Symbol("Mobile", Decl(fixSignatureCaching.ts, 192, 14))

        "Build": "Build\/[VER]",
>"Build" : Symbol("Build", Decl(fixSignatureCaching.ts, 193, 34))

        "Version": "Version\/[VER]",
>"Version" : Symbol("Version", Decl(fixSignatureCaching.ts, 194, 32))

        "VendorID": "VendorID\/[VER]",
>"VendorID" : Symbol("VendorID", Decl(fixSignatureCaching.ts, 195, 36))

        "iPad": "iPad.*CPU[a-z ]+[VER]",
>"iPad" : Symbol("iPad", Decl(fixSignatureCaching.ts, 196, 38))

        "iPhone": "iPhone.*CPU[a-z ]+[VER]",
>"iPhone" : Symbol("iPhone", Decl(fixSignatureCaching.ts, 197, 40))

        "iPod": "iPod.*CPU[a-z ]+[VER]",
>"iPod" : Symbol("iPod", Decl(fixSignatureCaching.ts, 198, 44))

        "Kindle": "Kindle\/[VER]",
>"Kindle" : Symbol("Kindle", Decl(fixSignatureCaching.ts, 199, 40))

        "Chrome": [
>"Chrome" : Symbol("Chrome", Decl(fixSignatureCaching.ts, 200, 34))

            "Chrome\/[VER]",
            "CriOS\/[VER]",
            "CrMo\/[VER]"
        ],
        "Coast": [
>"Coast" : Symbol("Coast", Decl(fixSignatureCaching.ts, 205, 10))

            "Coast\/[VER]"
        ],
        "Dolfin": "Dolfin\/[VER]",
>"Dolfin" : Symbol("Dolfin", Decl(fixSignatureCaching.ts, 208, 10))

        "Firefox": "Firefox\/[VER]",
>"Firefox" : Symbol("Firefox", Decl(fixSignatureCaching.ts, 209, 34))

        "Fennec": "Fennec\/[VER]",
>"Fennec" : Symbol("Fennec", Decl(fixSignatureCaching.ts, 210, 36))

        "Edge": "Edge\/[VER]",
>"Edge" : Symbol("Edge", Decl(fixSignatureCaching.ts, 211, 34))

        "IE": [
>"IE" : Symbol("IE", Decl(fixSignatureCaching.ts, 212, 30))

            "IEMobile\/[VER];",
            "IEMobile [VER]",
            "MSIE [VER];",
            "Trident\/[0-9.]+;.*rv:[VER]"
        ],
        "NetFront": "NetFront\/[VER]",
>"NetFront" : Symbol("NetFront", Decl(fixSignatureCaching.ts, 218, 10))

        "NokiaBrowser": "NokiaBrowser\/[VER]",
>"NokiaBrowser" : Symbol("NokiaBrowser", Decl(fixSignatureCaching.ts, 219, 38))

        "Opera": [
>"Opera" : Symbol("Opera", Decl(fixSignatureCaching.ts, 220, 46))

            " OPR\/[VER]",
            "Opera Mini\/[VER]",
            "Version\/[VER]"
        ],
        "Opera Mini": "Opera Mini\/[VER]",
>"Opera Mini" : Symbol("Opera Mini", Decl(fixSignatureCaching.ts, 225, 10))

        "Opera Mobi": "Version\/[VER]",
>"Opera Mobi" : Symbol("Opera Mobi", Decl(fixSignatureCaching.ts, 226, 42))

        "UC Browser": "UC Browser[VER]",
>"UC Browser" : Symbol("UC Browser", Decl(fixSignatureCaching.ts, 227, 39))

        "MQQBrowser": "MQQBrowser\/[VER]",
>"MQQBrowser" : Symbol("MQQBrowser", Decl(fixSignatureCaching.ts, 228, 40))

        "MicroMessenger": "MicroMessenger\/[VER]",
>"MicroMessenger" : Symbol("MicroMessenger", Decl(fixSignatureCaching.ts, 229, 42))

        "baiduboxapp": "baiduboxapp\/[VER]",
>"baiduboxapp" : Symbol("baiduboxapp", Decl(fixSignatureCaching.ts, 230, 50))

        "baidubrowser": "baidubrowser\/[VER]",
>"baidubrowser" : Symbol("baidubrowser", Decl(fixSignatureCaching.ts, 231, 44))

        "Iron": "Iron\/[VER]",
>"Iron" : Symbol("Iron", Decl(fixSignatureCaching.ts, 232, 46))

        "Safari": [
>"Safari" : Symbol("Safari", Decl(fixSignatureCaching.ts, 233, 30))

            "Version\/[VER]",
            "Safari\/[VER]"
        ],
        "Skyfire": "Skyfire\/[VER]",
>"Skyfire" : Symbol("Skyfire", Decl(fixSignatureCaching.ts, 237, 10))

        "Tizen": "Tizen\/[VER]",
>"Tizen" : Symbol("Tizen", Decl(fixSignatureCaching.ts, 238, 36))

        "Webkit": "webkit[ \/][VER]",
>"Webkit" : Symbol("Webkit", Decl(fixSignatureCaching.ts, 239, 32))

        "PaleMoon": "PaleMoon\/[VER]",
>"PaleMoon" : Symbol("PaleMoon", Decl(fixSignatureCaching.ts, 240, 37))

        "Gecko": "Gecko\/[VER]",
>"Gecko" : Symbol("Gecko", Decl(fixSignatureCaching.ts, 241, 38))

        "Trident": "Trident\/[VER]",
>"Trident" : Symbol("Trident", Decl(fixSignatureCaching.ts, 242, 32))

        "Presto": "Presto\/[VER]",
>"Presto" : Symbol("Presto", Decl(fixSignatureCaching.ts, 243, 36))

        "Goanna": "Goanna\/[VER]",
>"Goanna" : Symbol("Goanna", Decl(fixSignatureCaching.ts, 244, 34))

        "iOS": " \\bi?OS\\b [VER][ ;]{1}",
>"iOS" : Symbol("iOS", Decl(fixSignatureCaching.ts, 245, 34))

        "Android": "Android [VER]",
>"Android" : Symbol("Android", Decl(fixSignatureCaching.ts, 246, 42))

        "BlackBerry": [
>"BlackBerry" : Symbol("BlackBerry", Decl(fixSignatureCaching.ts, 247, 35))

            "BlackBerry[\\w]+\/[VER]",
            "BlackBerry.*Version\/[VER]",
            "Version\/[VER]"
        ],
        "BREW": "BREW [VER]",
>"BREW" : Symbol("BREW", Decl(fixSignatureCaching.ts, 252, 10))

        "Java": "Java\/[VER]",
>"Java" : Symbol("Java", Decl(fixSignatureCaching.ts, 253, 29))

        "Windows Phone OS": [
>"Windows Phone OS" : Symbol("Windows Phone OS", Decl(fixSignatureCaching.ts, 254, 30))

            "Windows Phone OS [VER]",
            "Windows Phone [VER]"
        ],
        "Windows Phone": "Windows Phone [VER]",
>"Windows Phone" : Symbol("Windows Phone", Decl(fixSignatureCaching.ts, 258, 10))

        "Windows CE": "Windows CE\/[VER]",
>"Windows CE" : Symbol("Windows CE", Decl(fixSignatureCaching.ts, 259, 47))

        "Windows NT": "Windows NT [VER]",
>"Windows NT" : Symbol("Windows NT", Decl(fixSignatureCaching.ts, 260, 42))

        "Symbian": [
>"Symbian" : Symbol("Symbian", Decl(fixSignatureCaching.ts, 261, 41))

            "SymbianOS\/[VER]",
            "Symbian\/[VER]"
        ],
        "webOS": [
>"webOS" : Symbol("webOS", Decl(fixSignatureCaching.ts, 265, 10))

            "webOS\/[VER]",
            "hpwOS\/[VER];"
        ]
    },
    "utils": {
>"utils" : Symbol("utils", Decl(fixSignatureCaching.ts, 270, 6))

        "Bot": "Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom",
>"Bot" : Symbol("Bot", Decl(fixSignatureCaching.ts, 271, 14))

        "MobileBot": "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\/M1A1-R2D2",
>"MobileBot" : Symbol("MobileBot", Decl(fixSignatureCaching.ts, 272, 273))

        "DesktopMode": "WPDesktop",
>"DesktopMode" : Symbol("DesktopMode", Decl(fixSignatureCaching.ts, 273, 84))

        "TV": "SonyDTV|HbbTV",
>"TV" : Symbol("TV", Decl(fixSignatureCaching.ts, 274, 35))

        "WebKit": "(webkit)[ \/]([\\w.]+)",
>"WebKit" : Symbol("WebKit", Decl(fixSignatureCaching.ts, 275, 30))

        "Console": "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|PLAYSTATION|Xbox)\\b",
>"Console" : Symbol("Console", Decl(fixSignatureCaching.ts, 276, 43))

        "Watch": "SM-V700"
>"Watch" : Symbol("Watch", Decl(fixSignatureCaching.ts, 277, 82))
    }
};

    // following patterns come from http://detectmobilebrowsers.com/
    impl.detectMobileBrowsers = {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

        fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
>fullPattern : Symbol(fullPattern, Decl(fixSignatureCaching.ts, 283, 33))

        shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
>shortPattern : Symbol(shortPattern, Decl(fixSignatureCaching.ts, 284, 336))

        tabletPattern: /android|ipad|playbook|silk/i
>tabletPattern : Symbol(tabletPattern, Decl(fixSignatureCaching.ts, 285, 1632))

    };

    var hasOwnProp = Object.prototype.hasOwnProperty,
>hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
>Object.prototype.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))
>Object.prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
>hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.es5.d.ts, --, --))

        isArray;
>isArray : Symbol(isArray, Decl(fixSignatureCaching.ts, 289, 53))

    impl.FALLBACK_PHONE = 'UnknownPhone';
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

    impl.FALLBACK_TABLET = 'UnknownTablet';
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

    impl.FALLBACK_MOBILE = 'UnknownMobile';
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

    isArray = ('isArray' in Array) ?
>isArray : Symbol(isArray, Decl(fixSignatureCaching.ts, 289, 53))
>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

        Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; };
>Array.isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>isArray : Symbol(ArrayConstructor.isArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 297, 34))
>Object.prototype.toString.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>Object.prototype.toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
>Object.prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
>toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 297, 34))

    isArray = 'isArray' in Array
>isArray : Symbol(isArray, Decl(fixSignatureCaching.ts, 289, 53))
>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

        ? function (value) { return Object.prototype.toString.call(value) === '[object Array]'; }
>value : Symbol(value, Decl(fixSignatureCaching.ts, 299, 20))
>Object.prototype.toString.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>Object.prototype.toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
>Object.prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>prototype : Symbol(ObjectConstructor.prototype, Decl(lib.es5.d.ts, --, --))
>toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 299, 20))

        : Array.isArray;
>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

    function equalIC(a, b) {
>equalIC : Symbol(equalIC, Decl(fixSignatureCaching.ts, 300, 24))
>a : Symbol(a, Decl(fixSignatureCaching.ts, 302, 21))
>b : Symbol(b, Decl(fixSignatureCaching.ts, 302, 23))

        return a != null && b != null && a.toLowerCase() === b.toLowerCase();
>a : Symbol(a, Decl(fixSignatureCaching.ts, 302, 21))
>b : Symbol(b, Decl(fixSignatureCaching.ts, 302, 23))
>a : Symbol(a, Decl(fixSignatureCaching.ts, 302, 21))
>b : Symbol(b, Decl(fixSignatureCaching.ts, 302, 23))
    }

    function containsIC(array, value) {
>containsIC : Symbol(containsIC, Decl(fixSignatureCaching.ts, 304, 5))
>array : Symbol(array, Decl(fixSignatureCaching.ts, 306, 24))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 306, 30))

        var valueLC, i, len = array.length;
>valueLC : Symbol(valueLC, Decl(fixSignatureCaching.ts, 307, 11))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 307, 20))
>len : Symbol(len, Decl(fixSignatureCaching.ts, 307, 23))
>array : Symbol(array, Decl(fixSignatureCaching.ts, 306, 24))

        if (!len || !value) {
>len : Symbol(len, Decl(fixSignatureCaching.ts, 307, 23))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 306, 30))

            return false;
        }
        valueLC = value.toLowerCase();
>valueLC : Symbol(valueLC, Decl(fixSignatureCaching.ts, 307, 11))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 306, 30))

        for (i = 0; i < len; ++i) {
>i : Symbol(i, Decl(fixSignatureCaching.ts, 307, 20))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 307, 20))
>len : Symbol(len, Decl(fixSignatureCaching.ts, 307, 23))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 307, 20))

            if (valueLC === array[i].toLowerCase()) {
>valueLC : Symbol(valueLC, Decl(fixSignatureCaching.ts, 307, 11))
>array : Symbol(array, Decl(fixSignatureCaching.ts, 306, 24))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 307, 20))

                return true;
            }
        }
        return false;
    }

    function convertPropsToRegExp(object) {
>convertPropsToRegExp : Symbol(convertPropsToRegExp, Decl(fixSignatureCaching.ts, 318, 5))
>object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))

        for (var key in object) {
>key : Symbol(key, Decl(fixSignatureCaching.ts, 321, 16))
>object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))

            if (hasOwnProp.call(object, key)) {
>hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 321, 16))

                object[key] = new RegExp(object[key], 'i');
>object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 321, 16))
>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>object : Symbol(object, Decl(fixSignatureCaching.ts, 320, 34))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 321, 16))
            }
        }
    }

    (function init() {
>init : Symbol(init, Decl(fixSignatureCaching.ts, 328, 5))

        var key, values, value, i, len, verPos, mobileDetectRules = impl.mobileDetectRules;
>key : Symbol(key, Decl(fixSignatureCaching.ts, 329, 11))
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 329, 31))
>len : Symbol(len, Decl(fixSignatureCaching.ts, 329, 34))
>verPos : Symbol(verPos, Decl(fixSignatureCaching.ts, 329, 39))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

        for (key in mobileDetectRules.props) {
>key : Symbol(key, Decl(fixSignatureCaching.ts, 329, 11))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

            if (hasOwnProp.call(mobileDetectRules.props, key)) {
>hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 329, 11))

                values = mobileDetectRules.props[key];
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 329, 11))

                if (!isArray(values)) {
>isArray : Symbol(isArray, Decl(fixSignatureCaching.ts, 289, 53))
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))

                    values = [values];
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
                }
                len = values.length;
>len : Symbol(len, Decl(fixSignatureCaching.ts, 329, 34))
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))

                for (i = 0; i < len; ++i) {
>i : Symbol(i, Decl(fixSignatureCaching.ts, 329, 31))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 329, 31))
>len : Symbol(len, Decl(fixSignatureCaching.ts, 329, 34))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 329, 31))

                    value = values[i];
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 329, 31))

                    verPos = value.indexOf('[VER]');
>verPos : Symbol(verPos, Decl(fixSignatureCaching.ts, 329, 39))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))

                    if (verPos >= 0) {
>verPos : Symbol(verPos, Decl(fixSignatureCaching.ts, 329, 39))

                        value = value.substring(0, verPos) + '([\\w._\\+]+)' + value.substring(verPos + 5);
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))
>verPos : Symbol(verPos, Decl(fixSignatureCaching.ts, 329, 39))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))
>verPos : Symbol(verPos, Decl(fixSignatureCaching.ts, 329, 39))
                    }
                    values[i] = new RegExp(value, 'i');
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 329, 31))
>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>value : Symbol(value, Decl(fixSignatureCaching.ts, 329, 24))
                }
                mobileDetectRules.props[key] = values;
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 329, 11))
>values : Symbol(values, Decl(fixSignatureCaching.ts, 329, 16))
            }
        }
        convertPropsToRegExp(mobileDetectRules.oss);
>convertPropsToRegExp : Symbol(convertPropsToRegExp, Decl(fixSignatureCaching.ts, 318, 5))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

        convertPropsToRegExp(mobileDetectRules.phones);
>convertPropsToRegExp : Symbol(convertPropsToRegExp, Decl(fixSignatureCaching.ts, 318, 5))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

        convertPropsToRegExp(mobileDetectRules.tablets);
>convertPropsToRegExp : Symbol(convertPropsToRegExp, Decl(fixSignatureCaching.ts, 318, 5))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

        convertPropsToRegExp(mobileDetectRules.uas);
>convertPropsToRegExp : Symbol(convertPropsToRegExp, Decl(fixSignatureCaching.ts, 318, 5))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

        convertPropsToRegExp(mobileDetectRules.utils);
>convertPropsToRegExp : Symbol(convertPropsToRegExp, Decl(fixSignatureCaching.ts, 318, 5))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

        // copy some patterns to oss0 which are tested first (see issue#15)
        mobileDetectRules.oss0 = {
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

            WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,
>WindowsPhoneOS : Symbol(WindowsPhoneOS, Decl(fixSignatureCaching.ts, 355, 34))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

            WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS
>WindowsMobileOS : Symbol(WindowsMobileOS, Decl(fixSignatureCaching.ts, 356, 65))
>mobileDetectRules : Symbol(mobileDetectRules, Decl(fixSignatureCaching.ts, 329, 47))

        };
    }());

    /**
     * Test userAgent string against a set of rules and find the first matched key.
     * @param {Object} rules (key is String, value is RegExp)
     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>
     * @private
     */
    impl.findMatch = function(rules, userAgent) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 368, 30))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 368, 36))

        for (var key in rules) {
>key : Symbol(key, Decl(fixSignatureCaching.ts, 369, 16))
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 368, 30))

            if (hasOwnProp.call(rules, key)) {
>hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 368, 30))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 369, 16))

                if (rules[key].test(userAgent)) {
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 368, 30))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 369, 16))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 368, 36))

                    return key;
>key : Symbol(key, Decl(fixSignatureCaching.ts, 369, 16))
                }
            }
        }
        return null;
    };

    /**
     * Test userAgent string against a set of rules and return an array of matched keys.
     * @param {Object} rules (key is String, value is RegExp)
     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>
     * @private
     */
    impl.findMatches = function(rules, userAgent) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 386, 32))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 386, 38))

        var result = [];
>result : Symbol(result, Decl(fixSignatureCaching.ts, 387, 11))

        for (var key in rules) {
>key : Symbol(key, Decl(fixSignatureCaching.ts, 388, 16))
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 386, 32))

            if (hasOwnProp.call(rules, key)) {
>hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 386, 32))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 388, 16))

                if (rules[key].test(userAgent)) {
>rules : Symbol(rules, Decl(fixSignatureCaching.ts, 386, 32))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 388, 16))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 386, 38))

                    result.push(key);
>result.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
>result : Symbol(result, Decl(fixSignatureCaching.ts, 387, 11))
>push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 388, 16))
                }
            }
        }
        return result;
>result : Symbol(result, Decl(fixSignatureCaching.ts, 387, 11))

    };

    /**
     * Check the version of the given property in the User-Agent.
     *
     * @param {String} propertyName
     * @param {String} userAgent
     * @return {String} version or <tt>null</tt> if version not found
     * @private
     */
    impl.getVersionStr = function (propertyName, userAgent) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>propertyName : Symbol(propertyName, Decl(fixSignatureCaching.ts, 406, 35))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 406, 48))

        var props = impl.mobileDetectRules.props, patterns, i, len, match;
>props : Symbol(props, Decl(fixSignatureCaching.ts, 407, 11))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>patterns : Symbol(patterns, Decl(fixSignatureCaching.ts, 407, 49))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 407, 59))
>len : Symbol(len, Decl(fixSignatureCaching.ts, 407, 62))
>match : Symbol(match, Decl(fixSignatureCaching.ts, 407, 67))

        if (hasOwnProp.call(props, propertyName)) {
>hasOwnProp.call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>hasOwnProp : Symbol(hasOwnProp, Decl(fixSignatureCaching.ts, 289, 7))
>call : Symbol(Function.call, Decl(lib.es5.d.ts, --, --))
>props : Symbol(props, Decl(fixSignatureCaching.ts, 407, 11))
>propertyName : Symbol(propertyName, Decl(fixSignatureCaching.ts, 406, 35))

            patterns = props[propertyName];
>patterns : Symbol(patterns, Decl(fixSignatureCaching.ts, 407, 49))
>props : Symbol(props, Decl(fixSignatureCaching.ts, 407, 11))
>propertyName : Symbol(propertyName, Decl(fixSignatureCaching.ts, 406, 35))

            len = patterns.length;
>len : Symbol(len, Decl(fixSignatureCaching.ts, 407, 62))
>patterns : Symbol(patterns, Decl(fixSignatureCaching.ts, 407, 49))

            for (i = 0; i < len; ++i) {
>i : Symbol(i, Decl(fixSignatureCaching.ts, 407, 59))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 407, 59))
>len : Symbol(len, Decl(fixSignatureCaching.ts, 407, 62))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 407, 59))

                match = patterns[i].exec(userAgent);
>match : Symbol(match, Decl(fixSignatureCaching.ts, 407, 67))
>patterns : Symbol(patterns, Decl(fixSignatureCaching.ts, 407, 49))
>i : Symbol(i, Decl(fixSignatureCaching.ts, 407, 59))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 406, 48))

                if (match !== null) {
>match : Symbol(match, Decl(fixSignatureCaching.ts, 407, 67))

                    return match[1];
>match : Symbol(match, Decl(fixSignatureCaching.ts, 407, 67))
                }
            }
        }
        return null;
    };

    /**
     * Check the version of the given property in the User-Agent.
     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
     *
     * @param {String} propertyName
     * @param {String} userAgent
     * @return {Number} version or <tt>NaN</tt> if version not found
     * @private
     */
    impl.getVersion = function (propertyName, userAgent) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>propertyName : Symbol(propertyName, Decl(fixSignatureCaching.ts, 430, 32))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 430, 45))

        var version = impl.getVersionStr(propertyName, userAgent);
>version : Symbol(version, Decl(fixSignatureCaching.ts, 431, 11))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>propertyName : Symbol(propertyName, Decl(fixSignatureCaching.ts, 430, 32))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 430, 45))

        return version ? impl.prepareVersionNo(version) : NaN;
>version : Symbol(version, Decl(fixSignatureCaching.ts, 431, 11))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>version : Symbol(version, Decl(fixSignatureCaching.ts, 431, 11))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

    };

    /**
     * Prepare the version number.
     *
     * @param {String} version
     * @return {Number} the version number as a floating number
     * @private
     */
    impl.prepareVersionNo = function (version) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>version : Symbol(version, Decl(fixSignatureCaching.ts, 442, 38))

        var numbers;
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))

        numbers = version.split(/[a-z._ \/\-]/i);
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))
>version : Symbol(version, Decl(fixSignatureCaching.ts, 442, 38))

        if (numbers.length === 1) {
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))

            version = numbers[0];
>version : Symbol(version, Decl(fixSignatureCaching.ts, 442, 38))
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))
        }
        if (numbers.length > 1) {
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))

            version = numbers[0] + '.';
>version : Symbol(version, Decl(fixSignatureCaching.ts, 442, 38))
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))

            numbers.shift();
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))

            version += numbers.join('');
>version : Symbol(version, Decl(fixSignatureCaching.ts, 442, 38))
>numbers : Symbol(numbers, Decl(fixSignatureCaching.ts, 443, 11))
        }
        return Number(version);
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>version : Symbol(version, Decl(fixSignatureCaching.ts, 442, 38))

    };

    impl.isMobileFallback = function (userAgent) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 457, 38))

        return impl.detectMobileBrowsers.fullPattern.test(userAgent) ||
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 457, 38))

            impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0,4));
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 457, 38))

    };

    impl.isTabletFallback = function (userAgent) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 462, 38))

        return impl.detectMobileBrowsers.tabletPattern.test(userAgent);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 462, 38))

    };

    impl.prepareDetectionCache = function (cache, userAgent, maxPhoneWidth) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 466, 49))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 466, 60))

        if (cache.mobile !== undefined) {
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

            return;
        }
        var phone, tablet, phoneSized;
>phone : Symbol(phone, Decl(fixSignatureCaching.ts, 470, 11))
>tablet : Symbol(tablet, Decl(fixSignatureCaching.ts, 470, 18))
>phoneSized : Symbol(phoneSized, Decl(fixSignatureCaching.ts, 470, 26))

        // first check for stronger tablet rules, then phone (see issue#5)
        tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);
>tablet : Symbol(tablet, Decl(fixSignatureCaching.ts, 470, 18))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 466, 49))

        if (tablet) {
>tablet : Symbol(tablet, Decl(fixSignatureCaching.ts, 470, 18))

            cache.mobile = cache.tablet = tablet;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>tablet : Symbol(tablet, Decl(fixSignatureCaching.ts, 470, 18))

            cache.phone = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))

            return; // unambiguously identified as tablet
        }

        phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);
>phone : Symbol(phone, Decl(fixSignatureCaching.ts, 470, 11))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 466, 49))

        if (phone) {
>phone : Symbol(phone, Decl(fixSignatureCaching.ts, 470, 11))

            cache.mobile = cache.phone = phone;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>phone : Symbol(phone, Decl(fixSignatureCaching.ts, 470, 11))

            cache.tablet = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))

            return; // unambiguously identified as phone
        }

        // our rules haven't found a match -> try more general fallback rules
        if (impl.isMobileFallback(userAgent)) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 466, 49))

            phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);
>phoneSized : Symbol(phoneSized, Decl(fixSignatureCaching.ts, 470, 26))
>MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 466, 60))

            if (phoneSized === undefined) {
>phoneSized : Symbol(phoneSized, Decl(fixSignatureCaching.ts, 470, 26))
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

                cache.mobile = impl.FALLBACK_MOBILE;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

                cache.tablet = cache.phone = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))

            } else if (phoneSized) {
>phoneSized : Symbol(phoneSized, Decl(fixSignatureCaching.ts, 470, 26))

                cache.mobile = cache.phone = impl.FALLBACK_PHONE;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

                cache.tablet = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))

            } else {
                cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

                cache.phone = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
            }
        } else if (impl.isTabletFallback(userAgent)) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 466, 49))

            cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

            cache.phone = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))

        } else {
            // not mobile at all!
            cache.mobile = cache.tablet = cache.phone = null;
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
>cache : Symbol(cache, Decl(fixSignatureCaching.ts, 466, 43))
        }
    };

    // t is a reference to a MobileDetect instance
    impl.mobileGrade = function (t) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

        // impl note:
        // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.
        // When changes are made in Mobile_Detect.php, copy this method and replace:
        //     $this-> / t.
        //     self::MOBILE_GRADE_(.) / '$1'
        //     , self::VERSION_TYPE_FLOAT / (nothing)
        //     isIOS() / os('iOS')
        //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE
        var $isMobile = t.mobile() !== null;
>$isMobile : Symbol($isMobile, Decl(fixSignatureCaching.ts, 519, 11))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

        if (
            // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)
            t.os('iOS') && t.version('iPad')>=4.3 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            t.os('iOS') && t.version('iPhone')>=3.1 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            t.os('iOS') && t.version('iPod')>=3.1 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)
            // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM
            // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices
            // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7
            ( t.version('Android')>2.1 && t.is('Webkit') ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800
            t.version('Windows Phone OS')>=7.0 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Blackberry 7 - Tested on BlackBerry Torch 9810
            // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670
            t.is('BlackBerry') && t.version('BlackBerry')>=6.0 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Blackberry Playbook (1.0-2.0) - Tested on PlayBook
            t.match('Playbook.*Tablet') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)
            ( t.version('webOS')>=1.4 && t.match('Palm|Pre|Pixi') ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Palm WebOS 3.0  - Tested on HP TouchPad
            t.match('hp.*TouchPad') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Firefox Mobile (12 Beta) - Tested on Android 2.3 device
            ( t.is('Firefox') && t.version('Firefox')>=12 ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Chrome for Android - Tested on Android 4.0, 4.1 device
            ( t.is('Chrome') && t.is('AndroidOS') && t.version('Android')>=4.0 ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Skyfire 4.1 - Tested on Android 2.3 device
            ( t.is('Skyfire') && t.version('Skyfire')>=4.1 && t.is('AndroidOS') && t.version('Android')>=2.3 ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Opera Mobile 11.5-12: Tested on Android 2.3
            ( t.is('Opera') && t.version('Opera Mobi')>11 && t.is('AndroidOS') ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Meego 1.2 - Tested on Nokia 950 and N9
            t.is('MeeGoOS') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Tizen (pre-release) - Tested on early hardware
            t.is('Tizen') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser
            // @todo: more tests here!
            t.is('Dolfin') && t.version('Bada')>=2.0 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // UC Browser - Tested on Android 2.3 device
            ( (t.is('UC Browser') || t.is('Dolfin')) && t.version('Android')>=2.3 ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each
            ( t.match('Kindle Fire') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

                t.is('Kindle') && t.version('Kindle')>=3.0 ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet
            t.is('AndroidOS') && t.is('NookTablet') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7
            t.version('Chrome')>=11 && !$isMobile ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>$isMobile : Symbol($isMobile, Decl(fixSignatureCaching.ts, 519, 11))

            // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7
            t.version('Safari')>=5.0 && !$isMobile ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>$isMobile : Symbol($isMobile, Decl(fixSignatureCaching.ts, 519, 11))

            // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7
            t.version('Firefox')>=4.0 && !$isMobile ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>$isMobile : Symbol($isMobile, Decl(fixSignatureCaching.ts, 519, 11))

            // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7
            t.version('MSIE')>=7.0 && !$isMobile ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>$isMobile : Symbol($isMobile, Decl(fixSignatureCaching.ts, 519, 11))

            // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7
            // @reference: http://my.opera.com/community/openweb/idopera/
            t.version('Opera')>=10 && !$isMobile
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>$isMobile : Symbol($isMobile, Decl(fixSignatureCaching.ts, 519, 11))

            ){
            return 'A';
        }

        if (
            t.os('iOS') && t.version('iPad')<4.3 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            t.os('iOS') && t.version('iPhone')<3.1 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            t.os('iOS') && t.version('iPod')<3.1 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770
            t.is('Blackberry') && t.version('BlackBerry')>=5 && t.version('BlackBerry')<6 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3
            ( t.version('Opera Mini')>=5.0 && t.version('Opera Mini')<=6.5 &&
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

                (t.version('Android')>=2.3 || t.is('iOS')) ) ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)
            t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // @todo: report this (tested on Nokia N71)
            t.version('Opera Mobi')>=11 && t.is('SymbianOS')
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            ){
            return 'B';
        }

        if (
        // Blackberry 4.x - Tested on the Curve 8330
            t.version('BlackBerry')<5.0 ||
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)
            t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile')<=5.2
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))
>t : Symbol(t, Decl(fixSignatureCaching.ts, 510, 33))

            ){
            return 'C';
        }

        //All older smartphone platforms and featurephones - Any device that doesn't support media queries
        //will receive the basic, C grade experience.
        return 'C';
    };

    impl.detectOS = function (ua) {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>ua : Symbol(ua, Decl(fixSignatureCaching.ts, 635, 30))

        return impl.findMatch(impl.mobileDetectRules.oss0, ua) ||
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>ua : Symbol(ua, Decl(fixSignatureCaching.ts, 635, 30))

            impl.findMatch(impl.mobileDetectRules.oss, ua);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>ua : Symbol(ua, Decl(fixSignatureCaching.ts, 635, 30))

    };

    impl.getDeviceSmallerSide = function () {
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

        return window.screen.width < window.screen.height ?
>window.screen.width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
>window.screen.height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))
>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))

            window.screen.width :
>window.screen.width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))
>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>width : Symbol(Screen.width, Decl(lib.dom.d.ts, --, --))

            window.screen.height;
>window.screen.height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))
>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>height : Symbol(Screen.height, Decl(lib.dom.d.ts, --, --))

    };

    /**
     * Constructor for MobileDetect object.
     * <br>
     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>
     * <div style="background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px">
     *     <strong>Find information how to download and install:</strong>
     *     <a href="https://github.com/hgoebl/mobile-detect.js/">github.com/hgoebl/mobile-detect.js/</a>
     * </div>
     *
     * @example <pre>
     *     var md = new MobileDetect(window.navigator.userAgent);
     *     if (md.mobile()) {
     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';
     *     }
     * </pre>
     *
     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']
     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum
     *        width of smallest device side (in logical "CSS" pixels) until a device detected as mobile will be handled
     *        as phone.
     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>
     *        See <a href="http://developer.android.com/guide/practices/screens_support.html">Declaring Tablet Layouts
     *        for Android</a>.<br>
     *        If you provide a value < 0, then this "fuzzy" check is disabled.
     * @constructor
     * @global
     */
    function MobileDetect(userAgent, maxPhoneWidth) {
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 673, 26))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 673, 36))

        this.ua = userAgent || '';
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 673, 26))

        this._cache = {};
        //600dp is typical 7" tablet minimum width
        this.maxPhoneWidth = maxPhoneWidth || 600;
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 673, 36))
    }

    MobileDetect.prototype = {
>MobileDetect.prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))

        constructor: MobileDetect,
>constructor : Symbol(constructor, Decl(fixSignatureCaching.ts, 680, 30))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))

        /**
         * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.
         * <br>
         * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>
         * <br>
         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
         * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or
         * <code>UnknownMobile</code> is returned.<br>
         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
         * <br>
         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
         * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>
         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
         * <br>
         * In most cases you will use the return value just as a boolean.
         *
         * @returns {String} the key for the phone family or tablet family, e.g. "Nexus".
         * @function MobileDetect#mobile
         */
        mobile: function () {
>mobile : Symbol(mobile, Decl(fixSignatureCaching.ts, 681, 34))

            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

            return this._cache.mobile;
        },

        /**
         * Returns the detected phone type/family string or <tt>null</tt>.
         * <br>
         * The returned tablet (family or producer) is one of following keys:<br>
         * <br><tt>iPhone, BlackBerry, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,
         * NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile, SimValley,
         * Wolfgang, Alcatel, Nintendo, Amoi, INQ, GenericPhone</tt><br>
         * <br>
         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
         * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>
         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
         * <br>
         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
         * will return <code>UnknownMobile</code>.<br>
         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
         * <br>
         * In most cases you will use the return value just as a boolean.
         *
         * @returns {String} the key of the phone family or producer, e.g. "iPhone"
         * @function MobileDetect#phone
         */
        phone: function () {
>phone : Symbol(phone, Decl(fixSignatureCaching.ts, 708, 10))

            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

            return this._cache.phone;
        },

        /**
         * Returns the detected tablet type/family string or <tt>null</tt>.
         * <br>
         * The returned tablet (family or producer) is one of following keys:<br>
         * <br><tt>iPad, NexusTablet, SamsungTablet, Kindle, SurfaceTablet, HPTablet, AsusTablet,
         * BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet, AcerTablet,
         * ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet, LenovoTablet,
         * DellTablet, YarvikTablet, MedionTablet, ArnovaTablet, IntensoTablet, IRUTablet,
         * MegafonTablet, EbodaTablet, AllViewTablet, ArchosTablet, AinolTablet,
         * NokiaLumiaTablet, SonyTablet, PhilipsTablet, CubeTablet, CobyTablet, MIDTablet,
         * MSITablet, SMiTTablet, RockChipTablet, FlyTablet, bqTablet, HuaweiTablet,
         * NecTablet, PantechTablet, BronchoTablet, VersusTablet, ZyncTablet,
         * PositivoTablet, NabiTablet, KoboTablet, DanewTablet, TexetTablet,
         * PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,
         * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,
         * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,
         * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,
         * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,
         * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,
         * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,
         * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,
         * OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet, OndaTablet,
         * JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet, LavaTablet,
         * AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MiTablet, NibiruTablet,
         * NexoTablet, LeaderTablet, UbislateTablet, PocketBookTablet, KocasoTablet, Hudl,
         * TelstraTablet, GenericTablet</tt><br>
         * <br>
         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
         * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>
         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
         * <br>
         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
         * will return <code>UnknownMobile</code>.<br>
         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
         * <br>
         * In most cases you will use the return value just as a boolean.
         *
         * @returns {String} the key of the tablet family or producer, e.g. "SamsungTablet"
         * @function MobileDetect#tablet
         */
        tablet: function () {
>tablet : Symbol(tablet, Decl(fixSignatureCaching.ts, 738, 10))

            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

            return this._cache.tablet;
        },

        /**
         * Returns the (first) detected user-agent string or <tt>null</tt>.
         * <br>
         * The returned user-agent is one of following keys:<br>
         * <br><tt>Vivaldi, Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark,
         * Blazer, Safari, Tizen, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser,
         * Puffin, Mercury, ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
         * <br>
         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
         * cases where a mobile device pretends to be more than one particular browser. You can get the
         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
         * providing one of the defined keys as first argument to {@link MobileDetect#is}.
         *
         * @returns {String} the key for the detected user-agent or <tt>null</tt>
         * @function MobileDetect#userAgent
         */
        userAgent: function () {
>userAgent : Symbol(userAgent, Decl(fixSignatureCaching.ts, 787, 10))

            if (this._cache.userAgent === undefined) {
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

                this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
            }
            return this._cache.userAgent;
        },

        /**
         * Returns all detected user-agent strings.
         * <br>
         * The array is empty or contains one or more of following keys:<br>
         * <br><tt>Vivaldi, Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark,
         * Blazer, Safari, Tizen, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser,
         * Puffin, Mercury, ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
         * <br>
         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
         * cases where a mobile device pretends to be more than one particular browser. You can get the
         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
         * providing one of the defined keys as first argument to {@link MobileDetect#is}.
         *
         * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>
         * @function MobileDetect#userAgents
         */
        userAgents: function () {
>userAgents : Symbol(userAgents, Decl(fixSignatureCaching.ts, 810, 10))

            if (this._cache.userAgents === undefined) {
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

                this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
            }
            return this._cache.userAgents;
        },

        /**
         * Returns the detected operating system string or <tt>null</tt>.
         * <br>
         * The operating system is one of following keys:<br>
         * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,
         * iOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>
         *
         * @returns {String} the key for the detected operating system.
         * @function MobileDetect#os
         */
        os: function () {
>os : Symbol(os, Decl(fixSignatureCaching.ts, 833, 10))

            if (this._cache.os === undefined) {
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

                this._cache.os = impl.detectOS(this.ua);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
            }
            return this._cache.os;
        },

        /**
         * Get the version (as Number) of the given property in the User-Agent.
         * <br>
         * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
         *
         * @param {String} key a key defining a thing which has a version.<br>
         *        You can use one of following keys:<br>
         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
         * Opera Mobi, UC Browser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
         * Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident, Presto, Goanna,
         * iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows Phone, Windows
         * CE, Windows NT, Symbian, webOS</tt><br>
         *
         * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.
         *          Be careful when comparing this value with '==' operator!
         * @function MobileDetect#version
         */
        version: function (key) {
>version : Symbol(version, Decl(fixSignatureCaching.ts, 850, 10))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 870, 27))

            return impl.getVersion(key, this.ua);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 870, 27))

        },

        /**
         * Get the version (as String) of the given property in the User-Agent.
         * <br>
         *
         * @param {String} key a key defining a thing which has a version.<br>
         *        You can use one of following keys:<br>
         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
         * Opera Mobi, UC Browser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
         * Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident, Presto, Goanna,
         * iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows Phone, Windows
         * CE, Windows NT, Symbian, webOS</tt><br>
         *
         * @returns {String} the "raw" version as String or <tt>null</tt> if User-Agent doesn't contain this version.
         *
         * @function MobileDetect#versionStr
         */
        versionStr: function (key) {
>versionStr : Symbol(versionStr, Decl(fixSignatureCaching.ts, 872, 10))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 891, 30))

            return impl.getVersionStr(key, this.ua);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 891, 30))

        },

        /**
         * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.
         *
         * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or
         *        tablet family.<br>
         *        For a complete list of possible values, see {@link MobileDetect#userAgent},
         *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>
         *        Additionally you have following keys:<br>
         * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>
         *
         * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,
         *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>
         * @function MobileDetect#is
         */
        is: function (key) {
>is : Symbol(is, Decl(fixSignatureCaching.ts, 893, 10))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 909, 22))

            return containsIC(this.userAgents(), key) ||
>containsIC : Symbol(containsIC, Decl(fixSignatureCaching.ts, 304, 5))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 909, 22))

                   equalIC(key, this.os()) ||
>equalIC : Symbol(equalIC, Decl(fixSignatureCaching.ts, 300, 24))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 909, 22))

                   equalIC(key, this.phone()) ||
>equalIC : Symbol(equalIC, Decl(fixSignatureCaching.ts, 300, 24))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 909, 22))

                   equalIC(key, this.tablet()) ||
>equalIC : Symbol(equalIC, Decl(fixSignatureCaching.ts, 300, 24))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 909, 22))

                   containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);
>containsIC : Symbol(containsIC, Decl(fixSignatureCaching.ts, 304, 5))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>key : Symbol(key, Decl(fixSignatureCaching.ts, 909, 22))

        },

        /**
         * Do a quick test against navigator::userAgent.
         *
         * @param {String|RegExp} pattern the pattern, either as String or RegExp
         *                        (a string will be converted to a case-insensitive RegExp).
         * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>
         * @function MobileDetect#match
         */
        match: function (pattern) {
>match : Symbol(match, Decl(fixSignatureCaching.ts, 915, 10))
>pattern : Symbol(pattern, Decl(fixSignatureCaching.ts, 925, 25))

            if (!(pattern instanceof RegExp)) {
>pattern : Symbol(pattern, Decl(fixSignatureCaching.ts, 925, 25))
>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

                pattern = new RegExp(pattern, 'i');
>pattern : Symbol(pattern, Decl(fixSignatureCaching.ts, 925, 25))
>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>pattern : Symbol(pattern, Decl(fixSignatureCaching.ts, 925, 25))
            }
            return pattern.test(this.ua);
>pattern : Symbol(pattern, Decl(fixSignatureCaching.ts, 925, 25))

        },

        /**
         * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.
         * <br>
         * Obviously this method makes sense in browser environments only (not for Node.js)!
         * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>
         *        The argument is optional and if not present or falsy, the value of the constructor is taken.
         * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>
         *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>
         *          Will always return <code>undefined</code> server-side.
         */
        isPhoneSized: function (maxPhoneWidth) {
>isPhoneSized : Symbol(isPhoneSized, Decl(fixSignatureCaching.ts, 930, 10))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 942, 32))

            return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);
>MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 942, 32))

        },

        /**
         * Returns the mobile grade ('A', 'B', 'C').
         *
         * @returns {String} one of the mobile grades ('A', 'B', 'C').
         * @function MobileDetect#mobileGrade
         */
        mobileGrade: function () {
>mobileGrade : Symbol(mobileGrade, Decl(fixSignatureCaching.ts, 944, 10))

            if (this._cache.grade === undefined) {
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))

                this._cache.grade = impl.mobileGrade(this);
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
            }
            return this._cache.grade;
        }
    };

    // environment-dependent
    if (typeof window !== 'undefined' && window.screen) {
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>window.screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>screen : Symbol(screen, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))

        MobileDetect.isPhoneSized = function (maxPhoneWidth) {
>MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 962, 46))

            return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 962, 46))
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 2, 18))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))
>maxPhoneWidth : Symbol(maxPhoneWidth, Decl(fixSignatureCaching.ts, 962, 46))

        };
    } else {
        MobileDetect.isPhoneSized = function () {};
>MobileDetect.isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>isPhoneSized : Symbol(MobileDetect.isPhoneSized, Decl(fixSignatureCaching.ts, 961, 57), Decl(fixSignatureCaching.ts, 965, 12))
    }

    // should not be replaced by a completely new object - just overwrite existing methods
    MobileDetect._impl = impl;
>MobileDetect._impl : Symbol(MobileDetect._impl, Decl(fixSignatureCaching.ts, 967, 5))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>_impl : Symbol(MobileDetect._impl, Decl(fixSignatureCaching.ts, 967, 5))
>impl : Symbol(impl, Decl(fixSignatureCaching.ts, 6, 7))

    MobileDetect.version = '1.3.3 2016-07-31';
>MobileDetect.version : Symbol(MobileDetect.version, Decl(fixSignatureCaching.ts, 970, 30))
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))
>version : Symbol(MobileDetect.version, Decl(fixSignatureCaching.ts, 970, 30))

    return MobileDetect;
>MobileDetect : Symbol(MobileDetect, Decl(fixSignatureCaching.ts, 644, 6))

}); // end of call of define()
})((function (undefined) {
>undefined : Symbol(undefined, Decl(fixSignatureCaching.ts, 976, 14))

    if (typeof module !== 'undefined' && module.exports) {
        return function (factory) { module.exports = factory(); };
>factory : Symbol(factory, Decl(fixSignatureCaching.ts, 978, 25))
>factory : Symbol(factory, Decl(fixSignatureCaching.ts, 978, 25))

    } else if (typeof define === 'function' && define.amd) {
        return define;
    } else if (typeof window !== 'undefined') {
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))

        return function (factory) { window.MobileDetect = factory(); };
>factory : Symbol(factory, Decl(fixSignatureCaching.ts, 982, 25))
>window : Symbol(window, Decl(lib.dom.d.ts, --, --))
>factory : Symbol(factory, Decl(fixSignatureCaching.ts, 982, 25))

    } else {
        // please file a bug if you get this error!
        throw new Error('unknown environment');
>Error : Symbol(Error, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
    }
})());

