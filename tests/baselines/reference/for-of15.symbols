//// [tests/cases/conformance/es6/for-ofStatements/for-of15.ts] ////

=== for-of15.ts ===
class MyStringIterator {
>MyStringIterator : Symbol(MyStringIterator, Decl(for-of15.ts, 0, 0))

    next() {
>next : Symbol(MyStringIterator.next, Decl(for-of15.ts, 0, 24))

        return "";
    }
    [Symbol.iterator]() {
>[Symbol.iterator] : Symbol(MyStringIterator[Symbol.iterator], Decl(for-of15.ts, 3, 5))
>Symbol.iterator : Symbol(SymbolConstructor.iterator, Decl(lib.es2015.iterable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>iterator : Symbol(SymbolConstructor.iterator, Decl(lib.es2015.iterable.d.ts, --, --))

        return this;
>this : Symbol(MyStringIterator, Decl(for-of15.ts, 0, 0))
    }
}

var v: string;
>v : Symbol(v, Decl(for-of15.ts, 9, 3))

for (v of new MyStringIterator) { } // Should fail
>v : Symbol(v, Decl(for-of15.ts, 9, 3))
>MyStringIterator : Symbol(MyStringIterator, Decl(for-of15.ts, 0, 0))

