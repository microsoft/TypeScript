//// [tests/cases/compiler/functionOverloadsRecursiveGenericReturnType.ts] ////

=== functionOverloadsRecursiveGenericReturnType.ts ===
class B<V>{
>B : B<V>
>  : ^^^^

    private id: V;
>id : V
>   : ^
}

class A<U>{
>A : A<U>
>  : ^^^^

    GetEnumerator: () => B<U>;
>GetEnumerator : () => B<U>
>              : ^^^^^^    
}

function Choice<T>(args: T[]): A<T>;
>Choice : { <T>(args: T[]): A<T>; <T_1>(...v_args: T_1[]): A<T_1>; }
>       : ^^^ ^^    ^^   ^^^    ^^^^^^^^^^^      ^^     ^^^      ^^^
>args : T[]
>     : ^^^

function Choice<T>(...v_args: T[]): A<T>;
>Choice : { <T_1>(args: T_1[]): A<T_1>; <T>(...v_args: T[]): A<T>; }
>       : ^^^^^^^^    ^^     ^^^      ^^^ ^^^^^      ^^   ^^^    ^^^
>v_args : T[]
>       : ^^^

function Choice<T>(...v_args: any[]): A<T>{
>Choice : { <T_1>(args: T_1[]): A<T_1>; <T_1>(...v_args: T_1[]): A<T_1>; }
>       : ^^^^^^^^    ^^     ^^^      ^^^^^^^^^^^      ^^     ^^^      ^^^
>v_args : any[]
>       : ^^^^^

    return new A<T>();
>new A<T>() : A<T>
>           : ^^^^
>A : typeof A
>  : ^^^^^^^^
}

