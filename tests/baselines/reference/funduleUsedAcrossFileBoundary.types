//// [tests/cases/compiler/funduleUsedAcrossFileBoundary.ts] ////

=== funduleUsedAcrossFileBoundary_file1.ts ===
declare function Q<T>(value: T): string;
>Q : typeof Q
>  : ^^^^^^^^
>value : T
>      : ^

declare module Q {
>Q : typeof Q
>  : ^^^^^^^^

    interface Promise<T> {
        foo: string;
>foo : string
>    : ^^^^^^
    }
    export function defer<T>(): string;
>defer : <T>() => string
>      : ^ ^^^^^^^      
}

=== funduleUsedAcrossFileBoundary_file2.ts ===
function promiseWithCancellation<T>(promise: Q.Promise<T>) {
>promiseWithCancellation : <T>(promise: Q.Promise<T>) => void
>                        : ^ ^^       ^^            ^^^^^^^^^
>promise : Q.Promise<T>
>        : ^^^^^^^^^^^^
>Q : any
>  : ^^^

    var deferred = Q.defer<T>(); // used to be an error
>deferred : string
>         : ^^^^^^
>Q.defer<T>() : string
>             : ^^^^^^
>Q.defer : <T_1>() => string
>        : ^^^^^^^^^^^      
>Q : typeof Q
>  : ^^^^^^^^
>defer : <T_1>() => string
>      : ^^^^^^^^^^^      
}
