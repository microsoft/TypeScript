//// [tests/cases/compiler/genericBaseClassLiteralProperty.ts] ////

=== genericBaseClassLiteralProperty.ts ===
class BaseClass<T> {
>BaseClass : BaseClass<T>
>          : ^^^^^^^^^^^^

    public _getValue1: { (): T; };
>_getValue1 : () => T
>           : ^^^^^^ 

    public _getValue2: () => T;
>_getValue2 : () => T
>           : ^^^^^^ 
}

class SubClass extends BaseClass<number> {
>SubClass : SubClass
>         : ^^^^^^^^
>BaseClass : BaseClass<number>
>          : ^^^^^^^^^^^^^^^^^

    public Error(): void {
>Error : () => void
>      : ^^^^^^    

        var x : number = this._getValue1();
>x : number
>  : ^^^^^^
>this._getValue1() : number
>                  : ^^^^^^
>this._getValue1 : () => number
>                : ^^^^^^^^^^^^
>this : this
>     : ^^^^
>_getValue1 : () => number
>           : ^^^^^^^^^^^^

        var y : number = this._getValue2();
>y : number
>  : ^^^^^^
>this._getValue2() : number
>                  : ^^^^^^
>this._getValue2 : () => number
>                : ^^^^^^^^^^^^
>this : this
>     : ^^^^
>_getValue2 : () => number
>           : ^^^^^^^^^^^^
    }
}
