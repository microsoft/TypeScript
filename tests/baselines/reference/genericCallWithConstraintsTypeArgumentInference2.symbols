//// [tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithConstraintsTypeArgumentInference2.ts] ////

=== genericCallWithConstraintsTypeArgumentInference2.ts ===
// Generic call with parameters of T and U, U extends T, no parameter of type U

function foo<T, U extends T>(t: T) {
>foo : Symbol(foo, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 0, 0))
>T : Symbol(T, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 2, 13))
>U : Symbol(U, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 2, 15))
>T : Symbol(T, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 2, 13))
>t : Symbol(t, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 2, 29))
>T : Symbol(T, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 2, 13))

    var u: U;
>u : Symbol(u, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 3, 7))
>U : Symbol(U, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 2, 15))

    return u;
>u : Symbol(u, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 3, 7))
}

var r = foo(1); // ok
>r : Symbol(r, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 7, 3))
>foo : Symbol(foo, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 0, 0))

var r2 = foo(null); // {}
>r2 : Symbol(r2, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 8, 3))
>foo : Symbol(foo, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 0, 0))

var r3 = foo(new Object()); // {}
>r3 : Symbol(r3, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 9, 3))
>foo : Symbol(foo, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 0, 0))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

var r4 = foo<Date, Date>(1); // error
>r4 : Symbol(r4, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 10, 3))
>foo : Symbol(foo, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 0, 0))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

var r5 = foo<Date, Date>(new Date()); // no error
>r5 : Symbol(r5, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 11, 3))
>foo : Symbol(foo, Decl(genericCallWithConstraintsTypeArgumentInference2.ts, 0, 0))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

