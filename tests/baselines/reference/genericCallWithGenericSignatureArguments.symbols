//// [tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithGenericSignatureArguments.ts] ////

=== genericCallWithGenericSignatureArguments.ts ===
// When a function expression is inferentially typed (section 4.9.3) and a type assigned to a parameter in that expression references type parameters for which inferences are being made, 
// the corresponding inferred type arguments to become fixed and no further candidate inferences are made for them.

function foo<T>(a: (x: T) => T, b: (x: T) => T) {
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 3, 16))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 3, 20))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 3, 31))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 3, 36))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))

    var r: (x: T) => T;
>r : Symbol(r, Decl(genericCallWithGenericSignatureArguments.ts, 4, 7))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 4, 12))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 3, 13))

    return r;
>r : Symbol(r, Decl(genericCallWithGenericSignatureArguments.ts, 4, 7))
}

//var r1 = foo((x: number) => 1, (x: string) => ''); // error
var r1b = foo((x) => 1, (x) => ''); // {} => {}
>r1b : Symbol(r1b, Decl(genericCallWithGenericSignatureArguments.ts, 9, 3))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 9, 15))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 9, 25))

var r2 = foo((x: Object) => null, (x: string) => ''); // Object => Object
>r2 : Symbol(r2, Decl(genericCallWithGenericSignatureArguments.ts, 10, 3))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 10, 14))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 10, 35))

var r3 = foo((x: number) => 1, (x: Object) => null); // number => number
>r3 : Symbol(r3, Decl(genericCallWithGenericSignatureArguments.ts, 11, 3))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 11, 14))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 11, 32))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

var r3ii = foo((x: number) => 1, (x: number) => 1); // number => number
>r3ii : Symbol(r3ii, Decl(genericCallWithGenericSignatureArguments.ts, 12, 3))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 12, 16))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 12, 34))

var a: { x: number; y?: number; };
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 14, 3))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 14, 8))
>y : Symbol(y, Decl(genericCallWithGenericSignatureArguments.ts, 14, 19))

var b: { x: number; z?: number; };
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 15, 3))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 15, 8))
>z : Symbol(z, Decl(genericCallWithGenericSignatureArguments.ts, 15, 19))

var r4 = foo((x: typeof a) => a, (x: typeof b) => b); // typeof a => typeof a
>r4 : Symbol(r4, Decl(genericCallWithGenericSignatureArguments.ts, 17, 3))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 17, 14))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 14, 3))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 14, 3))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 17, 34))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 15, 3))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 15, 3))

var r5 = foo((x: typeof b) => b, (x: typeof a) => a); // typeof b => typeof b
>r5 : Symbol(r5, Decl(genericCallWithGenericSignatureArguments.ts, 18, 3))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 18, 14))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 15, 3))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 15, 3))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 18, 34))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 14, 3))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 14, 3))

function other<T>(x: T) {
>other : Symbol(other, Decl(genericCallWithGenericSignatureArguments.ts, 18, 53))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 20, 15))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 20, 18))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 20, 15))

    var r6 = foo((a: T) => a, (b: T) => b); // T => T
>r6 : Symbol(r6, Decl(genericCallWithGenericSignatureArguments.ts, 21, 7))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 21, 18))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 20, 15))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 21, 18))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 21, 31))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 20, 15))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 21, 31))

    var r6b = foo((a) => a, (b) => b); // {} => {}
>r6b : Symbol(r6b, Decl(genericCallWithGenericSignatureArguments.ts, 22, 7))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 22, 19))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 22, 19))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 22, 29))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 22, 29))
}

function other2<T extends Date>(x: T) {
>other2 : Symbol(other2, Decl(genericCallWithGenericSignatureArguments.ts, 23, 1))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 25, 16))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 25, 32))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 25, 16))

    var r7 = foo((a: T) => a, (b: T) => b); // T => T
>r7 : Symbol(r7, Decl(genericCallWithGenericSignatureArguments.ts, 26, 7))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 26, 18))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 25, 16))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 26, 18))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 26, 31))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 25, 16))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 26, 31))

    var r7b = foo((a) => a, (b) => b); // {} => {}
>r7b : Symbol(r7b, Decl(genericCallWithGenericSignatureArguments.ts, 27, 7))
>foo : Symbol(foo, Decl(genericCallWithGenericSignatureArguments.ts, 0, 0))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 27, 19))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 27, 19))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 27, 29))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 27, 29))

    var r8 = r7(null);
>r8 : Symbol(r8, Decl(genericCallWithGenericSignatureArguments.ts, 28, 7))
>r7 : Symbol(r7, Decl(genericCallWithGenericSignatureArguments.ts, 26, 7))

    // BUG 835518
    //var r9 = r7(new Date());
}


function foo2<T extends Date>(a: (x: T) => T, b: (x: T) => T) {
>foo2 : Symbol(foo2, Decl(genericCallWithGenericSignatureArguments.ts, 31, 1))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 34, 30))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 34, 34))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 34, 45))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 34, 50))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))

    var r: (x: T) => T;
>r : Symbol(r, Decl(genericCallWithGenericSignatureArguments.ts, 35, 7))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 35, 12))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 34, 14))

    return r;
>r : Symbol(r, Decl(genericCallWithGenericSignatureArguments.ts, 35, 7))
}

function other3<T extends RegExp>(x: T) {
>other3 : Symbol(other3, Decl(genericCallWithGenericSignatureArguments.ts, 37, 1))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 39, 16))
>RegExp : Symbol(RegExp, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>x : Symbol(x, Decl(genericCallWithGenericSignatureArguments.ts, 39, 34))
>T : Symbol(T, Decl(genericCallWithGenericSignatureArguments.ts, 39, 16))

    var r8 = foo2((a: Date) => a, (b: Date) => b); // Date => Date
>r8 : Symbol(r8, Decl(genericCallWithGenericSignatureArguments.ts, 40, 7))
>foo2 : Symbol(foo2, Decl(genericCallWithGenericSignatureArguments.ts, 31, 1))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 40, 19))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>a : Symbol(a, Decl(genericCallWithGenericSignatureArguments.ts, 40, 19))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 40, 35))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>b : Symbol(b, Decl(genericCallWithGenericSignatureArguments.ts, 40, 35))
}
