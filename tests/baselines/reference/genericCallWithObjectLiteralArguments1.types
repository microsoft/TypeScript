//// [tests/cases/compiler/genericCallWithObjectLiteralArguments1.ts] ////

=== genericCallWithObjectLiteralArguments1.ts ===
function foo<T>(n: { x: T; y: T }, m: T) { return m; }
>foo : <T>(n: { x: T; y: T; }, m: T) => T
>    : ^ ^^ ^^               ^^ ^^ ^^^^^^
>n : { x: T; y: T; }
>  : ^^^^^ ^^^^^ ^^^
>x : T
>  : ^
>y : T
>  : ^
>m : T
>  : ^
>m : T
>  : ^

// these are all errors
var x = foo({ x: 3, y: "" }, 4);
>x : number
>  : ^^^^^^
>foo({ x: 3, y: "" }, 4) : number
>                        : ^^^^^^
>foo : <T>(n: { x: T; y: T; }, m: T) => T
>    : ^ ^^ ^^               ^^ ^^ ^^^^^^
>{ x: 3, y: "" } : { x: number; y: string; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>3 : 3
>  : ^
>y : string
>  : ^^^^^^
>"" : ""
>   : ^^
>4 : 4
>  : ^

var x2 = foo<number>({ x: 3, y: "" }, 4); 
>x2 : number
>   : ^^^^^^
>foo<number>({ x: 3, y: "" }, 4) : number
>                                : ^^^^^^
>foo : <T>(n: { x: T; y: T; }, m: T) => T
>    : ^ ^^ ^^               ^^ ^^ ^^^^^^
>{ x: 3, y: "" } : { x: number; y: string; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>3 : 3
>  : ^
>y : string
>  : ^^^^^^
>"" : ""
>   : ^^
>4 : 4
>  : ^

var x3 = foo<string>({ x: 3, y: "" }, 4); 
>x3 : string
>   : ^^^^^^
>foo<string>({ x: 3, y: "" }, 4) : string
>                                : ^^^^^^
>foo : <T>(n: { x: T; y: T; }, m: T) => T
>    : ^ ^^ ^^               ^^ ^^ ^^^^^^
>{ x: 3, y: "" } : { x: number; y: string; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>3 : 3
>  : ^
>y : string
>  : ^^^^^^
>"" : ""
>   : ^^
>4 : 4
>  : ^

var x4 = foo<number>({ x: "", y: 4 }, "");
>x4 : number
>   : ^^^^^^
>foo<number>({ x: "", y: 4 }, "") : number
>                                 : ^^^^^^
>foo : <T>(n: { x: T; y: T; }, m: T) => T
>    : ^ ^^ ^^               ^^ ^^ ^^^^^^
>{ x: "", y: 4 } : { x: string; y: number; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^
>"" : ""
>   : ^^
>y : number
>  : ^^^^^^
>4 : 4
>  : ^
>"" : ""
>   : ^^

var x5 = foo<string>({ x: "", y: 4 }, "");
>x5 : string
>   : ^^^^^^
>foo<string>({ x: "", y: 4 }, "") : string
>                                 : ^^^^^^
>foo : <T>(n: { x: T; y: T; }, m: T) => T
>    : ^ ^^ ^^               ^^ ^^ ^^^^^^
>{ x: "", y: 4 } : { x: string; y: number; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^
>"" : ""
>   : ^^
>y : number
>  : ^^^^^^
>4 : 4
>  : ^
>"" : ""
>   : ^^

