genericClassWithFunctionTypedMemberArguments.ts(4,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
genericClassWithFunctionTypedMemberArguments.ts(27,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
genericClassWithFunctionTypedMemberArguments.ts(57,29): error TS2345: Argument of type '(x: T) => string' is not assignable to parameter of type '(a: 1) => string'.
  Types of parameters 'x' and 'a' are incompatible.
    Type 'number' is not assignable to type 'T'.
      'T' could be instantiated with an arbitrary type which could be unrelated to 'number'.
genericClassWithFunctionTypedMemberArguments.ts(60,30): error TS2345: Argument of type '(x: T) => string' is not assignable to parameter of type '(a: 1) => string'.
  Types of parameters 'x' and 'a' are incompatible.
    Type 'number' is not assignable to type 'T'.
      'T' could be instantiated with an arbitrary type which could be unrelated to 'number'.
genericClassWithFunctionTypedMemberArguments.ts(61,31): error TS2345: Argument of type '(x: T) => string' is not assignable to parameter of type '(a: 1) => string'.
  Types of parameters 'x' and 'a' are incompatible.
    Type 'number' is not assignable to type 'T'.
      'T' could be instantiated with an arbitrary type which could be unrelated to 'number'.
genericClassWithFunctionTypedMemberArguments.ts(62,30): error TS2345: Argument of type '(a: number) => string' is not assignable to parameter of type '(a: number) => 1'.
  Type 'string' is not assignable to type '1'.


==== genericClassWithFunctionTypedMemberArguments.ts (6 errors) ====
    // Generic functions used as arguments for function typed parameters are not used to make inferences from
    // Using function arguments, no errors expected
    
    module ImmediatelyFix {
           ~~~~~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        class C<T> {
            foo<T>(x: (a: T) => T) {
                return x(null);
            }
        }
    
        var c = new C<number>();
        var r = c.foo(<U>(x: U) => ''); // {}
        var r2 = c.foo<string>(<U>(x: U) => ''); // string 
        var r3 = c.foo(x => ''); // {}
    
        class C2<T> {
            foo(x: (a: T) => T) {
                return x(null);
            }
        }
    
        var c2 = new C2<number>();
        var ra = c2.foo(<U>(x: U) => 1); // number
        var r3a = c2.foo(x => 1); // number
    }
    
    module WithCandidates {
           ~~~~~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        class C<T> {
            foo2<T, U>(x: T, cb: (a: T) => U) {
                return cb(x);
            }
        }
    
        var c: C<number>;
        var r4 = c.foo2(1, function <Z>(a: Z) { return '' }); // string, contextual signature instantiation is applied to generic functions
        var r5 = c.foo2(1, (a) => ''); // string
        var r6 = c.foo2<string, number>('', <Z>(a: Z) => 1); // number
    
        class C2<T, U> {
            foo3(x: T, cb: (a: T) => U, y: U) {
                return cb(x);
            }
        }
    
        var c2: C2<number, string>;
        var r7 = c2.foo3(1, <Z>(a: Z) => '', ''); // string
        var r8 = c2.foo3(1, function (a) { return '' }, ''); // string
    
        class C3<T, U> {
            foo3<T,U>(x: T, cb: (a: T) => U, y: U) {
                return cb(x);
            }
        }
        var c3: C3<number, string>;
    
        function other<T, U>(t: T, u: U) {
            var r10 = c.foo2(1, (x: T) => ''); // error
                                ~~~~~~~~~~~~
!!! error TS2345: Argument of type '(x: T) => string' is not assignable to parameter of type '(a: 1) => string'.
!!! error TS2345:   Types of parameters 'x' and 'a' are incompatible.
!!! error TS2345:     Type 'number' is not assignable to type 'T'.
!!! error TS2345:       'T' could be instantiated with an arbitrary type which could be unrelated to 'number'.
            var r10 = c.foo2(1, (x) => ''); // string
    
            var r11 = c3.foo3(1, (x: T) => '', ''); // error
                                 ~~~~~~~~~~~~
!!! error TS2345: Argument of type '(x: T) => string' is not assignable to parameter of type '(a: 1) => string'.
!!! error TS2345:   Types of parameters 'x' and 'a' are incompatible.
!!! error TS2345:     Type 'number' is not assignable to type 'T'.
!!! error TS2345:       'T' could be instantiated with an arbitrary type which could be unrelated to 'number'.
            var r11b = c3.foo3(1, (x: T) => '', 1); // error
                                  ~~~~~~~~~~~~
!!! error TS2345: Argument of type '(x: T) => string' is not assignable to parameter of type '(a: 1) => string'.
!!! error TS2345:   Types of parameters 'x' and 'a' are incompatible.
!!! error TS2345:     Type 'number' is not assignable to type 'T'.
!!! error TS2345:       'T' could be instantiated with an arbitrary type which could be unrelated to 'number'.
            var r12 = c3.foo3(1, function (a) { return '' }, 1); // error
                                 ~~~~~~~~
!!! error TS2345: Argument of type '(a: number) => string' is not assignable to parameter of type '(a: number) => 1'.
!!! error TS2345:   Type 'string' is not assignable to type '1'.
        }
    }