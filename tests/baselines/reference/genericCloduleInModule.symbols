//// [tests/cases/compiler/genericCloduleInModule.ts] ////

=== genericCloduleInModule.ts ===
namespace A {
>A : Symbol(A, Decl(genericCloduleInModule.ts, 0, 0))

    export class B<T> {
>B : Symbol(B, Decl(genericCloduleInModule.ts, 0, 13), Decl(genericCloduleInModule.ts, 4, 5))
>T : Symbol(T, Decl(genericCloduleInModule.ts, 1, 19))

        foo() { }
>foo : Symbol(B.foo, Decl(genericCloduleInModule.ts, 1, 23))

        static bar() { }
>bar : Symbol(B.bar, Decl(genericCloduleInModule.ts, 2, 17))
    }
    export namespace B {
>B : Symbol(B, Decl(genericCloduleInModule.ts, 0, 13), Decl(genericCloduleInModule.ts, 4, 5))

        export var x = 1;
>x : Symbol(x, Decl(genericCloduleInModule.ts, 6, 18))
    }
}

var b: A.B<number>;
>b : Symbol(b, Decl(genericCloduleInModule.ts, 10, 3))
>A : Symbol(A, Decl(genericCloduleInModule.ts, 0, 0))
>B : Symbol(A.B, Decl(genericCloduleInModule.ts, 0, 13), Decl(genericCloduleInModule.ts, 4, 5))

b.foo();
>b.foo : Symbol(A.B.foo, Decl(genericCloduleInModule.ts, 1, 23))
>b : Symbol(b, Decl(genericCloduleInModule.ts, 10, 3))
>foo : Symbol(A.B.foo, Decl(genericCloduleInModule.ts, 1, 23))

