//// [tests/cases/compiler/genericInference1.ts] ////

=== genericInference1.ts ===
['a', 'b', 'c'].map(x => x.length);
>['a', 'b', 'c'].map(x => x.length) : number[]
>                                   : ^^^^^^^^
>['a', 'b', 'c'].map : <U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]
>                    : ^ ^^          ^^^     ^^^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>['a', 'b', 'c'] : string[]
>                : ^^^^^^^^
>'a' : "a"
>    : ^^^
>'b' : "b"
>    : ^^^
>'c' : "c"
>    : ^^^
>map : <U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]
>    : ^ ^^          ^^^     ^^^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>x => x.length : (x: string) => number
>              : ^ ^^^^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^
>x.length : number
>         : ^^^^^^
>x : string
>  : ^^^^^^
>length : number
>       : ^^^^^^

