//// [tests/cases/compiler/genericOfACloduleType1.ts] ////

=== genericOfACloduleType1.ts ===
class G<T>{ bar(x: T) { return x; } }
>G : G<T>
>  : ^^^^
>bar : (x: T) => T
>    : ^ ^^ ^^^^^^
>x : T
>  : ^
>x : T
>  : ^

module M {
>M : typeof M
>  : ^^^^^^^^

    export class C { foo() { } }
>C : C
>  : ^
>foo : () => void
>    : ^^^^^^^^^^

    export module C {
>C : typeof C
>  : ^^^^^^^^

        export class X {
>X : X
>  : ^
        }
    }
 
    var g1 = new G<C>();
>g1 : G<C>
>   : ^^^^
>new G<C>() : G<C>
>           : ^^^^
>G : typeof G
>  : ^^^^^^^^

    g1.bar(null).foo();
>g1.bar(null).foo() : void
>                   : ^^^^
>g1.bar(null).foo : () => void
>                 : ^^^^^^^^^^
>g1.bar(null) : C
>             : ^
>g1.bar : (x: C) => C
>       : ^ ^^^^^^^^^
>g1 : G<C>
>   : ^^^^
>bar : (x: C) => C
>    : ^ ^^^^^^^^^
>foo : () => void
>    : ^^^^^^^^^^
}
var g2 = new G<M.C>() // was: error Type reference cannot refer to container 'M.C'.
>g2 : G<M.C>
>   : ^^^^^^
>new G<M.C>() : G<M.C>
>             : ^^^^^^
>G : typeof G
>  : ^^^^^^^^
>M : any
>  : ^^^

