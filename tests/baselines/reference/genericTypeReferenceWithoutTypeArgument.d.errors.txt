genericTypeReferenceWithoutTypeArgument.d.ts(8,16): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(10,21): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(11,22): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(11,26): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(12,19): error TS1268: An index signature parameter type must be 'string', 'number', 'symbol', or a template literal type.
genericTypeReferenceWithoutTypeArgument.d.ts(12,22): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(12,26): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(14,23): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(14,27): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(16,25): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(18,16): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
genericTypeReferenceWithoutTypeArgument.d.ts(22,28): error TS2339: Property 'C' does not exist on type 'typeof M'.
genericTypeReferenceWithoutTypeArgument.d.ts(23,28): error TS2314: Generic type 'E<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(25,30): error TS2314: Generic type 'C<T>' requires 1 type argument(s).
genericTypeReferenceWithoutTypeArgument.d.ts(26,30): error TS2314: Generic type 'E<T>' requires 1 type argument(s).


==== genericTypeReferenceWithoutTypeArgument.d.ts (15 errors) ====
    // it is an error to use a generic type without type arguments
    // all of these are errors 
    
    declare class C<T> {
        foo: T;
    }
    
    declare var c: C;
                   ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    
    declare var a: { x: C };
                        ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    declare var b: { (x: C): C };
                         ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
                             ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    declare var d: { [x: C]: C };
                      ~
!!! error TS1268: An index signature parameter type must be 'string', 'number', 'symbol', or a template literal type.
                         ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
                             ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    
    declare function f(x: C): C;
                          ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
                              ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    
    declare class D extends C {}
                            ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    
    declare module M {
                   ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export class E<T> { foo: T }
    }
    
    declare class D2 extends M.C { }
                               ~
!!! error TS2339: Property 'C' does not exist on type 'typeof M'.
    declare class D3<T extends M.E> { }
                               ~~~
!!! error TS2314: Generic type 'E<T>' requires 1 type argument(s).
    
    declare function h<T extends C>(x: T);
                                 ~
!!! error TS2314: Generic type 'C<T>' requires 1 type argument(s).
    declare function i<T extends M.E>(x: T);
                                 ~~~
!!! error TS2314: Generic type 'E<T>' requires 1 type argument(s).