//// [tests/cases/compiler/genericTypeWithCallableMembers2.ts] ////

=== genericTypeWithCallableMembers2.ts ===
function foo1<T extends { (): string; }>(f: T) {
>foo1 : <T extends { (): string; }>(f: T) => string
>     : ^ ^^^^^^^^^               ^^ ^^ ^^^^^^^^^^^
>f : T
>  : ^

    return f(); // should return 'string', once returned 'any'
>f() : string
>    : ^^^^^^
>f : T
>  : ^
}
 
function foo2<T extends { new (): string; }>(f: T) {
>foo2 : <T extends { new (): string; }>(f: T) => string
>     : ^ ^^^^^^^^^                   ^^ ^^ ^^^^^^^^^^^
>f : T
>  : ^

    return new f(); // should be legal, once was an error
>new f() : string
>        : ^^^^^^
>f : T
>  : ^
}
