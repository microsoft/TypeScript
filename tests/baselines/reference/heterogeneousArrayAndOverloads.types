//// [tests/cases/compiler/heterogeneousArrayAndOverloads.ts] ////

=== heterogeneousArrayAndOverloads.ts ===
class arrTest {
>arrTest : arrTest
>        : ^^^^^^^

    test(arg1: number[]);
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>arg1 : number[]
>     : ^^^^^^^^

    test(arg1: string[]);
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>arg1 : string[]
>     : ^^^^^^^^

    test(arg1: any[]) { }
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>arg1 : any[]
>     : ^^^^^

    callTest() {
>callTest : () => void
>         : ^^^^^^^^^^

        this.test([1, 2, 3, 5]);
>this.test([1, 2, 3, 5]) : any
>                        : ^^^
>this.test : { (arg1: number[]): any; (arg1: string[]): any; }
>          : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>this : this
>     : ^^^^
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>[1, 2, 3, 5] : number[]
>             : ^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^
>3 : 3
>  : ^
>5 : 5
>  : ^

        this.test(["hi"]);
>this.test(["hi"]) : any
>                  : ^^^
>this.test : { (arg1: number[]): any; (arg1: string[]): any; }
>          : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>this : this
>     : ^^^^
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>["hi"] : string[]
>       : ^^^^^^^^
>"hi" : "hi"
>     : ^^^^

        this.test([]);
>this.test([]) : any
>              : ^^^
>this.test : { (arg1: number[]): any; (arg1: string[]): any; }
>          : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>this : this
>     : ^^^^
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^

        this.test([1, 2, "hi", 5]); // Error
>this.test([1, 2, "hi", 5]) : any
>                           : ^^^
>this.test : { (arg1: number[]): any; (arg1: string[]): any; }
>          : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>this : this
>     : ^^^^
>test : { (arg1: number[]): any; (arg1: string[]): any; }
>     : ^^^    ^^        ^^^^^^^^^    ^^        ^^^^^^^^^
>[1, 2, "hi", 5] : (string | number)[]
>                : ^^^^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^
>"hi" : "hi"
>     : ^^^^
>5 : 5
>  : ^
    }
}
