//// [tests/cases/compiler/implicitAnyInAmbientDeclaration.ts] ////

=== implicitAnyInAmbientDeclaration.ts ===
namespace Test {
>Test : Symbol(Test, Decl(implicitAnyInAmbientDeclaration.ts, 0, 0))

    declare class C {
>C : Symbol(C, Decl(implicitAnyInAmbientDeclaration.ts, 0, 16))

        public publicMember;  // this should be an error
>publicMember : Symbol(C.publicMember, Decl(implicitAnyInAmbientDeclaration.ts, 1, 21))

        private privateMember;  // this should not be an error
>privateMember : Symbol(C.privateMember, Decl(implicitAnyInAmbientDeclaration.ts, 2, 28))

        public publicFunction(x);  // this should be an error
>publicFunction : Symbol(C.publicFunction, Decl(implicitAnyInAmbientDeclaration.ts, 3, 30))
>x : Symbol(x, Decl(implicitAnyInAmbientDeclaration.ts, 5, 30))

        private privateFunction(privateParam);  // this should not be an error
>privateFunction : Symbol(C.privateFunction, Decl(implicitAnyInAmbientDeclaration.ts, 5, 33))
>privateParam : Symbol(privateParam, Decl(implicitAnyInAmbientDeclaration.ts, 6, 32))

        private constructor(privateParam);
>privateParam : Symbol(privateParam, Decl(implicitAnyInAmbientDeclaration.ts, 7, 28))
    }
}
