//// [tests/cases/compiler/implicitAnyWidenToAny.ts] ////

=== implicitAnyWidenToAny.ts ===
// these should be errors
var x = null;                        // error at "x"
>x : any
>  : ^^^

var x1 = undefined;		             // error at "x1"
>x1 : any
>   : ^^^
>undefined : undefined
>          : ^^^^^^^^^

var widenArray = [null, undefined];  // error at "widenArray"
>widenArray : any[]
>           : ^^^^^
>[null, undefined] : null[]
>                  : ^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

var emptyArray = [];
>emptyArray : any[]
>           : ^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^

// these should not be error
class AnimalObj {
>AnimalObj : AnimalObj
>          : ^^^^^^^^^

      x:any;
>x : any
>  : ^^^
}
var foo = 5;
>foo : number
>    : ^^^^^^
>5 : 5
>  : ^

var bar = "Hello World";
>bar : string
>    : ^^^^^^
>"Hello World" : "Hello World"
>              : ^^^^^^^^^^^^^

var foo1: any = null;
>foo1 : any
>     : ^^^

var foo2: any = undefined;
>foo2 : any
>     : ^^^
>undefined : undefined
>          : ^^^^^^^^^

var temp: number = 5;
>temp : number
>     : ^^^^^^
>5 : 5
>  : ^

var c: AnimalObj = { x: null }; 
>c : AnimalObj
>  : ^^^^^^^^^
>{ x: null } : { x: null; }
>            : ^^^^^^^^^^^^
>x : null
>  : ^^^^

var array1 = ["Bob",2];
>array1 : (string | number)[]
>       : ^^^^^^^^^^^^^^^^^^^
>["Bob",2] : (string | number)[]
>          : ^^^^^^^^^^^^^^^^^^^
>"Bob" : "Bob"
>      : ^^^^^
>2 : 2
>  : ^

var array2: any[] = [];
>array2 : any[]
>       : ^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^

var array3: any[] = [null, undefined];
>array3 : any[]
>       : ^^^^^
>[null, undefined] : null[]
>                  : ^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

var array4: number[] = [null, undefined];
>array4 : number[]
>       : ^^^^^^^^
>[null, undefined] : null[]
>                  : ^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

var array5 = <any[]>[null, undefined];
>array5 : any[]
>       : ^^^^^
><any[]>[null, undefined] : any[]
>                         : ^^^^^
>[null, undefined] : null[]
>                  : ^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

var objLit: { new (n: number): any; };
>objLit : new (n: number) => any
>       : ^^^^^ ^^      ^^^^^   
>n : number
>  : ^^^^^^

function anyReturnFunc(): any { }
>anyReturnFunc : () => any
>              : ^^^^^^   

var obj0 = new objLit(1);
>obj0 : any
>     : ^^^
>new objLit(1) : any
>              : ^^^
>objLit : new (n: number) => any
>       : ^^^^^ ^^      ^^^^^   
>1 : 1
>  : ^

var obj1 = anyReturnFunc();
>obj1 : any
>     : ^^^
>anyReturnFunc() : any
>                : ^^^
>anyReturnFunc : () => any
>              : ^^^^^^   

