//// [tests/cases/conformance/dynamicImport/importCallExpressionAsyncES6AMD.ts] ////

=== test.ts ===
export async function fn() {
>fn : () => Promise<void>
>   : ^^^^^^^^^^^^^^^^^^^

    const req = await import('./test') // ONE
>req : typeof import("test")
>    : ^^^^^^^^^^^^^^^^^^^^^
>await import('./test') : typeof import("test")
>                       : ^^^^^^^^^^^^^^^^^^^^^
>import('./test') : Promise<typeof import("test")>
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'./test' : "./test"
>         : ^^^^^^^^
}

export class cl1 {
>cl1 : cl1
>    : ^^^

    public async m() {
>m : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^

        const req = await import('./test') // TWO
>req : typeof import("test")
>    : ^^^^^^^^^^^^^^^^^^^^^
>await import('./test') : typeof import("test")
>                       : ^^^^^^^^^^^^^^^^^^^^^
>import('./test') : Promise<typeof import("test")>
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'./test' : "./test"
>         : ^^^^^^^^
    }
}

export const obj = {
>obj : { m: () => Promise<void>; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    m: async () => {        const req = await import('./test') // THREE    }} : { m: () => Promise<void>; }
>                                                                               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

    m: async () => {
>m : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>async () => {        const req = await import('./test') // THREE    } : () => Promise<void>
>                                                                      : ^^^^^^^^^^^^^^^^^^^

        const req = await import('./test') // THREE
>req : typeof import("test")
>    : ^^^^^^^^^^^^^^^^^^^^^
>await import('./test') : typeof import("test")
>                       : ^^^^^^^^^^^^^^^^^^^^^
>import('./test') : Promise<typeof import("test")>
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'./test' : "./test"
>         : ^^^^^^^^
    }
}

export class cl2 {
>cl2 : cl2
>    : ^^^

    public p = {
>p : { m: () => Promise<void>; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{        m: async () => {            const req = await import('./test') // FOUR        }    } : { m: () => Promise<void>; }
>                                                                                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

        m: async () => {
>m : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>async () => {            const req = await import('./test') // FOUR        } : () => Promise<void>
>                                                                             : ^^^^^^^^^^^^^^^^^^^

            const req = await import('./test') // FOUR
>req : typeof import("test")
>    : ^^^^^^^^^^^^^^^^^^^^^
>await import('./test') : typeof import("test")
>                       : ^^^^^^^^^^^^^^^^^^^^^
>import('./test') : Promise<typeof import("test")>
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'./test' : "./test"
>         : ^^^^^^^^
        }
    }
}

export const l = async () => {
>l : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>async () => {    const req = await import('./test') // FIVE} : () => Promise<void>
>                                                             : ^^^^^^^^^^^^^^^^^^^

    const req = await import('./test') // FIVE
>req : typeof import("test")
>    : ^^^^^^^^^^^^^^^^^^^^^
>await import('./test') : typeof import("test")
>                       : ^^^^^^^^^^^^^^^^^^^^^
>import('./test') : Promise<typeof import("test")>
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'./test' : "./test"
>         : ^^^^^^^^
}

