//// [tests/cases/conformance/dynamicImport/importCallExpressionWithTypeArgument.ts] ////

=== 0.ts ===
export function foo() { return "foo"; }
>foo : () => string
>    : ^^^^^^^^^^^^
>"foo" : "foo"
>      : ^^^^^

=== 1.ts ===
"use strict"
>"use strict" : "use strict"
>             : ^^^^^^^^^^^^

var p1 = import<Promise<any>>("./0");  // error
>p1 : Promise<typeof import("0")>
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>import<Promise<any>>("./0") : Promise<typeof import("0")>
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"./0" : "./0"
>      : ^^^^^

var p2 = import<>("./0");  // error
>p2 : Promise<typeof import("0")>
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>import<>("./0") : Promise<typeof import("0")>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"./0" : "./0"
>      : ^^^^^

