//// [tests/cases/compiler/importHelpersNoHelpers.ts] ////

=== external.ts ===
export * from "./other";
export class A { }
>A : A
>  : ^

export class B extends A { }
>B : B
>  : ^
>A : A
>  : ^

declare var dec: any;
>dec : any
>    : ^^^

@dec
>dec : any
>    : ^^^

class C {
>C : C
>  : ^

    method(@dec x: number) {
>method : (x: number) => void
>       : ^ ^^      ^^^^^^^^^
>dec : any
>    : ^^^
>x : number
>  : ^^^^^^
    }
}

const o = { a: 1 };
>o : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ a: 1 } : { a: number; }
>         : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^

const y = { ...o };
>y : { a: number; }
>  : ^^^^^^^^^^^^^^
>{ ...o } : { a: number; }
>         : ^^^^^^^^^^^^^^
>o : { a: number; }
>  : ^^^^^^^^^^^^^^

const { ...x } = y;
>x : { a: number; }
>  : ^^^^^^^^^^^^^^
>y : { a: number; }
>  : ^^^^^^^^^^^^^^

=== other.ts ===
export const x = 1;
>x : 1
>  : ^
>1 : 1
>  : ^

=== script.ts ===
class A { }
>A : A
>  : ^

class B extends A { }
>B : B
>  : ^
>A : A
>  : ^

declare var dec: any;
>dec : any
>    : ^^^

@dec
>dec : any
>    : ^^^

class C {
>C : C
>  : ^

    method(@dec x: number) {
>method : (x: number) => void
>       : ^ ^^      ^^^^^^^^^
>dec : any
>    : ^^^
>x : number
>  : ^^^^^^
    }
}

=== tslib.d.ts ===

export {}

