//// [tests/cases/conformance/types/typeRelationships/typeInference/indexSignatureTypeInference.ts] ////

=== indexSignatureTypeInference.ts ===
interface NumberMap<T> {
>NumberMap : Symbol(NumberMap, Decl(indexSignatureTypeInference.ts, 0, 0))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 0, 20))

    [index: number]: T;
>index : Symbol(index, Decl(indexSignatureTypeInference.ts, 1, 5))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 0, 20))
}

interface StringMap<T> {
>StringMap : Symbol(StringMap, Decl(indexSignatureTypeInference.ts, 2, 1))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 4, 20))

    [index: string]: T;
>index : Symbol(index, Decl(indexSignatureTypeInference.ts, 5, 5))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 4, 20))
}

declare function numberMapToArray<T>(object: NumberMap<T>): T[];
>numberMapToArray : Symbol(numberMapToArray, Decl(indexSignatureTypeInference.ts, 6, 1))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 8, 34))
>object : Symbol(object, Decl(indexSignatureTypeInference.ts, 8, 37))
>NumberMap : Symbol(NumberMap, Decl(indexSignatureTypeInference.ts, 0, 0))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 8, 34))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 8, 34))

declare function stringMapToArray<T>(object: StringMap<T>): T[];
>stringMapToArray : Symbol(stringMapToArray, Decl(indexSignatureTypeInference.ts, 8, 64))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 9, 34))
>object : Symbol(object, Decl(indexSignatureTypeInference.ts, 9, 37))
>StringMap : Symbol(StringMap, Decl(indexSignatureTypeInference.ts, 2, 1))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 9, 34))
>T : Symbol(T, Decl(indexSignatureTypeInference.ts, 9, 34))

var numberMap: NumberMap<Function>;
>numberMap : Symbol(numberMap, Decl(indexSignatureTypeInference.ts, 11, 3))
>NumberMap : Symbol(NumberMap, Decl(indexSignatureTypeInference.ts, 0, 0))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

var stringMap: StringMap<Function>;
>stringMap : Symbol(stringMap, Decl(indexSignatureTypeInference.ts, 12, 3))
>StringMap : Symbol(StringMap, Decl(indexSignatureTypeInference.ts, 2, 1))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

var v1: Function[];
>v1 : Symbol(v1, Decl(indexSignatureTypeInference.ts, 14, 3), Decl(indexSignatureTypeInference.ts, 15, 3), Decl(indexSignatureTypeInference.ts, 16, 3), Decl(indexSignatureTypeInference.ts, 17, 3), Decl(indexSignatureTypeInference.ts, 18, 3))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.core.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

var v1 = numberMapToArray(numberMap);  // Ok
>v1 : Symbol(v1, Decl(indexSignatureTypeInference.ts, 14, 3), Decl(indexSignatureTypeInference.ts, 15, 3), Decl(indexSignatureTypeInference.ts, 16, 3), Decl(indexSignatureTypeInference.ts, 17, 3), Decl(indexSignatureTypeInference.ts, 18, 3))
>numberMapToArray : Symbol(numberMapToArray, Decl(indexSignatureTypeInference.ts, 6, 1))
>numberMap : Symbol(numberMap, Decl(indexSignatureTypeInference.ts, 11, 3))

var v1 = numberMapToArray(stringMap);  // Ok
>v1 : Symbol(v1, Decl(indexSignatureTypeInference.ts, 14, 3), Decl(indexSignatureTypeInference.ts, 15, 3), Decl(indexSignatureTypeInference.ts, 16, 3), Decl(indexSignatureTypeInference.ts, 17, 3), Decl(indexSignatureTypeInference.ts, 18, 3))
>numberMapToArray : Symbol(numberMapToArray, Decl(indexSignatureTypeInference.ts, 6, 1))
>stringMap : Symbol(stringMap, Decl(indexSignatureTypeInference.ts, 12, 3))

var v1 = stringMapToArray(numberMap);  // Error expected here
>v1 : Symbol(v1, Decl(indexSignatureTypeInference.ts, 14, 3), Decl(indexSignatureTypeInference.ts, 15, 3), Decl(indexSignatureTypeInference.ts, 16, 3), Decl(indexSignatureTypeInference.ts, 17, 3), Decl(indexSignatureTypeInference.ts, 18, 3))
>stringMapToArray : Symbol(stringMapToArray, Decl(indexSignatureTypeInference.ts, 8, 64))
>numberMap : Symbol(numberMap, Decl(indexSignatureTypeInference.ts, 11, 3))

var v1 = stringMapToArray(stringMap);  // Ok
>v1 : Symbol(v1, Decl(indexSignatureTypeInference.ts, 14, 3), Decl(indexSignatureTypeInference.ts, 15, 3), Decl(indexSignatureTypeInference.ts, 16, 3), Decl(indexSignatureTypeInference.ts, 17, 3), Decl(indexSignatureTypeInference.ts, 18, 3))
>stringMapToArray : Symbol(stringMapToArray, Decl(indexSignatureTypeInference.ts, 8, 64))
>stringMap : Symbol(stringMap, Decl(indexSignatureTypeInference.ts, 12, 3))

