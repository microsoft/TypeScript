//// [tests/cases/compiler/inferPropertyWithContextSensitiveReturnStatement.ts] ////

=== inferPropertyWithContextSensitiveReturnStatement.ts ===
// repro #50687

declare function repro<T>(config: {
>repro : <T>(config: { params: T; callback: () => (params: T) => number; }) => void
>      : ^ ^^      ^^                                                     ^^^^^    
>config : { params: T; callback: () => (params: T) => number; }
>       : ^^^^^^^^^^ ^^^^^^^^^^^^                           ^^^

  params: T;
>params : T
>       : ^

  callback: () => (params: T) => number;
>callback : () => (params: T) => number
>         : ^^^^^^                     
>params : T
>       : ^

}): void;

repro({
>repro({  params: 1,  callback: () => { return a => a + 1 },}) : void
>                                                              : ^^^^
>repro : <T>(config: { params: T; callback: () => (params: T) => number; }) => void
>      : ^ ^^      ^^                                                     ^^^^^    
>{  params: 1,  callback: () => { return a => a + 1 },} : { params: number; callback: () => (a: number) => number; }
>                                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^

  params: 1,
>params : number
>       : ^^^^^^
>1 : 1
>  : ^

  callback: () => { return a => a + 1 },
>callback : () => (a: number) => number
>         : ^^^^^^^ ^^^^^^^^^^^^^^^^^^^
>() => { return a => a + 1 } : () => (a: number) => number
>                            : ^^^^^^^ ^^^^^^^^^^^^^^^^^^^
>a => a + 1 : (a: number) => number
>           : ^ ^^^^^^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>a + 1 : number
>      : ^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^

});

