//// [tests/cases/compiler/infinitelyExpandingTypes2.ts] ////

=== infinitelyExpandingTypes2.ts ===
interface Foo<T> {
    x: Foo<Foo<T>>;
>x : Foo<Foo<T>>
>  : ^^^^^^^^^^^
} 

interface Bar<T> extends Foo<T> {
    y: string;
>y : string
>  : ^^^^^^
}

function f(p: Foo<number>) {
>f : (p: Foo<number>) => void
>  : ^ ^^           ^^^^^^^^^
>p : Foo<number>
>  : ^^^^^^^^^^^

    console.log(p);
>console.log(p) : void
>               : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>p : Foo<number>
>  : ^^^^^^^^^^^
}

var v: Bar<number> = null;
>v : Bar<number>
>  : ^^^^^^^^^^^

f(v); // should not error
>f(v) : void
>     : ^^^^
>f : (p: Foo<number>) => void
>  : ^ ^^           ^^^^^^^^^
>v : Bar<number>
>  : ^^^^^^^^^^^

