//// [tests/cases/compiler/initializePropertiesWithRenamedLet.ts] ////

=== initializePropertiesWithRenamedLet.ts ===
var x0;
>x0 : any

if (true) {
>true : true
>     : ^^^^

    let x0;
>x0 : any

    var obj1 = { x0: x0 };
>obj1 : { x0: any; }
>     : ^^^^^^^^^^^^
>{ x0: x0 } : { x0: any; }
>           : ^^^^^^^^^^^^
>x0 : any
>x0 : any

    var obj2 = { x0 };
>obj2 : { x0: any; }
>     : ^^^^^^^^^^^^
>{ x0 } : { x0: any; }
>       : ^^^^^^^^^^^^
>x0 : any
}

var x, y, z;
>x : any
>y : any
>z : any

if (true) {
>true : true
>     : ^^^^

    let { x: x } = { x: 0 };
>x : any
>  : ^^^
>x : number
>  : ^^^^^^
>{ x: 0 } : { x: number; }
>         : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>0 : 0
>  : ^

    let { y } = { y: 0 };
>y : number
>  : ^^^^^^
>{ y: 0 } : { y: number; }
>         : ^^^^^^^^^^^^^^
>y : number
>  : ^^^^^^
>0 : 0
>  : ^

    let z;
>z : any

    ({ z: z } = { z: 0 });
>({ z: z } = { z: 0 }) : { z: number; }
>                      : ^^^^^^^^^^^^^^
>{ z: z } = { z: 0 } : { z: number; }
>                    : ^^^^^^^^^^^^^^
>{ z: z } : { z: any; }
>         : ^^^^^^^^^^^
>z : any
>z : any
>{ z: 0 } : { z: number; }
>         : ^^^^^^^^^^^^^^
>z : number
>  : ^^^^^^
>0 : 0
>  : ^

    ({ z } = { z: 0 });
>({ z } = { z: 0 }) : { z: number; }
>                   : ^^^^^^^^^^^^^^
>{ z } = { z: 0 } : { z: number; }
>                 : ^^^^^^^^^^^^^^
>{ z } : { z: any; }
>      : ^^^^^^^^^^^
>z : any
>{ z: 0 } : { z: number; }
>         : ^^^^^^^^^^^^^^
>z : number
>  : ^^^^^^
>0 : 0
>  : ^
}
