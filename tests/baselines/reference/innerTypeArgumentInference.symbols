//// [tests/cases/compiler/innerTypeArgumentInference.ts] ////

=== innerTypeArgumentInference.ts ===
interface Generator<T> { (): T; }
>Generator : Symbol(Generator, Decl(lib.es2015.generator.d.ts, --, --), Decl(innerTypeArgumentInference.ts, 0, 0))
>T : Symbol(T, Decl(lib.es2015.generator.d.ts, --, --), Decl(innerTypeArgumentInference.ts, 0, 20))
>T : Symbol(T, Decl(lib.es2015.generator.d.ts, --, --), Decl(innerTypeArgumentInference.ts, 0, 20))

function Generate<U>(func: Generator<U>): U {
>Generate : Symbol(Generate, Decl(innerTypeArgumentInference.ts, 0, 33))
>U : Symbol(U, Decl(innerTypeArgumentInference.ts, 1, 18))
>func : Symbol(func, Decl(innerTypeArgumentInference.ts, 1, 21))
>Generator : Symbol(Generator, Decl(lib.es2015.generator.d.ts, --, --), Decl(innerTypeArgumentInference.ts, 0, 0))
>U : Symbol(U, Decl(innerTypeArgumentInference.ts, 1, 18))
>U : Symbol(U, Decl(innerTypeArgumentInference.ts, 1, 18))

    return Generate(func);
>Generate : Symbol(Generate, Decl(innerTypeArgumentInference.ts, 0, 33))
>func : Symbol(func, Decl(innerTypeArgumentInference.ts, 1, 21))
}
