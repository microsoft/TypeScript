//// [tests/cases/conformance/interfaces/interfaceDeclarations/interfaceThatIndirectlyInheritsFromItself.ts] ////

=== interfaceThatIndirectlyInheritsFromItself.ts ===
interface Base extends Derived2 { // error
>Base : Symbol(Base, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 0, 0))
>Derived2 : Symbol(Derived2, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 6, 1))

    x: string;
>x : Symbol(Base.x, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 0, 33))
}

interface Derived extends Base {
>Derived : Symbol(Derived, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 2, 1))
>Base : Symbol(Base, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 0, 0))

    y: string;
>y : Symbol(Derived.y, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 4, 32))
}

interface Derived2 extends Derived {
>Derived2 : Symbol(Derived2, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 6, 1))
>Derived : Symbol(Derived, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 2, 1))

    z: string;
>z : Symbol(Derived2.z, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 8, 36))
}

namespace Generic {
>Generic : Symbol(Generic, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 10, 1))

    interface Base<T> extends Derived2<T> { // error
>Base : Symbol(Base, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 12, 19))
>T : Symbol(T, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 13, 19))
>Derived2 : Symbol(Derived2, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 19, 5))
>T : Symbol(T, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 13, 19))

        x: string;
>x : Symbol(Base.x, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 13, 43))
    }

    interface Derived<T> extends Base<T> {
>Derived : Symbol(Derived, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 15, 5))
>T : Symbol(T, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 17, 22))
>Base : Symbol(Base, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 12, 19))
>T : Symbol(T, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 17, 22))

        y: string;
>y : Symbol(Derived.y, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 17, 42))
    }

    interface Derived2<T> extends Derived<T> {
>Derived2 : Symbol(Derived2, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 19, 5))
>T : Symbol(T, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 21, 23))
>Derived : Symbol(Derived, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 15, 5))
>T : Symbol(T, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 21, 23))

        z: string;
>z : Symbol(Derived2.z, Decl(interfaceThatIndirectlyInheritsFromItself.ts, 21, 46))
    }
}
