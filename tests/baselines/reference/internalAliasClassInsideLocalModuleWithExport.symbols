//// [tests/cases/compiler/internalAliasClassInsideLocalModuleWithExport.ts] ////

=== internalAliasClassInsideLocalModuleWithExport.ts ===
export namespace x {
>x : Symbol(x, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 0, 0))

    export class c {
>c : Symbol(c, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 0, 20))

        foo(a: number) {
>foo : Symbol(c.foo, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 1, 20))
>a : Symbol(a, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 2, 12))

            return a;
>a : Symbol(a, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 2, 12))
        }
    }
}

export namespace m2 {
>m2 : Symbol(m2, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 6, 1))

    export namespace m3 {
>m3 : Symbol(m3, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 8, 21))

        export import c = x.c;
>c : Symbol(c, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 9, 25))
>x : Symbol(x, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 0, 0))
>c : Symbol(c, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 0, 20))

        export var cProp = new c();
>cProp : Symbol(cProp, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 11, 18))
>c : Symbol(c, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 9, 25))

        var cReturnVal = cProp.foo(10);
>cReturnVal : Symbol(cReturnVal, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 12, 11))
>cProp.foo : Symbol(c.foo, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 1, 20))
>cProp : Symbol(cProp, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 11, 18))
>foo : Symbol(c.foo, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 1, 20))
    }
}

export var d = new m2.m3.c();
>d : Symbol(d, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 16, 10))
>m2.m3.c : Symbol(m2.m3.c, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 9, 25))
>m2.m3 : Symbol(m2.m3, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 8, 21))
>m2 : Symbol(m2, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 6, 1))
>m3 : Symbol(m2.m3, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 8, 21))
>c : Symbol(m2.m3.c, Decl(internalAliasClassInsideLocalModuleWithExport.ts, 9, 25))

