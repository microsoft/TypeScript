//// [tests/cases/compiler/internalAliasFunctionInsideTopLevelModuleWithoutExport.ts] ////

=== internalAliasFunctionInsideTopLevelModuleWithoutExport.ts ===
export namespace a {
>a : Symbol(a, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 0, 0))

    export function foo(x: number) {
>foo : Symbol(foo, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 0, 20))
>x : Symbol(x, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 1, 24))

        return x;
>x : Symbol(x, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 1, 24))
    }
}

import b = a.foo;
>b : Symbol(b, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 4, 1))
>a : Symbol(a, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 0, 0))
>foo : Symbol(b, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 0, 20))

export var bVal = b(10);
>bVal : Symbol(bVal, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 7, 10))
>b : Symbol(b, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 4, 1))

export var bVal2 = b;
>bVal2 : Symbol(bVal2, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 8, 10))
>b : Symbol(b, Decl(internalAliasFunctionInsideTopLevelModuleWithoutExport.ts, 4, 1))

