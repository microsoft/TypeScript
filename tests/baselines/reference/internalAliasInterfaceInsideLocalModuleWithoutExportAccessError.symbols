//// [tests/cases/compiler/internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts] ////

=== internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts ===
<<<<<<< HEAD
export module a {
>a : Symbol(a, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 0, 0))

||||||| parent of 42f6576e83 (Deprecate `--module amd`, `umd`, `system`, `none`; `--moduleResolution classic`; change defaults (#62669))
export namespace a {
=======
export namespace a {
>>>>>>> 42f6576e83 (Deprecate `--module amd`, `umd`, `system`, `none`; `--moduleResolution classic`; change defaults (#62669))
    export interface I {
>I : Symbol(I, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 1, 17))
    }
}

export module c {
>c : Symbol(c, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 9, 1))

    import b = a.I;
>b : Symbol(b, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 11, 17))
>a : Symbol(a, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 0, 0))
>I : Symbol(b, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 1, 17))

    export var x: b;
>x : Symbol(x, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 13, 14))
>b : Symbol(b, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 11, 17))
}

var x: c.b;
>x : Symbol(x, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 16, 3))
>c : Symbol(c, Decl(internalAliasInterfaceInsideLocalModuleWithoutExportAccessError.ts, 9, 1))
>b : Symbol(c.b)

