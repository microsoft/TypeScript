//// [tests/cases/compiler/internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts] ////

=== internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts ===
<<<<<<< HEAD
export module a {
>a : Symbol(a, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 0, 0))

    export module b {
>b : Symbol(b, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 1, 17))

||||||| parent of 42f6576e83 (Deprecate `--module amd`, `umd`, `system`, `none`; `--moduleResolution classic`; change defaults (#62669))
export namespace a {
    export namespace b {
=======
export namespace a {
    export namespace b {
>>>>>>> 42f6576e83 (Deprecate `--module amd`, `umd`, `system`, `none`; `--moduleResolution classic`; change defaults (#62669))
        export interface I {
>I : Symbol(I, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 2, 21))

            foo();
>foo : Symbol(I.foo, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 10, 28))
        }
    }
}

export module c {
>c : Symbol(c, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 14, 1))

    import b = a.b;
>b : Symbol(b, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 16, 17))
>a : Symbol(a, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 0, 0))
>b : Symbol(b, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 1, 17))

    export var x: b.I;
>x : Symbol(x, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 18, 14))
>b : Symbol(b, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 16, 17))
>I : Symbol(b.I, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 2, 21))

    x.foo();
>x.foo : Symbol(b.I.foo, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 10, 28))
>x : Symbol(x, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 18, 14))
>foo : Symbol(b.I.foo, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 10, 28))
}


export var z: c.b.I;
>z : Symbol(z, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 23, 10))
>c : Symbol(c, Decl(internalAliasUninitializedModuleInsideLocalModuleWithoutExportAccessError.ts, 14, 1))
>b : Symbol(c.b)
>I : Symbol(c.b.I)

