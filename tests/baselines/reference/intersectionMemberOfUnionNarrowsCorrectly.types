//// [tests/cases/conformance/types/intersection/intersectionMemberOfUnionNarrowsCorrectly.ts] ////

=== intersectionMemberOfUnionNarrowsCorrectly.ts ===
export type U = { kind?: 'A', a: string } | { kind?: 'B' } & { b: string };
>U : U
>  : ^
>kind : "A"
>     : ^^^
>a : string
>  : ^^^^^^
>kind : "B"
>     : ^^^
>b : string
>  : ^^^^^^

type Ex<T, U> = T extends U ? T : never;
>Ex : Ex<T, U>
>   : ^^^^^^^^

declare let x: Ex<U, { kind?: 'A' }>
>x : { kind?: "A"; a: string; }
>  : ^^^^^^^^^   ^^^^^      ^^^
>kind : "A"
>     : ^^^

x.a
>x.a : string
>    : ^^^^^^
>x : { kind?: "A"; a: string; }
>  : ^^^^^^^^^   ^^^^^      ^^^
>a : string
>  : ^^^^^^

