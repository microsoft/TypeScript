//// [tests/cases/conformance/statements/breakStatements/invalidForInBreakStatements.ts] ////

=== invalidForInBreakStatements.ts ===
// All errors

// naked break not allowed
break;

// non-existent label
ONE:
>ONE : any
>    : ^^^

for (var x in {}) break TWO;
>x : string
>  : ^^^^^^
>{} : {}
>   : ^^
>TWO : any
>    : ^^^

// break from inside function
TWO:
>TWO : any
>    : ^^^

for (var x in {}) {
>x : string
>  : ^^^^^^
>{} : {}
>   : ^^

    var fn = () => {
>fn : () => void
>   : ^^^^^^^^^^
>() => {        break TWO;    } : () => void
>                               : ^^^^^^^^^^

        break TWO;
>TWO : any
>    : ^^^
    }
}

THREE:
>THREE : any
>      : ^^^

for (var x in {}) {
>x : string
>  : ^^^^^^
>{} : {}
>   : ^^

    var fn = function () {
>fn : () => void
>   : ^^^^^^^^^^
>function () {        break THREE;    } : () => void
>                                       : ^^^^^^^^^^

        break THREE;
>THREE : any
>      : ^^^
    }
}

// break forward
for (var x in {}) {
>x : string
>  : ^^^^^^
>{} : {}
>   : ^^

    break FIVE;
>FIVE : any
>     : ^^^

    FIVE:
>FIVE : any
>     : ^^^

    for (var x in {}) { }
>x : string
>  : ^^^^^^
>{} : {}
>   : ^^
}

// label on non-loop statement
NINE:
>NINE : any
>     : ^^^

var y = 12;
>y : number
>  : ^^^^^^
>12 : 12
>   : ^^

for (var x in {}) {
>x : string
>  : ^^^^^^
>{} : {}
>   : ^^

    break NINE;
>NINE : any
>     : ^^^
}
