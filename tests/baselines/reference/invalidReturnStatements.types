//// [tests/cases/conformance/statements/returnStatements/invalidReturnStatements.ts] ////

=== invalidReturnStatements.ts ===
// all the following should be error
function fn1(): number {  }
>fn1 : () => number
>    : ^^^^^^      

function fn2(): string { }
>fn2 : () => string
>    : ^^^^^^      

function fn3(): boolean { }
>fn3 : () => boolean
>    : ^^^^^^       

function fn4(): Date {  }
>fn4 : () => Date
>    : ^^^^^^    

function fn7(): any {  } // should be valid: any includes void
>fn7 : () => any
>    : ^^^^^^   

interface I { id: number }
>id : number
>   : ^^^^^^

class C implements I {
>C : C
>  : ^

    id: number;
>id : number
>   : ^^^^^^

    dispose() {}
>dispose : () => void
>        : ^^^^^^^^^^
}
class D extends C {
>D : D
>  : ^
>C : C
>  : ^

    name: string;
>name : string
>     : ^^^^^^
}
function fn10(): D { return { id: 12 }; } 
>fn10 : () => D
>     : ^^^^^^ 
>{ id: 12 } : { id: number; }
>           : ^^^^^^^^^^^^^^^
>id : number
>   : ^^^^^^
>12 : 12
>   : ^^

function fn11(): D { return new C(); }
>fn11 : () => D
>     : ^^^^^^ 
>new C() : C
>        : ^
>C : typeof C
>  : ^^^^^^^^


