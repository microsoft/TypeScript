//// [tests/cases/conformance/jsdoc/declarations/jsDeclarationsImportTypeBundled.ts] ////

=== folder/mod1.js ===
/**
 * @typedef {{x: number}} Item
 */
/**
 * @type {Item};
 */
const x = {x: 12};
>x : Item
>  : ^^^^
>{x: 12} : { x: number; }
>        : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>12 : 12
>   : ^^

module.exports = x;
>module.exports = x : { x: number; }
>                   : ^^^^^      ^^^
>module.exports : { x: number; }
>               : ^^^^^      ^^^
>module : { exports: { x: number; }; }
>       : ^^^^^^^^^^^^^^^^      ^^^^^^
>exports : { x: number; }
>        : ^^^^^      ^^^
>x : Item
>  : ^^^^

=== index.js ===
/** @type {(typeof import("./folder/mod1"))[]} */
const items = [{x: 12}];
>items : import("folder/mod1").Item[]
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[{x: 12}] : { x: number; }[]
>          : ^^^^^^^^^^^^^^^^
>{x: 12} : { x: number; }
>        : ^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>12 : 12
>   : ^^

module.exports = items;
>module.exports = items : import("folder/mod1").Item[]
>                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>module.exports : import("folder/mod1").Item[]
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>module : { exports: import("folder/mod1").Item[]; }
>       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>exports : import("folder/mod1").Item[]
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>items : import("folder/mod1").Item[]
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

