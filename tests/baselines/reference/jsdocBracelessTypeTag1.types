//// [tests/cases/compiler/jsdocBracelessTypeTag1.ts] ////

=== index.js ===
/** @type () => string */
function fn1() {
>fn1 : () => string
>    : ^^^^^^      

  return 42;
>42 : 42
>   : ^^
}

/** @type () => string */
function fn2() {
>fn2 : () => string
>    : ^^^^^^      

  return "foo";
>"foo" : "foo"
>      : ^^^^^
}

/** @type (arg: string) => string */
function fn3(arg) {
>fn3 : (arg: string) => string
>    : ^   ^^      ^^^^^      
>arg : string
>    : ^^^^^^

  return arg;
>arg : string
>    : ^^^^^^
}

/** @type ({ type: 'foo' } | { type: 'bar' }) & { prop: number } */
const obj1 = { type: "foo", prop: 10 };
>obj1 : ({ type: "foo"; } | { type: "bar"; }) & { prop: number; }
>     : ^^^^^^^^^     ^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^      ^^^
>{ type: "foo", prop: 10 } : { type: "foo"; prop: number; }
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>type : "foo"
>     : ^^^^^
>"foo" : "foo"
>      : ^^^^^
>prop : number
>     : ^^^^^^
>10 : 10
>   : ^^

/** @type ({ type: 'foo' } | { type: 'bar' }) & { prop: number } */
const obj2 = { type: "other", prop: 10 };
>obj2 : ({ type: "foo"; } | { type: "bar"; }) & { prop: number; }
>     : ^^^^^^^^^     ^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^      ^^^
>{ type: "other", prop: 10 } : { type: "other"; prop: number; }
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>type : "other"
>     : ^^^^^^^
>"other" : "other"
>        : ^^^^^^^
>prop : number
>     : ^^^^^^
>10 : 10
>   : ^^

