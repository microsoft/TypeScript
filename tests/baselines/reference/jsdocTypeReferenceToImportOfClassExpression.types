//// [tests/cases/conformance/jsdoc/jsdocTypeReferenceToImportOfClassExpression.ts] ////

=== MC.js ===
const MW = require("./MW");
>MW : typeof MW
>   : ^^^^^^^^^
>require("./MW") : typeof MW
>                : ^^^^^^^^^
>require : any
>"./MW" : "./MW"
>       : ^^^^^^

/** @typedef {number} Cictema */

module.exports = class MC {
>module.exports = class MC {  watch() {    return new MW(this);  }} : typeof import("MC")
>                                                                   : ^^^^^^^^^^^^^^^^^^^
>module.exports : typeof import("MC")
>               : ^^^^^^^^^^^^^^^^^^^
>module : { exports: typeof import("MC"); }
>       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>exports : typeof import("MC")
>        : ^^^^^^^^^^^^^^^^^^^
>class MC {  watch() {    return new MW(this);  }} : typeof import("MC")
>                                                  : ^^^^^^^^^^^^^^^^^^^
>MC : typeof import("MC")
>   : ^^^^^^^^^^^^^^^^^^^

  watch() {
>watch : () => MW
>      : ^^^^^^^^

    return new MW(this);
>new MW(this) : MW
>             : ^^
>MW : typeof MW
>   : ^^^^^^^^^
>this : this
>     : ^^^^
  }
};

=== MW.js ===
/** @typedef {import("./MC")} MC */

class MW {
>MW : MW
>   : ^^

  /**
   * @param {MC} compiler the compiler
   */
  constructor(compiler) {
>compiler : import("MC")
>         : ^^^^^^^^^^^^

    this.compiler = compiler;
>this.compiler = compiler : import("MC")
>                         : ^^^^^^^^^^^^
>this.compiler : any
>this : this
>     : ^^^^
>compiler : any
>         : ^^^
>compiler : import("MC")
>         : ^^^^^^^^^^^^
  }
}

module.exports = MW;
>module.exports = MW : typeof MW
>                    : ^^^^^^^^^
>module.exports : typeof MW
>               : ^^^^^^^^^
>module : { exports: typeof MW; }
>       : ^^^^^^^^^^^^^^^^^^^^^^^
>exports : typeof MW
>        : ^^^^^^^^^
>MW : typeof MW
>   : ^^^^^^^^^

