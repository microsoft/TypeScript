//// [tests/cases/conformance/jsx/jsxCheckJsxNoTypeArgumentsAllowed.tsx] ////

=== component.d.ts ===
import * as React from "react";
>React : typeof React
>      : ^^^^^^^^^^^^

export declare class MyComp<P> extends React.Component<P, {}> {
>MyComp : MyComp<P>
>       : ^^^^^^^^^
>React.Component : React.Component<P, {}>
>                : ^^^^^^^^^^^^^^^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Component : typeof React.Component
>          : ^^^^^^^^^^^^^^^^^^^^^^

    internalProp: P;
>internalProp : P
>             : ^
}

export interface Prop {
    a: number,
>a : number
>  : ^^^^^^

    b: string
>b : string
>  : ^^^^^^
}

=== file.jsx ===
import { MyComp, Prop } from "./component";
>MyComp : typeof MyComp
>       : ^^^^^^^^^^^^^
>Prop : any
>     : ^^^

import * as React from "react";
>React : typeof React
>      : ^^^^^^^^^^^^

let x = <MyComp<Prop> a={10} b="hi" />; // error, no type arguments in js
>x : JSX.Element
>  : ^^^^^^^^^^^
><MyComp<Prop> a={10} b="hi" />; // error, no type arguments in js : JSX.Element
>                                                                  : ^^^^^^^^^^^
><MyComp : JSX.Element
>        : ^^^^^^^^^^^
>MyComp : typeof MyComp
>       : ^^^^^^^^^^^^^
><Prop> a={10} b="hi" />; // error, no type arguments in js : JSX.Element
>                                                           : ^^^^^^^^^^^
>Prop : any
>     : ^^^
>10 : 10
>   : ^^

> : any
> : ^^^

