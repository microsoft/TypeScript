//// [tests/cases/compiler/jsxFragmentWrongType.tsx] ////

=== Performance Stats ===
Type Count: 1,000

=== a.tsx ===
/// <reference path="react18/react18.d.ts" />
/// <reference path="react18/global.d.ts" />

const test = () => "asd";
>test : () => string
>     : ^^^^^^^^^^^^
>() => "asd" : () => string
>            : ^^^^^^^^^^^^
>"asd" : "asd"
>      : ^^^^^

const jsxWithJsxFragment = <>{test}</>;
>jsxWithJsxFragment : JSX.Element
>                   : ^^^^^^^^^^^
><>{test}</> : JSX.Element
>            : ^^^^^^^^^^^
>test : () => string
>     : ^^^^^^^^^^^^

const jsxWithReactFragment = <React.Fragment>{test}</React.Fragment>;
>jsxWithReactFragment : JSX.Element
>                     : ^^^^^^^^^^^
><React.Fragment>{test}</React.Fragment> : JSX.Element
>                                        : ^^^^^^^^^^^
>React.Fragment : React.ExoticComponent<{ children?: React.ReactNode | undefined; }>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Fragment : React.ExoticComponent<{ children?: React.ReactNode | undefined; }>
>         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^
>test : () => string
>     : ^^^^^^^^^^^^
>React.Fragment : React.ExoticComponent<{ children?: React.ReactNode | undefined; }>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Fragment : React.ExoticComponent<{ children?: React.ReactNode | undefined; }>
>         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^

