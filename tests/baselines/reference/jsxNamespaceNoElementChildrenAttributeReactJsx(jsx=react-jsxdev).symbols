//// [tests/cases/compiler/jsxNamespaceNoElementChildrenAttributeReactJsx.tsx] ////

=== /jsx.d.ts ===
declare namespace JSX {
>JSX : Symbol(JSX, Decl(jsx.d.ts, 0, 0))

  interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(jsx.d.ts, 0, 23))

    h1: { children: string }
>h1 : Symbol(IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
>children : Symbol(children, Decl(jsx.d.ts, 2, 9))
  }

  type Element = string;
>Element : Symbol(Element, Decl(jsx.d.ts, 3, 3))
}

=== /test.tsx ===
const Title = (props: { children: string }) => <h1>{props.children}</h1>;
>Title : Symbol(Title, Decl(test.tsx, 0, 5))
>props : Symbol(props, Decl(test.tsx, 0, 15))
>children : Symbol(children, Decl(test.tsx, 0, 23))
>h1 : Symbol(JSX.IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))
>props.children : Symbol(children, Decl(test.tsx, 0, 23))
>props : Symbol(props, Decl(test.tsx, 0, 15))
>children : Symbol(children, Decl(test.tsx, 0, 23))
>h1 : Symbol(JSX.IntrinsicElements.h1, Decl(jsx.d.ts, 1, 31))

const element = <Title>Hello, world!</Title>;
>element : Symbol(element, Decl(test.tsx, 2, 5))
>Title : Symbol(Title, Decl(test.tsx, 0, 5))
>Title : Symbol(Title, Decl(test.tsx, 0, 5))

=== /jsx/jsx-runtime.ts ===

export {};
=== /jsx/jsx-dev-runtime.ts ===

export {};
