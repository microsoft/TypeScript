//// [tests/cases/compiler/library_ObjectPrototypeProperties.ts] ////

=== library_ObjectPrototypeProperties.ts ===
// Properties of the Object Prototype Object as per ES5 spec
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4
Object.prototype.constructor;
>Object.prototype.constructor : Function
>                             : ^^^^^^^^
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>constructor : Function
>            : ^^^^^^^^

Object.prototype.toString();
>Object.prototype.toString() : string
>                            : ^^^^^^
>Object.prototype.toString : () => string
>                          : ^^^^^^      
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>toString : () => string
>         : ^^^^^^      

Object.prototype.toLocaleString();
>Object.prototype.toLocaleString() : string
>                                  : ^^^^^^
>Object.prototype.toLocaleString : () => string
>                                : ^^^^^^      
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>toLocaleString : () => string
>               : ^^^^^^      

Object.prototype.valueOf();
>Object.prototype.valueOf() : Object
>                           : ^^^^^^
>Object.prototype.valueOf : () => Object
>                         : ^^^^^^      
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>valueOf : () => Object
>        : ^^^^^^      

Object.prototype.hasOwnProperty("string");
>Object.prototype.hasOwnProperty("string") : boolean
>                                          : ^^^^^^^
>Object.prototype.hasOwnProperty : (v: PropertyKey) => boolean
>                                : ^ ^^           ^^^^^       
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>hasOwnProperty : (v: PropertyKey) => boolean
>               : ^ ^^           ^^^^^       
>"string" : "string"
>         : ^^^^^^^^

Object.prototype.isPrototypeOf(Object);
>Object.prototype.isPrototypeOf(Object) : boolean
>                                       : ^^^^^^^
>Object.prototype.isPrototypeOf : (v: Object) => boolean
>                               : ^ ^^      ^^^^^       
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>isPrototypeOf : (v: Object) => boolean
>              : ^ ^^      ^^^^^       
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^

Object.prototype.propertyIsEnumerable("string");
>Object.prototype.propertyIsEnumerable("string") : boolean
>                                                : ^^^^^^^
>Object.prototype.propertyIsEnumerable : (v: PropertyKey) => boolean
>                                      : ^ ^^           ^^^^^       
>Object.prototype : Object
>                 : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^
>prototype : Object
>          : ^^^^^^
>propertyIsEnumerable : (v: PropertyKey) => boolean
>                     : ^ ^^           ^^^^^       
>"string" : "string"
>         : ^^^^^^^^

