//// [tests/cases/conformance/types/localTypes/localTypes5.ts] ////

=== localTypes5.ts ===
function foo<A>() {
>foo : Symbol(foo, Decl(localTypes5.ts, 0, 0))
>A : Symbol(A, Decl(localTypes5.ts, 0, 13))

    class X {
>X : Symbol(X, Decl(localTypes5.ts, 0, 19))

        m<B, C>() {
>m : Symbol(X.m, Decl(localTypes5.ts, 1, 13))
>B : Symbol(B, Decl(localTypes5.ts, 2, 10))
>C : Symbol(C, Decl(localTypes5.ts, 2, 12))

            return (function <D>() {
>D : Symbol(D, Decl(localTypes5.ts, 3, 30))

                class Y<E> {
>Y : Symbol(Y, Decl(localTypes5.ts, 3, 36))
>E : Symbol(E, Decl(localTypes5.ts, 4, 24))
                }
                return new Y<string>();
>Y : Symbol(Y, Decl(localTypes5.ts, 3, 36))

            })<Date>();
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
        }
    }
    var x = new X();
>x : Symbol(x, Decl(localTypes5.ts, 10, 7))
>X : Symbol(X, Decl(localTypes5.ts, 0, 19))

    return x.m<number, boolean>();
>x.m : Symbol(X.m, Decl(localTypes5.ts, 1, 13))
>x : Symbol(x, Decl(localTypes5.ts, 10, 7))
>m : Symbol(X.m, Decl(localTypes5.ts, 1, 13))
}
var x = foo<void>();
>x : Symbol(x, Decl(localTypes5.ts, 13, 3))
>foo : Symbol(foo, Decl(localTypes5.ts, 0, 0))

