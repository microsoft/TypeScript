//// [tests/cases/compiler/mappedArrayTupleIntersections2.ts] ////

=== mappedArrayTupleIntersections2.ts ===
// https://github.com/microsoft/TypeScript/issues/59849

type IdentitySpread<t extends readonly unknown[]> = [...{ [i in keyof t]: t[i] }];
>IdentitySpread : [...{ [i in keyof t]: t[i]; }]
>               : ^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^

type Result1 = IdentitySpread<{ name: string } & string[]>;
>Result1 : string[]
>        : ^^^^^^^^
>name : string
>     : ^^^^^^

type Result2 = IdentitySpread<(string | number)[] & ['foo', string, 42]>;
>Result2 : (string | 42)[]
>        : ^^^^^^^^^^^^^^^

type Result3 = IdentitySpread<[string | boolean, string | symbol, ...number[]] & ['foo', string, 43]>;
>Result3 : (string | 43)[]
>        : ^^^^^^^^^^^^^^^

type Result4 = IdentitySpread<[string | boolean, boolean, ...number[]] & ['foo', string, 44]>;
>Result4 : never
>        : ^^^^^

type Box<T> = { value: T };
>Box : Box<T>
>    : ^^^^^^
>value : T
>      : ^

type BoxedSpread<t extends readonly unknown[]> = [...{ [i in keyof t]: Box<t[i]> }];
>BoxedSpread : [...{ [i in keyof t]: Box<t[i]>; }]
>            : ^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^

type Result5 = BoxedSpread<{ name: string } & string[]>;
>Result5 : Box<string>[]
>        : ^^^^^^^^^^^^^
>name : string
>     : ^^^^^^

type Result6 = BoxedSpread<(string | number)[] & ['foo', string, 42]>;
>Result6 : (Box<string | number> & (Box<string> | Box<"foo"> | Box<42>))[]
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

type Result7 = BoxedSpread<[string | boolean, string | symbol, ...number[]] & ['foo', string, 43]>;
>Result7 : ((Box<string | boolean> & Box<"foo">) | (Box<string | symbol> & Box<string>) | (Box<string | boolean> & Box<string>) | (Box<string | symbol> & Box<"foo">) | (Box<number> & Box<string>) | (Box<number> & Box<43>))[]
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

type Result8 = BoxedSpread<[string | boolean, boolean, ...number[]] & ['foo', string, 44]>;
>Result8 : never
>        : ^^^^^

