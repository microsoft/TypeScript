//// [tests/cases/compiler/mappedTypeIndexedAccess.ts] ////

=== mappedTypeIndexedAccess.ts ===
// Repro from #15756

type Pairs<T> = {
>Pairs : Pairs<T>
>      : ^^^^^^^^

    [TKey in keyof T]: {
        key: TKey;
>key : TKey
>    : ^^^^

        value: T[TKey];
>value : T[TKey]
>      : ^^^^^^^

    };
};

type Pair<T> = Pairs<T>[keyof T];
>Pair : Pair<T>
>     : ^^^^^^^

type FooBar = {
>FooBar : FooBar
>       : ^^^^^^

    foo: string;
>foo : string
>    : ^^^^^^

    bar: number;
>bar : number
>    : ^^^^^^

};

// Error expected here
let pair1: Pair<FooBar> = {
>pair1 : Pair<FooBar>
>      : ^^^^^^^^^^^^
>{    key: "foo",    value: 3} : { key: "foo"; value: number; }
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    key: "foo",
>key : "foo"
>    : ^^^^^
>"foo" : "foo"
>      : ^^^^^

    value: 3
>value : number
>      : ^^^^^^
>3 : 3
>  : ^

};

// Error expected here
let pair2: Pairs<FooBar>[keyof FooBar] = {
>pair2 : { key: "foo"; value: string; } | { key: "bar"; value: number; }
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    key: "foo",    value: 3} : { key: "foo"; value: number; }
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    key: "foo",
>key : "foo"
>    : ^^^^^
>"foo" : "foo"
>      : ^^^^^

    value: 3
>value : number
>      : ^^^^^^
>3 : 3
>  : ^

};

