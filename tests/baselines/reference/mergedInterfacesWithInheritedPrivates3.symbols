//// [tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithInheritedPrivates3.ts] ////

=== mergedInterfacesWithInheritedPrivates3.ts ===
class C {
>C : Symbol(C, Decl(mergedInterfacesWithInheritedPrivates3.ts, 0, 0))

    private x: number;
>x : Symbol(C.x, Decl(mergedInterfacesWithInheritedPrivates3.ts, 0, 9))
}

class C2 {
>C2 : Symbol(C2, Decl(mergedInterfacesWithInheritedPrivates3.ts, 2, 1))

    private x: number;
>x : Symbol(C2.x, Decl(mergedInterfacesWithInheritedPrivates3.ts, 4, 10))
}

interface A extends C { // error
>A : Symbol(A, Decl(mergedInterfacesWithInheritedPrivates3.ts, 6, 1), Decl(mergedInterfacesWithInheritedPrivates3.ts, 10, 1))
>C : Symbol(C, Decl(mergedInterfacesWithInheritedPrivates3.ts, 0, 0))

    y: string;
>y : Symbol(A.y, Decl(mergedInterfacesWithInheritedPrivates3.ts, 8, 23))
}

interface A extends C2 { 
>A : Symbol(A, Decl(mergedInterfacesWithInheritedPrivates3.ts, 6, 1), Decl(mergedInterfacesWithInheritedPrivates3.ts, 10, 1))
>C2 : Symbol(C2, Decl(mergedInterfacesWithInheritedPrivates3.ts, 2, 1))

    z: string;
>z : Symbol(A.z, Decl(mergedInterfacesWithInheritedPrivates3.ts, 12, 24))
}

class D extends C implements A { // error
>D : Symbol(D, Decl(mergedInterfacesWithInheritedPrivates3.ts, 14, 1))
>C : Symbol(C, Decl(mergedInterfacesWithInheritedPrivates3.ts, 0, 0))
>A : Symbol(A, Decl(mergedInterfacesWithInheritedPrivates3.ts, 6, 1), Decl(mergedInterfacesWithInheritedPrivates3.ts, 10, 1))

    y: string;
>y : Symbol(D.y, Decl(mergedInterfacesWithInheritedPrivates3.ts, 16, 32))

    z: string;
>z : Symbol(D.z, Decl(mergedInterfacesWithInheritedPrivates3.ts, 17, 14))
}

namespace M {
>M : Symbol(M, Decl(mergedInterfacesWithInheritedPrivates3.ts, 19, 1))

    class C {
>C : Symbol(C, Decl(mergedInterfacesWithInheritedPrivates3.ts, 21, 13))

        private x: string;
>x : Symbol(C.x, Decl(mergedInterfacesWithInheritedPrivates3.ts, 22, 13))
    }

    class C2 {
>C2 : Symbol(C2, Decl(mergedInterfacesWithInheritedPrivates3.ts, 24, 5))

        private x: number;
>x : Symbol(C2.x, Decl(mergedInterfacesWithInheritedPrivates3.ts, 26, 14))
    }

    interface A extends C { // error, privates conflict
>A : Symbol(A, Decl(mergedInterfacesWithInheritedPrivates3.ts, 28, 5), Decl(mergedInterfacesWithInheritedPrivates3.ts, 32, 5))
>C : Symbol(C, Decl(mergedInterfacesWithInheritedPrivates3.ts, 21, 13))

        y: string;
>y : Symbol(A.y, Decl(mergedInterfacesWithInheritedPrivates3.ts, 30, 27))
    }

    interface A extends C2 {
>A : Symbol(A, Decl(mergedInterfacesWithInheritedPrivates3.ts, 28, 5), Decl(mergedInterfacesWithInheritedPrivates3.ts, 32, 5))
>C2 : Symbol(C2, Decl(mergedInterfacesWithInheritedPrivates3.ts, 24, 5))

        z: string;
>z : Symbol(A.z, Decl(mergedInterfacesWithInheritedPrivates3.ts, 34, 28))
    }
}
