//// [tests/cases/compiler/mergedModuleDeclarationCodeGen4.ts] ////

=== mergedModuleDeclarationCodeGen4.ts ===
namespace superContain {
>superContain : Symbol(superContain, Decl(mergedModuleDeclarationCodeGen4.ts, 0, 0))

    export namespace contain {
>contain : Symbol(contain, Decl(mergedModuleDeclarationCodeGen4.ts, 0, 24))

        export namespace my.buz {
>my : Symbol(my, Decl(mergedModuleDeclarationCodeGen4.ts, 1, 30), Decl(mergedModuleDeclarationCodeGen4.ts, 6, 9))
>buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 28), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 28))

            export namespace data {
>data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 33), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 33))

                export function foo() { }
>foo : Symbol(foo, Decl(mergedModuleDeclarationCodeGen4.ts, 3, 35))
            }
        }
        export namespace my.buz {
>my : Symbol(my, Decl(mergedModuleDeclarationCodeGen4.ts, 1, 30), Decl(mergedModuleDeclarationCodeGen4.ts, 6, 9))
>buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 28), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 28))

            export namespace data {
>data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 2, 33), Decl(mergedModuleDeclarationCodeGen4.ts, 7, 33))

                export function bar(contain, my, buz, data) {
>bar : Symbol(bar, Decl(mergedModuleDeclarationCodeGen4.ts, 8, 35))
>contain : Symbol(contain, Decl(mergedModuleDeclarationCodeGen4.ts, 9, 36))
>my : Symbol(my, Decl(mergedModuleDeclarationCodeGen4.ts, 9, 44))
>buz : Symbol(buz, Decl(mergedModuleDeclarationCodeGen4.ts, 9, 48))
>data : Symbol(data, Decl(mergedModuleDeclarationCodeGen4.ts, 9, 53))

                    foo();
>foo : Symbol(foo, Decl(mergedModuleDeclarationCodeGen4.ts, 3, 35))
                }
            }
        }
    }
}
