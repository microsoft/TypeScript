//// [tests/cases/compiler/missingImportAfterModuleImport.ts] ////

=== missingImportAfterModuleImport_1.ts ===
///<reference path='missingImportAfterModuleImport_0.ts' preserve="true" />
import SubModule = require('SubModule');
>SubModule : Symbol(SubModule, Decl(missingImportAfterModuleImport_1.ts, 0, 0))

class MainModule {
>MainModule : Symbol(MainModule, Decl(missingImportAfterModuleImport_1.ts, 1, 40))

    // public static SubModule: SubModule;
    public SubModule: SubModule;
>SubModule : Symbol(MainModule.SubModule, Decl(missingImportAfterModuleImport_1.ts, 2, 18))
>SubModule : Symbol(SubModule, Decl(missingImportAfterModuleImport_1.ts, 0, 0))

    constructor() { }
}
export = MainModule;
>MainModule : Symbol(MainModule, Decl(missingImportAfterModuleImport_1.ts, 1, 40))


=== missingImportAfterModuleImport_0.ts ===
declare module "SubModule" {
>"SubModule" : Symbol("SubModule", Decl(missingImportAfterModuleImport_0.ts, 0, 0))

    class SubModule {
>SubModule : Symbol(SubModule, Decl(missingImportAfterModuleImport_0.ts, 0, 28))

        public static StaticVar: number;
>StaticVar : Symbol(SubModule.StaticVar, Decl(missingImportAfterModuleImport_0.ts, 1, 21))

        public InstanceVar: number;
>InstanceVar : Symbol(SubModule.InstanceVar, Decl(missingImportAfterModuleImport_0.ts, 2, 40))

        constructor();
    }
    export = SubModule;
>SubModule : Symbol(SubModule, Decl(missingImportAfterModuleImport_0.ts, 0, 28))
}

