//// [tests/cases/compiler/missingTypeArguments1.ts] ////

=== missingTypeArguments1.ts ===
interface I<T> { }
class Y<T> {}
>Y : Y<T>
>  : ^^^^

class X<T> {
>X : X<T>
>  : ^^^^

    p1: () => X;
>p1 : () => X
>   : ^^^^^^ 
}
var a: X<number>;
>a : X<number>
>  : ^^^^^^^^^

class X2<T> {
>X2 : X2<T>
>   : ^^^^^

    p2: { [idx: number]: X2 } 
>p2 : { [idx: number]: any; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^
>idx : number
>    : ^^^^^^
}
var a2: X2<number>;
>a2 : X2<number>
>   : ^^^^^^^^^^

class X3<T> {
>X3 : X3<T>
>   : ^^^^^

    p3: X3[]
>p3 : any[]
>   : ^^^^^
}
var a3: X3<number>;
>a3 : X3<number>
>   : ^^^^^^^^^^

class X4<T> {
>X4 : X4<T>
>   : ^^^^^

    p4: I<X4>
>p4 : I<any>
>   : ^^^^^^
}
var a4: X4<number>;
>a4 : X4<number>
>   : ^^^^^^^^^^

class X5<T> {
>X5 : X5<T>
>   : ^^^^^

    p5: X5
>p5 : any
>   : ^^^
}
var a5: X5<number>;
>a5 : X5<number>
>   : ^^^^^^^^^^

class X6<T> {
>X6 : X6<T>
>   : ^^^^^

    p6: () => Y;
>p6 : () => Y
>   : ^^^^^^ 
}
var a6: X6<number>;
>a6 : X6<number>
>   : ^^^^^^^^^^

class X7<T> {
>X7 : X7<T>
>   : ^^^^^

    p7: { [idx: number]: Y } 
>p7 : { [idx: number]: any; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^
>idx : number
>    : ^^^^^^
}
var a7: X7<number>;
>a7 : X7<number>
>   : ^^^^^^^^^^

class X8<T> {
>X8 : X8<T>
>   : ^^^^^

    p8: Y[]
>p8 : any[]
>   : ^^^^^
}
var a8: X8<number>;
>a8 : X8<number>
>   : ^^^^^^^^^^

class X9<T> {
>X9 : X9<T>
>   : ^^^^^

    p9: I<Y>
>p9 : I<any>
>   : ^^^^^^
}
var a9: X9<number>;
>a9 : X9<number>
>   : ^^^^^^^^^^

class X10<T> {
>X10 : X10<T>
>    : ^^^^^^

    pa: Y
>pa : any
>   : ^^^
}
var a10: X10<number>;
>a10 : X10<number>
>    : ^^^^^^^^^^^

 

