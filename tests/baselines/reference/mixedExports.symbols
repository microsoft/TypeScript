//// [tests/cases/compiler/mixedExports.ts] ////

=== mixedExports.ts ===
declare namespace M {
>M : Symbol(M, Decl(mixedExports.ts, 0, 0))

     function foo();
>foo : Symbol(foo, Decl(mixedExports.ts, 0, 21), Decl(mixedExports.ts, 1, 20), Decl(mixedExports.ts, 2, 27))

     export function foo();
>foo : Symbol(foo, Decl(mixedExports.ts, 0, 21), Decl(mixedExports.ts, 1, 20), Decl(mixedExports.ts, 2, 27))

     function foo();
>foo : Symbol(foo, Decl(mixedExports.ts, 0, 21), Decl(mixedExports.ts, 1, 20), Decl(mixedExports.ts, 2, 27))
}

declare namespace M1 {
>M1 : Symbol(M1, Decl(mixedExports.ts, 4, 1))

     export interface Foo {}
>Foo : Symbol(Foo, Decl(mixedExports.ts, 6, 22), Decl(mixedExports.ts, 7, 28))

     interface Foo {}
>Foo : Symbol(Foo, Decl(mixedExports.ts, 6, 22), Decl(mixedExports.ts, 7, 28))
}

namespace A {
>A : Symbol(A, Decl(mixedExports.ts, 9, 1))

     interface X {x}
>X : Symbol(X, Decl(mixedExports.ts, 11, 13), Decl(mixedExports.ts, 12, 20), Decl(mixedExports.ts, 13, 26))
>x : Symbol(X.x, Decl(mixedExports.ts, 12, 18))

     export namespace X {}
>X : Symbol(X, Decl(mixedExports.ts, 12, 20))

     interface X {y}
>X : Symbol(X, Decl(mixedExports.ts, 11, 13), Decl(mixedExports.ts, 12, 20), Decl(mixedExports.ts, 13, 26))
>y : Symbol(X.y, Decl(mixedExports.ts, 14, 18))
}
