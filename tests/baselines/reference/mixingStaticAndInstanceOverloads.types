//// [tests/cases/compiler/mixingStaticAndInstanceOverloads.ts] ////

=== mixingStaticAndInstanceOverloads.ts ===
class C1 {
>C1 : C1
>   : ^^

    // ERROR
    foo1(n: number);
>foo1 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>n : number
>  : ^^^^^^

    foo1(s: string);
>foo1 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>s : string
>  : ^^^^^^

    static foo1(a) { }
>foo1 : (a: any) => void
>     : ^ ^^^^^^^^^^^^^^
>a : any
>  : ^^^
}
class C2 {
>C2 : C2
>   : ^^

    // ERROR
    static foo2(n: number);
>foo2 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>n : number
>  : ^^^^^^

    static foo2(s: string);
>foo2 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>s : string
>  : ^^^^^^

    foo2(a) { }
>foo2 : (a: any) => void
>     : ^ ^^^^^^^^^^^^^^
>a : any
>  : ^^^
}
class C3 {
>C3 : C3
>   : ^^

    // ERROR
    foo3(n: number);
>foo3 : { (n: number): any; (a: any): void; }
>     : ^^^ ^^      ^^^^^^^^^ ^^^^^^^^^^^^^^^
>n : number
>  : ^^^^^^

    static foo3(s: string);
>foo3 : (s: string) => any
>     : ^ ^^      ^^^^^^^^
>s : string
>  : ^^^^^^

    foo3(a) { }
>foo3 : { (n: number): any; (a: any): void; }
>     : ^^^ ^^      ^^^^^^^^^ ^^^^^^^^^^^^^^^
>a : any
>  : ^^^
}
class C4 {
>C4 : C4
>   : ^^

    // ERROR
    static foo4(n: number);
>foo4 : { (n: number): any; (a: any): void; }
>     : ^^^ ^^      ^^^^^^^^^ ^^^^^^^^^^^^^^^
>n : number
>  : ^^^^^^

    foo4(s: string);
>foo4 : (s: string) => any
>     : ^ ^^      ^^^^^^^^
>s : string
>  : ^^^^^^

    static foo4(a) { }
>foo4 : { (n: number): any; (a: any): void; }
>     : ^^^ ^^      ^^^^^^^^^ ^^^^^^^^^^^^^^^
>a : any
>  : ^^^
}
class C5 {
>C5 : C5
>   : ^^

    // OK
    foo5(n: number);
>foo5 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>n : number
>  : ^^^^^^

    foo5(s: string);
>foo5 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>s : string
>  : ^^^^^^

    foo5(a) { }
>foo5 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>a : any
>  : ^^^

    // OK
    static foo5(n: number);
>foo5 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>n : number
>  : ^^^^^^

    static foo5(s: string);
>foo5 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>s : string
>  : ^^^^^^

    static foo5(a) { }
>foo5 : { (n: number): any; (s: string): any; }
>     : ^^^ ^^      ^^^^^^^^^ ^^      ^^^^^^^^^
>a : any
>  : ^^^
}
