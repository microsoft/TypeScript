//// [tests/cases/compiler/moduleAndInterfaceWithSameName.ts] ////

=== moduleAndInterfaceWithSameName.ts ===
namespace Foo1 {
>Foo1 : Symbol(Foo1, Decl(moduleAndInterfaceWithSameName.ts, 0, 0))

    export namespace Bar {
>Bar : Symbol(Bar, Decl(moduleAndInterfaceWithSameName.ts, 0, 16), Decl(moduleAndInterfaceWithSameName.ts, 3, 5))

        export var x = 42;
>x : Symbol(x, Decl(moduleAndInterfaceWithSameName.ts, 2, 18))
    }

    export interface Bar { 
>Bar : Symbol(Bar, Decl(moduleAndInterfaceWithSameName.ts, 0, 16), Decl(moduleAndInterfaceWithSameName.ts, 3, 5))

        y: string;
>y : Symbol(Bar.y, Decl(moduleAndInterfaceWithSameName.ts, 5, 26))
    }
}

namespace Foo2 {
>Foo2 : Symbol(Foo2, Decl(moduleAndInterfaceWithSameName.ts, 8, 1))

    namespace Bar {
>Bar : Symbol(Bar, Decl(moduleAndInterfaceWithSameName.ts, 10, 16), Decl(moduleAndInterfaceWithSameName.ts, 13, 5))

        export var x = 42;
>x : Symbol(x, Decl(moduleAndInterfaceWithSameName.ts, 12, 18))
    }

    export interface Bar {
>Bar : Symbol(Bar, Decl(moduleAndInterfaceWithSameName.ts, 13, 5))

        y: string;
>y : Symbol(Foo2.Bar.y, Decl(moduleAndInterfaceWithSameName.ts, 15, 26))
    }
}

var z2 = Foo2.Bar.y; // Error for using interface name as a value.
>z2 : Symbol(z2, Decl(moduleAndInterfaceWithSameName.ts, 20, 3))
>Foo2 : Symbol(Foo2, Decl(moduleAndInterfaceWithSameName.ts, 8, 1))

namespace Foo3 {
>Foo3 : Symbol(Foo3, Decl(moduleAndInterfaceWithSameName.ts, 20, 20))

    export namespace Bar {
>Bar : Symbol(Bar, Decl(moduleAndInterfaceWithSameName.ts, 22, 16))

        export var x = 42;
>x : Symbol(x, Decl(moduleAndInterfaceWithSameName.ts, 24, 18))
    }

    interface Bar { 
>Bar : Symbol(Bar, Decl(moduleAndInterfaceWithSameName.ts, 22, 16), Decl(moduleAndInterfaceWithSameName.ts, 25, 5))

        y: string;
>y : Symbol(Bar.y, Decl(moduleAndInterfaceWithSameName.ts, 27, 19))
    }
}
