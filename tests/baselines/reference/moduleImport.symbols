//// [tests/cases/compiler/moduleImport.ts] ////

=== moduleImport.ts ===
namespace A.B.C {
>A : Symbol(A, Decl(moduleImport.ts, 0, 0))
>B : Symbol(B, Decl(moduleImport.ts, 0, 12))
>C : Symbol(C, Decl(moduleImport.ts, 0, 14))

	import XYZ = X.Y.Z;
>XYZ : Symbol(XYZ, Decl(moduleImport.ts, 0, 17))
>X : Symbol(X, Decl(moduleImport.ts, 5, 1))

	export function ping(x: number) {
>ping : Symbol(ping, Decl(moduleImport.ts, 1, 20))
>x : Symbol(x, Decl(moduleImport.ts, 2, 22))

		if (x>0) XYZ.pong (x-1);
>x : Symbol(x, Decl(moduleImport.ts, 2, 22))
>XYZ : Symbol(XYZ, Decl(moduleImport.ts, 0, 17))
>x : Symbol(x, Decl(moduleImport.ts, 2, 22))
	}
}

namespace X {
>X : Symbol(X, Decl(moduleImport.ts, 5, 1))

	import ABC = A.B.C;
>ABC : Symbol(ABC, Decl(moduleImport.ts, 7, 13))
>A : Symbol(A, Decl(moduleImport.ts, 0, 0))
>B : Symbol(A.B, Decl(moduleImport.ts, 0, 12))
>C : Symbol(ABC, Decl(moduleImport.ts, 0, 14))

	export function pong(x: number) {
>pong : Symbol(pong, Decl(moduleImport.ts, 8, 20))
>x : Symbol(x, Decl(moduleImport.ts, 9, 22))

		if (x > 0) ABC.ping(x-1);
>x : Symbol(x, Decl(moduleImport.ts, 9, 22))
>ABC.ping : Symbol(ABC.ping, Decl(moduleImport.ts, 1, 20))
>ABC : Symbol(ABC, Decl(moduleImport.ts, 7, 13))
>ping : Symbol(ABC.ping, Decl(moduleImport.ts, 1, 20))
>x : Symbol(x, Decl(moduleImport.ts, 9, 22))
	}
}
