//// [tests/cases/compiler/moduleMerge.ts] ////

=== moduleMerge.ts ===
// This should not compile both B classes are in the same module this should be a collission

namespace A
>A : Symbol(A, Decl(moduleMerge.ts, 0, 0), Decl(moduleMerge.ts, 11, 1))
{
    class B
>B : Symbol(B, Decl(moduleMerge.ts, 3, 1))
    {
        public Hello(): string
>Hello : Symbol(B.Hello, Decl(moduleMerge.ts, 5, 5))
        {
            return "from private B";
        }
    }
}

namespace A
>A : Symbol(A, Decl(moduleMerge.ts, 0, 0), Decl(moduleMerge.ts, 11, 1))
{
    export class B
>B : Symbol(B, Decl(moduleMerge.ts, 14, 1))
    {
        public Hello(): string
>Hello : Symbol(B.Hello, Decl(moduleMerge.ts, 16, 5))
        {
            return "from export B";
        }
    }
}
