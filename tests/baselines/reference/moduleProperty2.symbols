//// [tests/cases/compiler/moduleProperty2.ts] ////

=== moduleProperty2.ts ===
namespace M {
>M : Symbol(M, Decl(moduleProperty2.ts, 0, 0))

    function f() {
>f : Symbol(f, Decl(moduleProperty2.ts, 0, 13))

        var x;
>x : Symbol(x, Decl(moduleProperty2.ts, 2, 11))
    }
    var y;
>y : Symbol(y, Decl(moduleProperty2.ts, 4, 7))

    export var z;
>z : Symbol(z, Decl(moduleProperty2.ts, 5, 14))

    var test1=x;
>test1 : Symbol(test1, Decl(moduleProperty2.ts, 6, 7))

    var test2=y; // y visible because same module
>test2 : Symbol(test2, Decl(moduleProperty2.ts, 7, 7))
>y : Symbol(y, Decl(moduleProperty2.ts, 4, 7))
}

namespace N {
>N : Symbol(N, Decl(moduleProperty2.ts, 8, 1))

    var test3=M.y; // nope y private property of M
>test3 : Symbol(test3, Decl(moduleProperty2.ts, 11, 7))
>M : Symbol(M, Decl(moduleProperty2.ts, 0, 0))

    var test4=M.z; // ok public property of M
>test4 : Symbol(test4, Decl(moduleProperty2.ts, 12, 7))
>M.z : Symbol(M.z, Decl(moduleProperty2.ts, 5, 14))
>M : Symbol(M, Decl(moduleProperty2.ts, 0, 0))
>z : Symbol(M.z, Decl(moduleProperty2.ts, 5, 14))
}
