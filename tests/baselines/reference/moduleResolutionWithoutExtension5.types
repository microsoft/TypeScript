//// [tests/cases/conformance/externalModules/moduleResolutionWithoutExtension5.ts] ////

=== /src/buzz.mts ===
// Extensionless relative path dynamic import in an ES module
import("./foo").then(x => x); // should error, ask for extension
>import("./foo").then(x => x) : Promise<any>
>                             : ^^^^^^^^^^^^
>import("./foo").then : <TResult1 = any, TResult2 = never>(onfulfilled?: (value: any) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>) => Promise<TResult1 | TResult2>
>                     : ^        ^^^^^^^^        ^^^^^^^^^^           ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^          ^^^^      ^^   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>import("./foo") : Promise<any>
>                : ^^^^^^^^^^^^
>"./foo" : "./foo"
>        : ^^^^^^^
>then : <TResult1 = any, TResult2 = never>(onfulfilled?: (value: any) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<TResult2>) => Promise<TResult1 | TResult2>
>     : ^        ^^^^^^^^        ^^^^^^^^^^           ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^          ^^^^      ^^   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x => x : (x: any) => any
>       : ^ ^^^^^^^^^^^^^
>x : any
>  : ^^^
>x : any
>  : ^^^

