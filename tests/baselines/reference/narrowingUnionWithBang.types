//// [tests/cases/compiler/narrowingUnionWithBang.ts] ////

=== narrowingUnionWithBang.ts ===
type WorkingType = {
>WorkingType : WorkingType
>            : ^^^^^^^^^^^

    thing?:
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; } | { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^

    { name: 'Error1', message: string } |
>name : "Error1"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error2', message: string } |
>name : "Error2"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error3', message: string } |
>name : "Error3"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error4', message: string } |
>name : "Error4"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error5', message: string } |
>name : "Error5"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error6', message: string } |
>name : "Error6"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error7', message: string } |
>name : "Error7"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error8', message: string } |
>name : "Error8"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error9', message: string } |
>name : "Error9"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Correct', id: string }
>name : "Correct"
>     : ^^^^^^^^^
>id : string
>   : ^^^^^^

};
const working: WorkingType = null as unknown as WorkingType;
>working : WorkingType
>        : ^^^^^^^^^^^
>null as unknown as WorkingType : WorkingType
>                               : ^^^^^^^^^^^
>null as unknown : unknown
>                : ^^^^^^^

if (working.thing!.name !== "Correct") {
>working.thing!.name !== "Correct" : boolean
>                                  : ^^^^^^^
>working.thing!.name : "Error1" | "Error2" | "Error3" | "Error4" | "Error5" | "Error6" | "Error7" | "Error8" | "Error9" | "Correct"
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>working.thing! : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; } | { name: "Correct"; id: string; }
>               : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^
>working.thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; } | { name: "Correct"; id: string; } | undefined
>              : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>working : WorkingType
>        : ^^^^^^^^^^^
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; } | { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>name : "Error1" | "Error2" | "Error3" | "Error4" | "Error5" | "Error6" | "Error7" | "Error8" | "Error9" | "Correct"
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"Correct" : "Correct"
>          : ^^^^^^^^^

    console.log(working.thing!.message)
>console.log(working.thing!.message) : void
>                                    : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>working.thing!.message : string
>                       : ^^^^^^
>working.thing! : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; }
>               : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^
>working.thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; } | undefined
>              : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>working : WorkingType
>        : ^^^^^^^^^^^
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Error9"; message: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>message : string
>        : ^^^^^^

} else {
    console.log(working.thing!.id);
>console.log(working.thing!.id) : void
>                               : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>working.thing!.id : string
>                  : ^^^^^^
>working.thing! : { name: "Correct"; id: string; }
>               : ^^^^^^^^         ^^^^^^      ^^^
>working.thing : { name: "Correct"; id: string; }
>              : ^^^^^^^^         ^^^^^^      ^^^
>working : WorkingType
>        : ^^^^^^^^^^^
>thing : { name: "Correct"; id: string; }
>      : ^^^^^^^^         ^^^^^^      ^^^
>id : string
>   : ^^^^^^
}

type BorkedType = {
>BorkedType : BorkedType
>           : ^^^^^^^^^^

    thing?:
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^

    { name: 'Error1', message: string } |
>name : "Error1"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error2', message: string } |
>name : "Error2"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error3', message: string } |
>name : "Error3"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error4', message: string } |
>name : "Error4"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error5', message: string } |
>name : "Error5"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error6', message: string } |
>name : "Error6"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error7', message: string } |
>name : "Error7"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error8', message: string } |
>name : "Error8"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Correct', id: string }
>name : "Correct"
>     : ^^^^^^^^^
>id : string
>   : ^^^^^^

};
const borked: BorkedType = null as unknown as BorkedType;
>borked : BorkedType
>       : ^^^^^^^^^^
>null as unknown as BorkedType : BorkedType
>                              : ^^^^^^^^^^
>null as unknown : unknown
>                : ^^^^^^^

if (borked.thing!.name !== "Correct") {
>borked.thing!.name !== "Correct" : boolean
>                                 : ^^^^^^^
>borked.thing!.name : "Error1" | "Error2" | "Error3" | "Error4" | "Error5" | "Error6" | "Error7" | "Error8" | "Correct"
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>borked.thing! : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; }
>              : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^
>borked.thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; } | undefined
>             : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>borked : BorkedType
>       : ^^^^^^^^^^
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>name : "Error1" | "Error2" | "Error3" | "Error4" | "Error5" | "Error6" | "Error7" | "Error8" | "Correct"
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"Correct" : "Correct"
>          : ^^^^^^^^^

    console.log(borked.thing!.message);
>console.log(borked.thing!.message) : void
>                                   : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>borked.thing!.message : string
>                      : ^^^^^^
>borked.thing! : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; }
>              : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^
>borked.thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | undefined
>             : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>borked : BorkedType
>       : ^^^^^^^^^^
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>message : string
>        : ^^^^^^

} else {
    console.log(borked.thing!.id);
>console.log(borked.thing!.id) : void
>                              : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>borked.thing!.id : string
>                 : ^^^^^^
>borked.thing! : { name: "Correct"; id: string; }
>              : ^^^^^^^^         ^^^^^^      ^^^
>borked.thing : { name: "Correct"; id: string; } | undefined
>             : ^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>borked : BorkedType
>       : ^^^^^^^^^^
>thing : { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>id : string
>   : ^^^^^^
}

export type FixedType = {
>FixedType : FixedType
>          : ^^^^^^^^^

    thing?:
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^

    { name: 'Error1', message: string } |
>name : "Error1"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error2', message: string } |
>name : "Error2"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error3', message: string } |
>name : "Error3"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error4', message: string } |
>name : "Error4"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error5', message: string } |
>name : "Error5"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error6', message: string } |
>name : "Error6"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error7', message: string } |
>name : "Error7"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Error8', message: string } |
>name : "Error8"
>     : ^^^^^^^^
>message : string
>        : ^^^^^^

    { name: 'Correct', id: string }
>name : "Correct"
>     : ^^^^^^^^^
>id : string
>   : ^^^^^^

};
const fixed: FixedType = null as unknown as FixedType;
>fixed : FixedType
>      : ^^^^^^^^^
>null as unknown as FixedType : FixedType
>                             : ^^^^^^^^^
>null as unknown : unknown
>                : ^^^^^^^

if (fixed.thing?.name !== "Correct") {
>fixed.thing?.name !== "Correct" : boolean
>                                : ^^^^^^^
>fixed.thing?.name : "Error1" | "Error2" | "Error3" | "Error4" | "Error5" | "Error6" | "Error7" | "Error8" | "Correct" | undefined
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>fixed.thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; } | undefined
>            : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>fixed : FixedType
>      : ^^^^^^^^^
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | { name: "Correct"; id: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^         ^^^^^^      ^^^^^^^^^^^^^^^
>name : "Error1" | "Error2" | "Error3" | "Error4" | "Error5" | "Error6" | "Error7" | "Error8" | "Correct" | undefined
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"Correct" : "Correct"
>          : ^^^^^^^^^

    console.log(fixed.thing!.message);
>console.log(fixed.thing!.message) : void
>                                  : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>fixed.thing!.message : string
>                     : ^^^^^^
>fixed.thing! : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; }
>             : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^
>fixed.thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | undefined
>            : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>fixed : FixedType
>      : ^^^^^^^^^
>thing : { name: "Error1"; message: string; } | { name: "Error2"; message: string; } | { name: "Error3"; message: string; } | { name: "Error4"; message: string; } | { name: "Error5"; message: string; } | { name: "Error6"; message: string; } | { name: "Error7"; message: string; } | { name: "Error8"; message: string; } | undefined
>      : ^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^        ^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>message : string
>        : ^^^^^^

} else {
    console.log(fixed.thing.id);
>console.log(fixed.thing.id) : void
>                            : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>fixed.thing.id : string
>               : ^^^^^^
>fixed.thing : { name: "Correct"; id: string; }
>            : ^^^^^^^^         ^^^^^^      ^^^
>fixed : FixedType
>      : ^^^^^^^^^
>thing : { name: "Correct"; id: string; }
>      : ^^^^^^^^         ^^^^^^      ^^^
>id : string
>   : ^^^^^^
}
