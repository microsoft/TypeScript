negateOperatorWithNumberType.ts(11,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
negateOperatorWithNumberType.ts(41,1): error TS2695: Left side of comma operator is unused and has no side effects.


==== negateOperatorWithNumberType.ts (2 errors) ====
    // - operator on number type
    var NUMBER: number;
    var NUMBER1: number[] = [1, 2];
    
    function foo(): number { return 1; }
    
    class A {
        public a: number;
        static foo() { return 1; }
    }
    module M {
           ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export var n: number;
    }
    
    var objA = new A();
    
    // number type var
    var ResultIsNumber1 = -NUMBER;
    var ResultIsNumber2 = -NUMBER1;
    
    // number type literal
    var ResultIsNumber3 = -1;
    var ResultIsNumber4 = -{ x: 1, y: 2};
    var ResultIsNumber5 = -{ x: 1, y: (n: number) => { return n; } };
    
    // number type expressions
    var ResultIsNumber6 = -objA.a;
    var ResultIsNumber7 = -M.n;
    var ResultIsNumber8 = -NUMBER1[0];
    var ResultIsNumber9 = -foo();
    var ResultIsNumber10 = -A.foo();
    var ResultIsNumber11 = -(NUMBER - NUMBER);
    
    // miss assignment operators
    -1;
    -NUMBER;
    -NUMBER1;
    -foo();
    -objA.a;
    -M.n;
    -objA.a, M.n;
    ~~~~~~~
!!! error TS2695: Left side of comma operator is unused and has no side effects.