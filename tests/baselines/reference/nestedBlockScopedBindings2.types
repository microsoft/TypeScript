//// [tests/cases/compiler/nestedBlockScopedBindings2.ts] ////

=== nestedBlockScopedBindings2.ts ===
function a0() {
>a0 : () => void
>   : ^^^^^^^^^^
    {
        let x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

        () => x;
>() => x : () => number
>        : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^
    }
    {
        let x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
    }
}

function a1() {
>a1 : () => void
>   : ^^^^^^^^^^
    {
        let x;
>x : any
    }
    {
        let x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

        () => x;
>() => x : () => number
>        : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^
    }
}

function a2() {
>a2 : () => void
>   : ^^^^^^^^^^
    {
        let x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

        () => x;
>() => x : () => number
>        : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^
    }
    {
        let x;
>x : any

        () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
    }
}


function a3() {
>a3 : () => void
>   : ^^^^^^^^^^
    {
        let x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

        () => x;
>() => x : () => number
>        : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
}


function a4() {
>a4 : () => void
>   : ^^^^^^^^^^
    {
        let x;
>x : any
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
}


function a5() {
>a5 : () => void
>   : ^^^^^^^^^^
    {
        let x;
>x : any

        () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
}

function a6() {
>a6 : () => void
>   : ^^^^^^^^^^

    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
}

function a7() {
>a7 : () => void
>   : ^^^^^^^^^^

    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
}

function a8() {
>a8 : () => void
>   : ^^^^^^^^^^

    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
}

function a9() {
>a9 : () => void
>   : ^^^^^^^^^^

    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
}

