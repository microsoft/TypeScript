//// [tests/cases/compiler/nestedBlockScopedBindings3.ts] ////

=== nestedBlockScopedBindings3.ts ===
function a0() {
>a0 : () => void
>   : ^^^^^^^^^^
    {
        for (let x = 0; x < 1; ) {
>x : number
>  : ^^^^^^
>0 : 0
>  : ^
>x < 1 : boolean
>      : ^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

            () => x;
>() => x : () => number
>        : ^^^^^^^^^^^^
>x : number
>  : ^^^^^^
        }
    }
    {
        for (let x;;) {
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
        }
    }
}

function a1() {
>a1 : () => void
>   : ^^^^^^^^^^

    for (let x; x < 1;) {
>x : any
>x < 1 : boolean
>      : ^^^^^^^
>x : any
>1 : 1
>  : ^

        () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
    }
    for (let x;;) {
>x : any

        () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
    }
}

function a2() {
>a2 : () => void
>   : ^^^^^^^^^^

    for (let x; x < 1;) {
>x : any
>x < 1 : boolean
>      : ^^^^^^^
>x : any
>1 : 1
>  : ^

        x = x + 1;
>x = x + 1 : any
>x : any
>x + 1 : any
>x : any
>1 : 1
>  : ^
    }
    for (let x;;) {
>x : any

        x = x + 2;
>x = x + 2 : any
>x : any
>x + 2 : any
>x : any
>2 : 2
>  : ^
    }
}


function a3() {
>a3 : () => void
>   : ^^^^^^^^^^

    for (let x; x < 1;) {
>x : any
>x < 1 : boolean
>      : ^^^^^^^
>x : any
>1 : 1
>  : ^

        x = x + 1;
>x = x + 1 : any
>x : any
>x + 1 : any
>x : any
>1 : 1
>  : ^
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
}

function a4() {
>a4 : () => void
>   : ^^^^^^^^^^

    for (let x; x < 1;) {
>x : any
>x < 1 : boolean
>      : ^^^^^^^
>x : any
>1 : 1
>  : ^

        x = x + 1;
>x = x + 1 : any
>x : any
>x + 1 : any
>x : any
>1 : 1
>  : ^

        () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            break;
    }
}


function a5() {
>a5 : () => void
>   : ^^^^^^^^^^

    for (let x; x < 1;) {
>x : any
>x < 1 : boolean
>      : ^^^^^^^
>x : any
>1 : 1
>  : ^

        x = x + 1;
>x = x + 1 : any
>x : any
>x + 1 : any
>x : any
>1 : 1
>  : ^

        () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any
    }
    switch (1) {
>1 : 1
>  : ^

        case 1:
>1 : 1
>  : ^

            let x;
>x : any

            () => x;
>() => x : () => any
>        : ^^^^^^^^^
>x : any

            break;
    }
}
