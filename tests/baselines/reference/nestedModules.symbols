//// [tests/cases/conformance/internalModules/moduleDeclarations/nestedModules.ts] ////

=== nestedModules.ts ===
namespace A.B.C {
>A : Symbol(A, Decl(nestedModules.ts, 0, 0), Decl(nestedModules.ts, 5, 1))
>B : Symbol(B, Decl(nestedModules.ts, 0, 12), Decl(nestedModules.ts, 7, 13))
>C : Symbol(C, Decl(nestedModules.ts, 0, 14))

    export interface Point {
>Point : Symbol(Point, Decl(nestedModules.ts, 0, 17))

        x: number;
>x : Symbol(Point.x, Decl(nestedModules.ts, 1, 28))

        y: number;
>y : Symbol(Point.y, Decl(nestedModules.ts, 2, 18))
    }
}

namespace A {
>A : Symbol(A, Decl(nestedModules.ts, 0, 0), Decl(nestedModules.ts, 5, 1))

    export namespace B {
>B : Symbol(B, Decl(nestedModules.ts, 0, 12), Decl(nestedModules.ts, 7, 13))

        var Point: C.Point = { x: 0, y: 0 }; // bug 832088: could not find module 'C'
>Point : Symbol(Point, Decl(nestedModules.ts, 9, 11))
>C : Symbol(C, Decl(nestedModules.ts, 0, 14))
>Point : Symbol(C.Point, Decl(nestedModules.ts, 0, 17))
>x : Symbol(x, Decl(nestedModules.ts, 9, 30))
>y : Symbol(y, Decl(nestedModules.ts, 9, 36))
    }
}

namespace M2.X {
>M2 : Symbol(M2, Decl(nestedModules.ts, 11, 1), Decl(nestedModules.ts, 17, 1))
>X : Symbol(X, Decl(nestedModules.ts, 13, 13), Decl(nestedModules.ts, 19, 14))

    export interface Point {
>Point : Symbol(Point, Decl(nestedModules.ts, 13, 16), Decl(nestedModules.ts, 21, 18))

        x: number; y: number;
>x : Symbol(Point.x, Decl(nestedModules.ts, 14, 28))
>y : Symbol(Point.y, Decl(nestedModules.ts, 15, 18))
    }
}

namespace M2 {
>M2 : Symbol(M2, Decl(nestedModules.ts, 11, 1), Decl(nestedModules.ts, 17, 1))

    export namespace X {
>X : Symbol(X, Decl(nestedModules.ts, 13, 13), Decl(nestedModules.ts, 19, 14))

        export var Point: number;
>Point : Symbol(Point, Decl(nestedModules.ts, 13, 16), Decl(nestedModules.ts, 21, 18))
    }
}

var m = M2.X;
>m : Symbol(m, Decl(nestedModules.ts, 25, 3))
>M2.X : Symbol(M2.X, Decl(nestedModules.ts, 13, 13), Decl(nestedModules.ts, 19, 14))
>M2 : Symbol(M2, Decl(nestedModules.ts, 11, 1), Decl(nestedModules.ts, 17, 1))
>X : Symbol(M2.X, Decl(nestedModules.ts, 13, 13), Decl(nestedModules.ts, 19, 14))

var point: number;
>point : Symbol(point, Decl(nestedModules.ts, 26, 3), Decl(nestedModules.ts, 27, 3))

var point = m.Point;
>point : Symbol(point, Decl(nestedModules.ts, 26, 3), Decl(nestedModules.ts, 27, 3))
>m.Point : Symbol(M2.X.Point, Decl(nestedModules.ts, 13, 16), Decl(nestedModules.ts, 21, 18))
>m : Symbol(m, Decl(nestedModules.ts, 25, 3))
>Point : Symbol(M2.X.Point, Decl(nestedModules.ts, 13, 16), Decl(nestedModules.ts, 21, 18))

var p: { x: number; y: number; }
>p : Symbol(p, Decl(nestedModules.ts, 29, 3), Decl(nestedModules.ts, 30, 3))
>x : Symbol(x, Decl(nestedModules.ts, 29, 8))
>y : Symbol(y, Decl(nestedModules.ts, 29, 19))

var p: M2.X.Point;
>p : Symbol(p, Decl(nestedModules.ts, 29, 3), Decl(nestedModules.ts, 30, 3))
>M2 : Symbol(M2, Decl(nestedModules.ts, 11, 1), Decl(nestedModules.ts, 17, 1))
>X : Symbol(M2.X, Decl(nestedModules.ts, 13, 13), Decl(nestedModules.ts, 19, 14))
>Point : Symbol(M2.X.Point, Decl(nestedModules.ts, 13, 16), Decl(nestedModules.ts, 21, 18))

