//// [tests/cases/compiler/noImplicitAnyNamelessParameter.ts] ////

=== noImplicitAnyNamelessParameter.ts ===
class C { }
>C : C
>  : ^

declare var a: { m(...string): void }
>a : { m(...string: any[]): void; }
>  : ^^^^^^^      ^^^^^^^^^^    ^^^
>m : (...string: any[]) => void
>  : ^^^^      ^^^^^^^^^^^^    
>string : any[]
>       : ^^^^^

declare var b: (string, C) => void;
>b : (string: any, C: any) => void
>  : ^      ^^^^^^^ ^^^^^^^^^^    
>string : any
>       : ^^^
>C : any
>  : ^^^

declare var c: { (C, number): void };
>c : (C: any, number: any) => void
>  : ^ ^^^^^^^      ^^^^^^^^^^    
>C : any
>  : ^^^
>number : any
>       : ^^^

declare var d: { m(boolean, C, object, undefined): void }
>d : { m(boolean: any, C: any, object: any, undefined: any): void; }
>  : ^^^^       ^^^^^^^ ^^^^^^^      ^^^^^^^         ^^^^^^^^    ^^^
>m : (boolean: any, C: any, object: any, undefined: any) => void
>  : ^       ^^^^^^^ ^^^^^^^      ^^^^^^^         ^^^^^^^^^^    
>boolean : any
>        : ^^^
>C : any
>  : ^^^
>object : any
>       : ^^^
>undefined : any
>          : ^^^

// note: null and void do not parse correctly without a preceding parameter name

