//// [tests/cases/compiler/noImplicitThisFunctions.ts] ////

=== noImplicitThisFunctions.ts ===
function f1(x) {
>f1 : (x: any) => any
>   : ^ ^^^^^^^^^^^^^
>x : any
>  : ^^^

    // implicit any is still allowed
    return x + 1;
>x + 1 : any
>      : ^^^
>x : any
>  : ^^^
>1 : 1
>  : ^
}

function f2(y: number) {
>f2 : (y: number) => number
>   : ^ ^^      ^^^^^^^^^^^
>y : number
>  : ^^^^^^

    // ok: no reference to this
    return y + 1;
>y + 1 : number
>      : ^^^^^^
>y : number
>  : ^^^^^^
>1 : 1
>  : ^
}

function f3(z: number): number {
>f3 : (z: number) => number
>   : ^ ^^      ^^^^^      
>z : number
>  : ^^^^^^

    // error: this is implicitly any
    return this.a + z;
>this.a + z : any
>           : ^^^
>this.a : any
>       : ^^^
>this : any
>     : ^^^
>a : any
>  : ^^^
>z : number
>  : ^^^^^^
}

// error: `this` is `window`, but is still of type `any`
let f4: (b: number) => number = b => this.c + b;
>f4 : (b: number) => number
>   : ^ ^^      ^^^^^      
>b : number
>  : ^^^^^^
>b => this.c + b : (b: number) => any
>                : ^ ^^^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>this.c + b : any
>           : ^^^
>this.c : any
>       : ^^^
>this : typeof globalThis
>     : ^^^^^^^^^^^^^^^^^
>c : any
>  : ^^^
>b : number
>  : ^^^^^^

let f5 = () => () => this;
>f5 : () => () => typeof globalThis
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>() => () => this : () => () => typeof globalThis
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>() => this : () => typeof globalThis
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>this : typeof globalThis
>     : ^^^^^^^^^^^^^^^^^

let f6 = function() { return () => this; };
>f6 : () => () => any
>   : ^^^^^^^^^^^^^^^
>function() { return () => this; } : () => () => any
>                                  : ^^^^^^^^^^^^^^^
>() => this : () => any
>           : ^^^^^^^^^
>this : any
>     : ^^^

let f7 = function() { return function() { return this } };
>f7 : () => () => any
>   : ^^^^^^^^^^^^^^^
>function() { return function() { return this } } : () => () => any
>                                                 : ^^^^^^^^^^^^^^^
>function() { return this } : () => any
>                           : ^^^^^^^^^
>this : any
>     : ^^^

