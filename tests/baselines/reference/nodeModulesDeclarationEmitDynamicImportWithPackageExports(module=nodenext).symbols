//// [tests/cases/conformance/node/nodeModulesDeclarationEmitDynamicImportWithPackageExports.ts] ////

=== index.ts ===

// esm format file
export {};
=== index.mts ===

// esm format file
export {};
=== index.cts ===

// cjs format file
export {};
=== other.ts ===
// esm format file
export const a = await import("package/cjs");
>a : Symbol(a, Decl(other.ts, 1, 12))
>"package/cjs" : Symbol("index", Decl(index.cts, 0, 0))

export const b = await import("package/mjs");
>b : Symbol(b, Decl(other.ts, 2, 12))
>"package/mjs" : Symbol("index", Decl(index.mts, 0, 0))

export const c = await import("package");
>c : Symbol(c, Decl(other.ts, 3, 12))
>"package" : Symbol("index", Decl(index.ts, 0, 0))

export const f = await import("inner");
>f : Symbol(f, Decl(other.ts, 4, 12))
>"inner" : Symbol("node_modules/inner/index", Decl(index.d.ts, 0, 0))

=== other2.ts ===
// esm format file
export const d = await import("inner/cjs");
>d : Symbol(d, Decl(other2.ts, 1, 12))
>"inner/cjs" : Symbol("node_modules/inner/index", Decl(index.d.cts, 0, 0))

export const e = await import("inner/mjs");
>e : Symbol(e, Decl(other2.ts, 2, 12))
>"inner/mjs" : Symbol("node_modules/inner/index", Decl(index.d.mts, 0, 0))

=== other.mts ===
// esm format file
export const a = await import("package/cjs");
>a : Symbol(a, Decl(other.mts, 1, 12))
>"package/cjs" : Symbol("index", Decl(index.cts, 0, 0))

export const b = await import("package/mjs");
>b : Symbol(b, Decl(other.mts, 2, 12))
>"package/mjs" : Symbol("index", Decl(index.mts, 0, 0))

export const c = await import("package");
>c : Symbol(c, Decl(other.mts, 3, 12))
>"package" : Symbol("index", Decl(index.ts, 0, 0))

export const f = await import("inner");
>f : Symbol(f, Decl(other.mts, 4, 12))
>"inner" : Symbol("node_modules/inner/index", Decl(index.d.ts, 0, 0))

=== other2.mts ===
// esm format file
export const d = await import("inner/cjs");
>d : Symbol(d, Decl(other2.mts, 1, 12))
>"inner/cjs" : Symbol("node_modules/inner/index", Decl(index.d.cts, 0, 0))

export const e = await import("inner/mjs");
>e : Symbol(e, Decl(other2.mts, 2, 12))
>"inner/mjs" : Symbol("node_modules/inner/index", Decl(index.d.mts, 0, 0))

=== other.cts ===
// cjs format file, no TLA
export const a = import("package/cjs");
>a : Symbol(a, Decl(other.cts, 1, 12))
>"package/cjs" : Symbol("index", Decl(index.cts, 0, 0))

export const b = import("package/mjs");
>b : Symbol(b, Decl(other.cts, 2, 12))
>"package/mjs" : Symbol("index", Decl(index.mts, 0, 0))

export const c = import("package");
>c : Symbol(c, Decl(other.cts, 3, 12))
>"package" : Symbol("index", Decl(index.ts, 0, 0))

export const f = import("inner");
>f : Symbol(f, Decl(other.cts, 4, 12))
>"inner" : Symbol("node_modules/inner/index", Decl(index.d.ts, 0, 0))

=== other2.cts ===
// cjs format file, no TLA
export const d = import("inner/cjs");
>d : Symbol(d, Decl(other2.cts, 1, 12))
>"inner/cjs" : Symbol("node_modules/inner/index", Decl(index.d.cts, 0, 0))

export const e = import("inner/mjs");
>e : Symbol(e, Decl(other2.cts, 2, 12))
>"inner/mjs" : Symbol("node_modules/inner/index", Decl(index.d.mts, 0, 0))

=== node_modules/inner/index.d.ts ===
// cjs format file
export const cjsMain = true;
>cjsMain : Symbol(cjsMain, Decl(index.d.ts, 1, 12))

=== node_modules/inner/index.d.mts ===
// esm format file
export const esm = true;
>esm : Symbol(esm, Decl(index.d.mts, 1, 12))

=== node_modules/inner/index.d.cts ===
// cjs format file
export const cjsNonmain = true;
>cjsNonmain : Symbol(cjsNonmain, Decl(index.d.cts, 1, 12))

