//// [tests/cases/conformance/node/nodeModulesExportsSourceTs.ts] ////

=== index.ts ===
// esm format file
import { Thing } from "inner/other";
>Thing : Symbol(Thing, Decl(index.ts, 1, 8))

export const a = (await import("inner")).x();
>a : Symbol(a, Decl(index.ts, 2, 12))
>(await import("inner")).x : Symbol(x, Decl(index.ts, 1, 8))
>"inner" : Symbol("node_modules/inner/index", Decl(index.ts, 0, 0))
>x : Symbol(x, Decl(index.ts, 1, 8))

import {a as a2} from "package";
>a : Symbol(a, Decl(index.ts, 2, 12))
>a2 : Symbol(a2, Decl(index.ts, 3, 8))

=== node_modules/inner/index.ts ===
// esm format file
export { x } from "./other.js";
>x : Symbol(x, Decl(index.ts, 1, 8))

=== node_modules/inner/other.ts ===
// esm format file
export interface Thing {}
>Thing : Symbol(Thing, Decl(other.ts, 0, 0))

export const x: () => Thing = null as any;
>x : Symbol(x, Decl(other.ts, 2, 12))
>Thing : Symbol(Thing, Decl(other.ts, 0, 0))

