//// [tests/cases/conformance/node/nodeModulesExportsSpecifierGenerationConditions.ts] ////

=== index.ts ===
// esm format file
import { Thing } from "inner/other.js"; // should fail
>Thing : any
>      : ^^^

export const a = (await import("inner")).x();
>a : import("node_modules/inner/other").Thing
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>(await import("inner")).x() : import("node_modules/inner/other").Thing
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>(await import("inner")).x : () => import("node_modules/inner/other").Thing
>                          : ^^^^^^       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^
>(await import("inner")) : typeof import("node_modules/inner/index")
>                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>await import("inner") : typeof import("node_modules/inner/index")
>                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>import("inner") : Promise<typeof import("node_modules/inner/index")>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"inner" : "inner"
>        : ^^^^^^^
>x : () => import("node_modules/inner/other").Thing
>  : ^^^^^^       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^

=== node_modules/inner/index.d.ts ===
// esm format file
export { x } from "./other.js";
>x : () => import("node_modules/inner/other").Thing
>  : ^^^^^^       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^

=== node_modules/inner/other.d.ts ===
// esm format file
export interface Thing {}
export const x: () => Thing;
>x : () => Thing
>  : ^^^^^^     

