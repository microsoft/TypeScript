//// [tests/cases/conformance/node/nodeModulesForbidenSyntax.ts] ////

=== subfolder/index.ts ===
// cjs format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder/index.cts ===
// cjs format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder/index.mts ===
// esm format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder2/index.ts ===
// cjs format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder2/index.cts ===
// cjs format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder2/index.mts ===
// esm format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder2/another/index.ts ===
// esm format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder2/another/index.mts ===
// esm format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== subfolder2/another/index.cts ===
// cjs format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== index.mts ===
// esm format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== index.cts ===
// cjs format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

=== index.ts ===
// esm format file
const x = <T>() => <T><any>(void 0);
>x : <T>() => T
>  : ^ ^^^^^^^ 
><T>() => <T><any>(void 0) : <T>() => T
>                          : ^ ^^^^^^^ 
><T><any>(void 0) : T
>                 : ^
><any>(void 0) : any
>              : ^^^
>(void 0) : undefined
>         : ^^^^^^^^^
>void 0 : undefined
>       : ^^^^^^^^^
>0 : 0
>  : ^

export {x};
>x : <T>() => T
>  : ^ ^^^^^^^ 

