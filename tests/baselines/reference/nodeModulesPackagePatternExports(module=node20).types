//// [tests/cases/conformance/node/nodeModulesPackagePatternExports.ts] ////

=== index.ts ===
// esm format file
import * as cjsi from "inner/cjs/index";
>cjsi : typeof cjsi
>     : ^^^^^^^^^^^

import * as mjsi from "inner/mjs/index";
>mjsi : typeof mjsi
>     : ^^^^^^^^^^^

import * as typei from "inner/js/index";
>typei : typeof typei
>      : ^^^^^^^^^^^^

cjsi;
>cjsi : typeof cjsi
>     : ^^^^^^^^^^^

mjsi;
>mjsi : typeof mjsi
>     : ^^^^^^^^^^^

typei;
>typei : typeof typei
>      : ^^^^^^^^^^^^

=== index.mts ===
// esm format file
import * as cjsi from "inner/cjs/index";
>cjsi : typeof cjsi
>     : ^^^^^^^^^^^

import * as mjsi from "inner/mjs/index";
>mjsi : typeof mjsi
>     : ^^^^^^^^^^^

import * as typei from "inner/js/index";
>typei : typeof typei
>      : ^^^^^^^^^^^^

cjsi;
>cjsi : typeof cjsi
>     : ^^^^^^^^^^^

mjsi;
>mjsi : typeof mjsi
>     : ^^^^^^^^^^^

typei;
>typei : typeof typei
>      : ^^^^^^^^^^^^

=== index.cts ===
// cjs format file
import * as cjsi from "inner/cjs/index";
>cjsi : typeof cjsi
>     : ^^^^^^^^^^^

import * as mjsi from "inner/mjs/index";
>mjsi : typeof mjsi
>     : ^^^^^^^^^^^

import * as typei from "inner/js/index";
>typei : typeof typei
>      : ^^^^^^^^^^^^

cjsi;
>cjsi : typeof cjsi
>     : ^^^^^^^^^^^

mjsi;
>mjsi : typeof mjsi
>     : ^^^^^^^^^^^

typei;
>typei : typeof typei
>      : ^^^^^^^^^^^^

=== node_modules/inner/index.d.ts ===
// cjs format file
export const implicitCjsSource = true;
>implicitCjsSource : true
>                  : ^^^^
>true : true
>     : ^^^^

=== node_modules/inner/test.d.ts ===
// cjs format file
import * as cjs from "inner/cjs/index";
>cjs : typeof cjs
>    : ^^^^^^^^^^

import * as mjs from "inner/mjs/index";
>mjs : typeof mjs
>    : ^^^^^^^^^^

import * as type from "inner/js/index";
>type : typeof type
>     : ^^^^^^^^^^^

export { cjs };
>cjs : typeof cjs
>    : ^^^^^^^^^^

export { mjs };
>mjs : typeof mjs
>    : ^^^^^^^^^^

export { type };
>type : typeof type
>     : ^^^^^^^^^^^

=== node_modules/inner/index.d.mts ===
// esm format file
export const mjsSource = true;
>mjsSource : true
>          : ^^^^
>true : true
>     : ^^^^

=== node_modules/inner/test.d.mts ===
// esm format file
import * as cjs from "inner/cjs/index";
>cjs : typeof cjs
>    : ^^^^^^^^^^

import * as mjs from "inner/mjs/index";
>mjs : typeof mjs
>    : ^^^^^^^^^^

import * as type from "inner/js/index";
>type : typeof type
>     : ^^^^^^^^^^^

export { cjs };
>cjs : typeof cjs
>    : ^^^^^^^^^^

export { mjs };
>mjs : typeof mjs
>    : ^^^^^^^^^^

export { type };
>type : typeof type
>     : ^^^^^^^^^^^

=== node_modules/inner/index.d.cts ===
// cjs format file
export const cjsSource = true;
>cjsSource : true
>          : ^^^^
>true : true
>     : ^^^^

=== node_modules/inner/test.d.cts ===
// cjs format file
import * as cjs from "inner/cjs/index";
>cjs : typeof cjs
>    : ^^^^^^^^^^

import * as mjs from "inner/mjs/index";
>mjs : typeof mjs
>    : ^^^^^^^^^^

import * as type from "inner/js/index";
>type : typeof type
>     : ^^^^^^^^^^^

export { cjs };
>cjs : typeof cjs
>    : ^^^^^^^^^^

export { mjs };
>mjs : typeof mjs
>    : ^^^^^^^^^^

export { type };
>type : typeof type
>     : ^^^^^^^^^^^

