//// [tests/cases/conformance/node/nodeModulesSynchronousCallErrors.ts] ////

=== subfolder/index.ts ===
// cjs format file
import {h} from "../index.js";
>h : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^

import mod = require("../index.js");
>mod : typeof mod
>    : ^^^^^^^^^^

import {f as _f} from "./index.js";
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>_f : () => Promise<void>
>   : ^^^^^^^^^^^^^^^^^^^

import mod2 = require("./index.js");
>mod2 : typeof mod2
>     : ^^^^^^^^^^^

export async function f() {
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^

    const mod3 = await import ("../index.js");
>mod3 : typeof mod
>     : ^^^^^^^^^^
>await import ("../index.js") : typeof mod
>                             : ^^^^^^^^^^
>import ("../index.js") : Promise<typeof mod>
>                       : ^^^^^^^^^^^^^^^^^^^
>"../index.js" : "../index.js"
>              : ^^^^^^^^^^^^^

    const mod4 = await import ("./index.js");
>mod4 : { default: typeof mod2; f(): Promise<void>; }
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>await import ("./index.js") : { default: typeof mod2; f(): Promise<void>; }
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>import ("./index.js") : Promise<{ default: typeof mod2; f(): Promise<void>; }>
>                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"./index.js" : "./index.js"
>             : ^^^^^^^^^^^^

    h();
>h() : Promise<void>
>    : ^^^^^^^^^^^^^
>h : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
}
=== index.ts ===
// esm format file
import {h as _h} from "./index.js";
>h : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
>_h : () => Promise<void>
>   : ^^^^^^^^^^^^^^^^^^^

import mod = require("./index.js");
>mod : typeof mod
>    : ^^^^^^^^^^

import {f} from "./subfolder/index.js";
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^

import mod2 = require("./subfolder/index.js");
>mod2 : typeof mod2
>     : ^^^^^^^^^^^

export async function h() {
>h : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^

    const mod3 = await import ("./index.js");
>mod3 : typeof mod
>     : ^^^^^^^^^^
>await import ("./index.js") : typeof mod
>                            : ^^^^^^^^^^
>import ("./index.js") : Promise<typeof mod>
>                      : ^^^^^^^^^^^^^^^^^^^
>"./index.js" : "./index.js"
>             : ^^^^^^^^^^^^

    const mod4 = await import ("./subfolder/index.js");
>mod4 : { default: typeof mod2; f(): Promise<void>; }
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>await import ("./subfolder/index.js") : { default: typeof mod2; f(): Promise<void>; }
>                                      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>import ("./subfolder/index.js") : Promise<{ default: typeof mod2; f(): Promise<void>; }>
>                                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"./subfolder/index.js" : "./subfolder/index.js"
>                       : ^^^^^^^^^^^^^^^^^^^^^^

    f();
>f() : Promise<void>
>    : ^^^^^^^^^^^^^
>f : () => Promise<void>
>  : ^^^^^^^^^^^^^^^^^^^
}
