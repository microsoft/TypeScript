//// [tests/cases/compiler/nodeNextEsmImportsOfPackagesWithExtensionlessMains.ts] ////

=== index.ts ===
import * as ip from 'ip';
>ip : typeof ip
>   : ^^^^^^^^^

import nullthrows from 'nullthrows'; // shouldn't be callable, `nullthrows` is a cjs package, so the `default` is the module itself
>nullthrows : typeof nullthrows
>           : ^^^^^^^^^^^^^^^^^

export function getAddress(): string {
>getAddress : () => string
>           : ^^^^^^      

  return nullthrows(ip.address());
>nullthrows(ip.address()) : any
>nullthrows : typeof nullthrows
>           : ^^^^^^^^^^^^^^^^^
>ip.address() : string
>             : ^^^^^^
>ip.address : () => string
>           : ^^^^^^      
>ip : typeof ip
>   : ^^^^^^^^^
>address : () => string
>        : ^^^^^^      
}
=== node_modules/@types/ip/index.d.ts ===
export function address(): string;
>address : () => string
>        : ^^^^^^      

=== node_modules/nullthrows/nullthrows.d.ts ===
declare function nullthrows(x: any): any;
>nullthrows : typeof nullthrows
>           : ^^^^^^^^^^^^^^^^^
>x : any

declare namespace nullthrows {
>nullthrows : typeof nullthrows
>           : ^^^^^^^^^^^^^^^^^

    export {nullthrows as default};
>nullthrows : typeof nullthrows
>           : ^^^^^^^^^^^^^^^^^
>default : typeof nullthrows
>        : ^^^^^^^^^^^^^^^^^
}
export = nullthrows;
>nullthrows : typeof nullthrows
>           : ^^^^^^^^^^^^^^^^^

