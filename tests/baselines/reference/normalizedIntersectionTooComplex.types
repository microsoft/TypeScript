//// [tests/cases/compiler/normalizedIntersectionTooComplex.ts] ////

=== Performance Stats ===
Type Count: 1,000

=== normalizedIntersectionTooComplex.ts ===
// Repro from #30050

interface Obj<T> {
	ref: T;
>ref : T
>    : ^
}
interface Func<T> {
	(x: T): void;
>x : T
>  : ^
}
type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never;
>UnionToIntersection : UnionToIntersection<U>
>                    : ^^^^^^^^^^^^^^^^^^^^^^
>k : U
>  : ^
>k : I
>  : ^

type CtorOf<T> = (arg: UnionToIntersection<T>) => T;
>CtorOf : CtorOf<T>
>       : ^^^^^^^^^
>arg : UnionToIntersection<T>
>    : ^^^^^^^^^^^^^^^^^^^^^^

interface Big {
    "0": { common?: string; "0"?: number, ref?: Obj<Big["0"]> | Func<Big["0"]>; }
>"0" : { common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"0" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; }> | Func<{ common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "1": { common?: string; "1"?: number, ref?: Obj<Big["1"]> | Func<Big["1"]>; }
>"1" : { common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"1" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; }> | Func<{ common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "2": { common?: string; "2"?: number, ref?: Obj<Big["2"]> | Func<Big["2"]>; }
>"2" : { common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"2" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; }> | Func<{ common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "3": { common?: string; "3"?: number, ref?: Obj<Big["3"]> | Func<Big["3"]>; }
>"3" : { common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"3" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; }> | Func<{ common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "4": { common?: string; "4"?: number, ref?: Obj<Big["4"]> | Func<Big["4"]>; }
>"4" : { common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"4" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; }> | Func<{ common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "5": { common?: string; "5"?: number, ref?: Obj<Big["5"]> | Func<Big["5"]>; }
>"5" : { common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"5" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; }> | Func<{ common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "6": { common?: string; "6"?: number, ref?: Obj<Big["6"]> | Func<Big["6"]>; }
>"6" : { common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"6" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; }> | Func<{ common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "7": { common?: string; "7"?: number, ref?: Obj<Big["7"]> | Func<Big["7"]>; }
>"7" : { common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"7" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; }> | Func<{ common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "8": { common?: string; "8"?: number, ref?: Obj<Big["8"]> | Func<Big["8"]>; }
>"8" : { common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"8" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; }> | Func<{ common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "9": { common?: string; "9"?: number, ref?: Obj<Big["9"]> | Func<Big["9"]>; }
>"9" : { common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; }
>    : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"9" : number | undefined
>    : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; }> | Func<{ common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^

    "10": { common?: string; "10"?: number, ref?: Obj<Big["10"]> | Func<Big["10"]>; }
>"10" : { common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"10" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; }> | Func<{ common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "11": { common?: string; "11"?: number, ref?: Obj<Big["11"]> | Func<Big["11"]>; }
>"11" : { common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"11" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; }> | Func<{ common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "12": { common?: string; "12"?: number, ref?: Obj<Big["12"]> | Func<Big["12"]>; }
>"12" : { common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"12" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; }> | Func<{ common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "13": { common?: string; "13"?: number, ref?: Obj<Big["13"]> | Func<Big["13"]>; }
>"13" : { common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"13" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; }> | Func<{ common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "14": { common?: string; "14"?: number, ref?: Obj<Big["14"]> | Func<Big["14"]>; }
>"14" : { common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"14" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; }> | Func<{ common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "15": { common?: string; "15"?: number, ref?: Obj<Big["15"]> | Func<Big["15"]>; }
>"15" : { common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"15" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; }> | Func<{ common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "16": { common?: string; "16"?: number, ref?: Obj<Big["16"]> | Func<Big["16"]>; }
>"16" : { common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"16" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; }> | Func<{ common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^

    "17": { common?: string; "17"?: number, ref?: Obj<Big["17"]> | Func<Big["17"]>; }
>"17" : { common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>common : string | undefined
>       : ^^^^^^^^^^^^^^^^^^
>"17" : number | undefined
>     : ^^^^^^^^^^^^^^^^^^
>ref : Obj<{ common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }> | Func<{ common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }> | undefined
>    : ^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^
}
declare function getCtor<T extends keyof Big>(comp: T): CtorOf<Big[T]>
>getCtor : <T extends keyof Big>(comp: T) => CtorOf<Big[T]>
>        : ^ ^^^^^^^^^         ^^    ^^ ^^^^^              
>comp : T
>     : ^

declare var all: keyof Big;
>all : keyof Big
>    : ^^^^^^^^^

const ctor = getCtor(all);
>ctor : CtorOf<{ common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; } | { common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; } | { common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; } | { common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; } | { common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; } | { common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; } | { common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; } | { common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; } | { common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; } | { common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; } | { common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; } | { common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; } | { common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; } | { common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; } | { common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; } | { common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; } | { common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; } | { common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }>

>getCtor(all) : CtorOf<{ common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; } | { common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; } | { common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; } | { common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; } | { common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; } | { common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; } | { common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; } | { common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; } | { common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; } | { common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; } | { common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; } | { common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; } | { common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; } | { common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; } | { common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; } | { common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; } | { common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; } | { common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }>

>getCtor : <T extends keyof Big>(comp: T) => CtorOf<Big[T]>
>        : ^ ^^^^^^^^^         ^^    ^^ ^^^^^              
>all : keyof Big
>    : ^^^^^^^^^

const comp = ctor({ common: "ok", ref: x => console.log(x) });
>comp : { common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; } | { common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; } | { common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; } | { common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; } | { common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; } | { common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; } | { common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; } | { common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; } | { common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; } | { common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; } | { common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; } | { common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; } | { common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; } | { common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; } | { common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; } | { common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; } | { common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; } | { common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }
>     : ^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^
>ctor({ common: "ok", ref: x => console.log(x) }) : { common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; } | { common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; } | { common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; } | { common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; } | { common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; } | { common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; } | { common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; } | { common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; } | { common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; } | { common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; } | { common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; } | { common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; } | { common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; } | { common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; } | { common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; } | { common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; } | { common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; } | { common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }

>ctor : CtorOf<{ common?: string; "0"?: number; ref?: Obj<Big["0"]> | Func<Big["0"]>; } | { common?: string; "1"?: number; ref?: Obj<Big["1"]> | Func<Big["1"]>; } | { common?: string; "2"?: number; ref?: Obj<Big["2"]> | Func<Big["2"]>; } | { common?: string; "3"?: number; ref?: Obj<Big["3"]> | Func<Big["3"]>; } | { common?: string; "4"?: number; ref?: Obj<Big["4"]> | Func<Big["4"]>; } | { common?: string; "5"?: number; ref?: Obj<Big["5"]> | Func<Big["5"]>; } | { common?: string; "6"?: number; ref?: Obj<Big["6"]> | Func<Big["6"]>; } | { common?: string; "7"?: number; ref?: Obj<Big["7"]> | Func<Big["7"]>; } | { common?: string; "8"?: number; ref?: Obj<Big["8"]> | Func<Big["8"]>; } | { common?: string; "9"?: number; ref?: Obj<Big["9"]> | Func<Big["9"]>; } | { common?: string; "10"?: number; ref?: Obj<Big["10"]> | Func<Big["10"]>; } | { common?: string; "11"?: number; ref?: Obj<Big["11"]> | Func<Big["11"]>; } | { common?: string; "12"?: number; ref?: Obj<Big["12"]> | Func<Big["12"]>; } | { common?: string; "13"?: number; ref?: Obj<Big["13"]> | Func<Big["13"]>; } | { common?: string; "14"?: number; ref?: Obj<Big["14"]> | Func<Big["14"]>; } | { common?: string; "15"?: number; ref?: Obj<Big["15"]> | Func<Big["15"]>; } | { common?: string; "16"?: number; ref?: Obj<Big["16"]> | Func<Big["16"]>; } | { common?: string; "17"?: number; ref?: Obj<Big["17"]> | Func<Big["17"]>; }>
>     : ^^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^      ^^^^^^^^                              ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^^^^^^^^^^^^^^      ^^^^^^^^^      ^^^^^^^^                                ^^^^
>{ common: "ok", ref: x => console.log(x) } : { common: string; ref: (x: any) => void; }
>                                           : ^^^^^^^^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^
>common : string
>       : ^^^^^^
>"ok" : "ok"
>     : ^^^^
>ref : (x: any) => void
>    : ^ ^^^^^^^^^^^^^^
>x => console.log(x) : (x: any) => void
>                    : ^ ^^^^^^^^^^^^^^
>x : any
>  : ^^^
>console.log(x) : void
>               : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>x : any
>  : ^^^

