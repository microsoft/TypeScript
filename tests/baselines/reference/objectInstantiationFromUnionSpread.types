//// [tests/cases/compiler/objectInstantiationFromUnionSpread.ts] ////

=== objectInstantiationFromUnionSpread.ts ===
// #40995

interface Success {
  isSuccess: true;
>isSuccess : true
>          : ^^^^
>true : true
>     : ^^^^
}

interface Fail {
  isSuccess: false;
>isSuccess : false
>          : ^^^^^
>false : false
>      : ^^^^^
}

type Item = Success | Fail;
>Item : Item
>     : ^^^^

function f1(a: Item[]) {
>f1 : (a: Item[]) => void
>   : ^ ^^      ^^^^^^^^^
>a : Item[]
>  : ^^^^^^

  a.map(item => ({ ...item })).filter(value => {});
>a.map(item => ({ ...item })).filter(value => {}) : ({ isSuccess: true; } | { isSuccess: false; })[]
>                                                 : ^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^
>a.map(item => ({ ...item })).filter : { <S extends { isSuccess: true; } | { isSuccess: false; }>(predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => unknown, thisArg?: any): ({ isSuccess: true; } | { isSuccess: false; })[]; }
>                                    : ^^^ ^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^
>a.map(item => ({ ...item })) : ({ isSuccess: true; } | { isSuccess: false; })[]
>                             : ^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^
>a.map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>      : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>a : Item[]
>  : ^^^^^^
>map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>    : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>item => ({ ...item }) : (item: Item) => { isSuccess: true; } | { isSuccess: false; }
>                      : ^    ^^^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
>item : Item
>     : ^^^^
>({ ...item }) : { isSuccess: true; } | { isSuccess: false; }
>              : ^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
>{ ...item } : { isSuccess: true; } | { isSuccess: false; }
>            : ^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
>item : Item
>     : ^^^^
>filter : { <S extends { isSuccess: true; } | { isSuccess: false; }>(predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => unknown, thisArg?: any): ({ isSuccess: true; } | { isSuccess: false; })[]; }
>       : ^^^ ^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^
>value => {} : (value: { isSuccess: true; } | { isSuccess: false; }) => void
>            : ^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^
>value : { isSuccess: true; } | { isSuccess: false; }
>      : ^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
}

function f2<T>(a: Item[]) {
>f2 : <T>(a: Item[]) => void
>   : ^ ^^ ^^      ^^^^^^^^^
>a : Item[]
>  : ^^^^^^

  a.map(item => ({ ...item })).filter(value => {});
>a.map(item => ({ ...item })).filter(value => {}) : ({ isSuccess: true; } | { isSuccess: false; })[]
>                                                 : ^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^
>a.map(item => ({ ...item })).filter : { <S extends { isSuccess: true; } | { isSuccess: false; }>(predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => unknown, thisArg?: any): ({ isSuccess: true; } | { isSuccess: false; })[]; }
>                                    : ^^^ ^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^
>a.map(item => ({ ...item })) : ({ isSuccess: true; } | { isSuccess: false; })[]
>                             : ^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^
>a.map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>      : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>a : Item[]
>  : ^^^^^^
>map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>    : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>item => ({ ...item }) : (item: Item) => { isSuccess: true; } | { isSuccess: false; }
>                      : ^    ^^^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
>item : Item
>     : ^^^^
>({ ...item }) : { isSuccess: true; } | { isSuccess: false; }
>              : ^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
>{ ...item } : { isSuccess: true; } | { isSuccess: false; }
>            : ^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
>item : Item
>     : ^^^^
>filter : { <S extends { isSuccess: true; } | { isSuccess: false; }>(predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: true; } | { isSuccess: false; }, index: number, array: ({ isSuccess: true; } | { isSuccess: false; })[]) => unknown, thisArg?: any): ({ isSuccess: true; } | { isSuccess: false; })[]; }
>       : ^^^ ^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^
>value => {} : (value: { isSuccess: true; } | { isSuccess: false; }) => void
>            : ^     ^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^
>value : { isSuccess: true; } | { isSuccess: false; }
>      : ^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^     ^^^
}

