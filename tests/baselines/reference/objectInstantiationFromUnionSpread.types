//// [tests/cases/compiler/objectInstantiationFromUnionSpread.ts] ////

=== objectInstantiationFromUnionSpread.ts ===
// #40995

interface Success {
  isSuccess: true;
>isSuccess : true
>          : ^^^^
>true : true
>     : ^^^^
}

interface Fail {
  isSuccess: false;
>isSuccess : false
>          : ^^^^^
>false : false
>      : ^^^^^
}

type Item = Success | Fail;
>Item : Item
>     : ^^^^

function f1(a: Item[]) {
>f1 : (a: Item[]) => void
>   : ^ ^^      ^^^^^^^^^
>a : Item[]
>  : ^^^^^^

  a.map(item => ({ ...item })).filter(value => {});
>a.map(item => ({ ...item })).filter(value => {}) : ({ isSuccess: false; } | { isSuccess: true; })[]
>                                                 : ^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^
>a.map(item => ({ ...item })).filter : { <S extends { isSuccess: false; } | { isSuccess: true; }>(predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => unknown, thisArg?: any): ({ isSuccess: false; } | { isSuccess: true; })[]; }
>                                    : ^^^ ^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^
>a.map(item => ({ ...item })) : ({ isSuccess: false; } | { isSuccess: true; })[]
>                             : ^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^
>a.map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>      : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>a : Item[]
>  : ^^^^^^
>map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>    : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>item => ({ ...item }) : (item: Item) => { isSuccess: false; } | { isSuccess: true; }
>                      : ^    ^^^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
>item : Item
>     : ^^^^
>({ ...item }) : { isSuccess: false; } | { isSuccess: true; }
>              : ^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
>{ ...item } : { isSuccess: false; } | { isSuccess: true; }
>            : ^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
>item : Item
>     : ^^^^
>filter : { <S extends { isSuccess: false; } | { isSuccess: true; }>(predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => unknown, thisArg?: any): ({ isSuccess: false; } | { isSuccess: true; })[]; }
>       : ^^^ ^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^
>value => {} : (value: { isSuccess: false; } | { isSuccess: true; }) => void
>            : ^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^
>value : { isSuccess: false; } | { isSuccess: true; }
>      : ^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
}

function f2<T>(a: Item[]) {
>f2 : <T>(a: Item[]) => void
>   : ^ ^^ ^^      ^^^^^^^^^
>a : Item[]
>  : ^^^^^^

  a.map(item => ({ ...item })).filter(value => {});
>a.map(item => ({ ...item })).filter(value => {}) : ({ isSuccess: false; } | { isSuccess: true; })[]
>                                                 : ^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^
>a.map(item => ({ ...item })).filter : { <S extends { isSuccess: false; } | { isSuccess: true; }>(predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => unknown, thisArg?: any): ({ isSuccess: false; } | { isSuccess: true; })[]; }
>                                    : ^^^ ^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^
>a.map(item => ({ ...item })) : ({ isSuccess: false; } | { isSuccess: true; })[]
>                             : ^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^
>a.map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>      : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>a : Item[]
>  : ^^^^^^
>map : <U>(callbackfn: (value: Item, index: number, array: Item[]) => U, thisArg?: any) => U[]
>    : ^ ^^          ^^^     ^^^^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^
>item => ({ ...item }) : (item: Item) => { isSuccess: false; } | { isSuccess: true; }
>                      : ^    ^^^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
>item : Item
>     : ^^^^
>({ ...item }) : { isSuccess: false; } | { isSuccess: true; }
>              : ^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
>{ ...item } : { isSuccess: false; } | { isSuccess: true; }
>            : ^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
>item : Item
>     : ^^^^
>filter : { <S extends { isSuccess: false; } | { isSuccess: true; }>(predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => value is S, thisArg?: any): S[]; (predicate: (value: { isSuccess: false; } | { isSuccess: true; }, index: number, array: ({ isSuccess: false; } | { isSuccess: true; })[]) => unknown, thisArg?: any): ({ isSuccess: false; } | { isSuccess: true; })[]; }
>       : ^^^ ^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^       ^^^   ^^^^^^^^^         ^^^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^     ^^      ^^     ^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^       ^^       ^^^   ^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^
>value => {} : (value: { isSuccess: false; } | { isSuccess: true; }) => void
>            : ^     ^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^
>value : { isSuccess: false; } | { isSuccess: true; }
>      : ^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^    ^^^
}

