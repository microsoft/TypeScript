//// [tests/cases/compiler/objectLitPropertyScoping.ts] ////

=== objectLitPropertyScoping.ts ===
// Should compile, x and y should not be picked up from the properties

function makePoint(x: number, y: number) {
>makePoint : (x: number, y: number) => { readonly x: number; readonly y: number; dist: () => number; }
>          : ^ ^^      ^^ ^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>y : number
>  : ^^^^^^

    return {
>{        get x() {            return x;        },        get y() {            return y;        },        dist: function () {            return Math.sqrt(x * x + y * y);        }    } : { readonly x: number; readonly y: number; dist: () => number; }
>                                                                                                                                                                                       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        get x() {
>x : number
>  : ^^^^^^

            return x;
>x : number
>  : ^^^^^^

        },
        get y() {
>y : number
>  : ^^^^^^

            return y;
>y : number
>  : ^^^^^^

        },
        dist: function () {
>dist : () => number
>     : ^^^^^^^^^^^^
>function () {            return Math.sqrt(x * x + y * y);        } : () => number
>                                                                   : ^^^^^^^^^^^^

            return Math.sqrt(x * x + y * y);
>Math.sqrt(x * x + y * y) : number
>                         : ^^^^^^
>Math.sqrt : (x: number) => number
>          : ^ ^^      ^^^^^      
>Math : Math
>     : ^^^^
>sqrt : (x: number) => number
>     : ^ ^^      ^^^^^      
>x * x + y * y : number
>              : ^^^^^^
>x * x : number
>      : ^^^^^^
>x : number
>  : ^^^^^^
>x : number
>  : ^^^^^^
>y * y : number
>      : ^^^^^^
>y : number
>  : ^^^^^^
>y : number
>  : ^^^^^^
        }
    }
};
