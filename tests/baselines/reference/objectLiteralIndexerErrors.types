//// [tests/cases/compiler/objectLiteralIndexerErrors.ts] ////

=== objectLiteralIndexerErrors.ts ===
interface A {
    x: number;
>x : number
>  : ^^^^^^
}

interface B extends A {
    y: string;
>y : string
>  : ^^^^^^
}

var a: A;
>a : A
>  : ^

var b: B;
>b : B
>  : ^

var c: any;
>c : any
>  : ^^^

var o1: { [s: string]: A;[n: number]: B; } = { x: b, 0: a }; // both indexers are A
>o1 : { [s: string]: A; [n: number]: B; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>s : string
>  : ^^^^^^
>n : number
>  : ^^^^^^
>{ x: b, 0: a } : { x: B; 0: A; }
>               : ^^^^^^^^^^^^^^^
>x : B
>  : ^
>b : B
>  : ^
>0 : A
>  : ^
>a : A
>  : ^

o1 = { x: c, 0: a }; // string indexer is any, number indexer is A
>o1 = { x: c, 0: a } : { x: any; 0: A; }
>                    : ^^^^^^^^^^^^^^^^^
>o1 : { [s: string]: A; [n: number]: B; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ x: c, 0: a } : { x: any; 0: A; }
>               : ^^^^^^^^^^^^^^^^^
>x : any
>  : ^^^
>c : any
>  : ^^^
>0 : A
>  : ^
>a : A
>  : ^

