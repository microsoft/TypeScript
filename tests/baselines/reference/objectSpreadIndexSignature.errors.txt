objectSpreadIndexSignature.ts(6,1): error TS7053: Element implicitly has an 'any' type because expression of type '101' can't be used to index type '{ a: number; b: number; }'.
  Property '101' does not exist on type '{ a: number; b: number; }'.


==== objectSpreadIndexSignature.ts (1 errors) ====
    declare let indexed1: { [n: string]: number; a: number; };
    declare let indexed2: { [n: string]: boolean; c: boolean; };
    declare let indexed3: { [n: string]: number };
    let i = { ...indexed1, b: 11 };
    // only indexed has indexer, so i[101]: any
    i[101];
    ~~~~~~
!!! error TS7053: Element implicitly has an 'any' type because expression of type '101' can't be used to index type '{ a: number; b: number; }'.
!!! error TS7053:   Property '101' does not exist on type '{ a: number; b: number; }'.
    let ii = { ...indexed1, ...indexed2 };
    // both have indexer, so i[1001]: number | boolean
    ii[1001];
    
    declare const b: boolean;
    indexed3 = { ...b ? indexed3 : undefined };
    
    declare var roindex: { readonly [x:string]: number };
    var writable = { ...roindex };
    writable.a = 0;  // should be ok.
    