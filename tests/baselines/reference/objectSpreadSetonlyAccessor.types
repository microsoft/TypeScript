//// [tests/cases/conformance/types/spread/objectSpreadSetonlyAccessor.ts] ////

=== objectSpreadSetonlyAccessor.ts ===
const o1: { foo: number, bar: undefined } = { foo: 1, ... { set bar(_v: number) { } } }
>o1 : { foo: number; bar: undefined; }
>   : ^^^^^^^      ^^^^^^^         ^^^
>foo : number
>    : ^^^^^^
>bar : undefined
>    : ^^^^^^^^^
>{ foo: 1, ... { set bar(_v: number) { } } } : { bar: undefined; foo: number; }
>                                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>foo : number
>    : ^^^^^^
>1 : 1
>  : ^
>{ set bar(_v: number) { } } : { bar: number; }
>                            : ^^^^^^^      ^^^
>bar : number
>    : ^^^^^^
>_v : number
>   : ^^^^^^

const o2: { foo: undefined } = { foo: 1, ... { set foo(_v: number) { } } }
>o2 : { foo: undefined; }
>   : ^^^^^^^         ^^^
>foo : undefined
>    : ^^^^^^^^^
>{ foo: 1, ... { set foo(_v: number) { } } } : { foo: undefined; }
>                                            : ^^^^^^^^^^^^^^^^^^^
>foo : number
>    : ^^^^^^
>1 : 1
>  : ^
>{ set foo(_v: number) { } } : { foo: number; }
>                            : ^^^^^^^      ^^^
>foo : number
>    : ^^^^^^
>_v : number
>   : ^^^^^^

