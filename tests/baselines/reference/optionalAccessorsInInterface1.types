//// [tests/cases/compiler/optionalAccessorsInInterface1.ts] ////

=== optionalAccessorsInInterface1.ts ===
interface MyPropertyDescriptor {
    get? (): any;
>get : () => any
>    : ^^^^^^   

    set? (v: any): void;
>set : (v: any) => void
>    : ^ ^^   ^^^^^    
>v : any
}

declare function defineMyProperty(o: any, p: string, attributes: MyPropertyDescriptor): any;
>defineMyProperty : (o: any, p: string, attributes: MyPropertyDescriptor) => any
>                 : ^ ^^   ^^ ^^      ^^          ^^                    ^^^^^   
>o : any
>p : string
>  : ^^^^^^
>attributes : MyPropertyDescriptor
>           : ^^^^^^^^^^^^^^^^^^^^

defineMyProperty({}, "name", { get: function () { return 5; } });
>defineMyProperty({}, "name", { get: function () { return 5; } }) : any
>defineMyProperty : (o: any, p: string, attributes: MyPropertyDescriptor) => any
>                 : ^ ^^   ^^ ^^      ^^          ^^                    ^^^^^   
>{} : {}
>   : ^^
>"name" : "name"
>       : ^^^^^^
>{ get: function () { return 5; } } : { get: () => number; }
>                                   : ^^^^^^^^^^^^^^^^^^^^^^
>get : () => number
>    : ^^^^^^^^^^^^
>function () { return 5; } : () => number
>                          : ^^^^^^^^^^^^
>5 : 5
>  : ^

interface MyPropertyDescriptor2 {
    get?: () => any;
>get : () => any
>    : ^^^^^^   

    set?: (v: any) => void;
>set : (v: any) => void
>    : ^ ^^   ^^^^^    
>v : any
}

declare function defineMyProperty2(o: any, p: string, attributes: MyPropertyDescriptor2): any;
>defineMyProperty2 : (o: any, p: string, attributes: MyPropertyDescriptor2) => any
>                  : ^ ^^   ^^ ^^      ^^          ^^                     ^^^^^   
>o : any
>p : string
>  : ^^^^^^
>attributes : MyPropertyDescriptor2
>           : ^^^^^^^^^^^^^^^^^^^^^

defineMyProperty2({}, "name", { get: function () { return 5; } });
>defineMyProperty2({}, "name", { get: function () { return 5; } }) : any
>defineMyProperty2 : (o: any, p: string, attributes: MyPropertyDescriptor2) => any
>                  : ^ ^^   ^^ ^^      ^^          ^^                     ^^^^^   
>{} : {}
>   : ^^
>"name" : "name"
>       : ^^^^^^
>{ get: function () { return 5; } } : { get: () => number; }
>                                   : ^^^^^^^^^^^^^^^^^^^^^^
>get : () => number
>    : ^^^^^^^^^^^^
>function () { return 5; } : () => number
>                          : ^^^^^^^^^^^^
>5 : 5
>  : ^

