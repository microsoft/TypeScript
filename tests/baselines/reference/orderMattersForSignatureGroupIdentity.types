//// [tests/cases/compiler/orderMattersForSignatureGroupIdentity.ts] ////

=== orderMattersForSignatureGroupIdentity.ts ===
interface A {
    (x: { s: string }): string
>x : { s: string; }
>  : ^^^^^      ^^^
>s : string
>  : ^^^^^^

    (x: { n: number }): number
>x : { n: number; }
>  : ^^^^^      ^^^
>n : number
>  : ^^^^^^
}

interface B {
    (x: { s: string }): string
>x : { s: string; }
>  : ^^^^^      ^^^
>s : string
>  : ^^^^^^

    (x: { n: number }): number
>x : { n: number; }
>  : ^^^^^      ^^^
>n : number
>  : ^^^^^^
}

interface C {
    (x: { n: number }): number
>x : { n: number; }
>  : ^^^^^      ^^^
>n : number
>  : ^^^^^^

    (x: { s: string }): string
>x : { s: string; }
>  : ^^^^^      ^^^
>s : string
>  : ^^^^^^
}

var v: A;
>v : A
>  : ^

var v: B;
>v : A
>  : ^

v({ s: "", n: 0 }).toLowerCase();
>v({ s: "", n: 0 }).toLowerCase() : any
>                                 : ^^^
>v({ s: "", n: 0 }).toLowerCase : any
>                               : ^^^
>v({ s: "", n: 0 }) : never
>                   : ^^^^^
>v : A
>  : ^
>{ s: "", n: 0 } : { s: string; n: number; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>s : string
>  : ^^^^^^
>"" : ""
>   : ^^
>n : number
>  : ^^^^^^
>0 : 0
>  : ^
>toLowerCase : any
>            : ^^^

var w: A;
>w : A
>  : ^

var w: C;
>w : A
>  : ^

w({ s: "", n: 0 }).toLowerCase();
>w({ s: "", n: 0 }).toLowerCase() : any
>                                 : ^^^
>w({ s: "", n: 0 }).toLowerCase : any
>                               : ^^^
>w({ s: "", n: 0 }) : never
>                   : ^^^^^
>w : A
>  : ^
>{ s: "", n: 0 } : { s: string; n: number; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>s : string
>  : ^^^^^^
>"" : ""
>   : ^^
>n : number
>  : ^^^^^^
>0 : 0
>  : ^
>toLowerCase : any
>            : ^^^

