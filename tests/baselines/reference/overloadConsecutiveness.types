//// [tests/cases/compiler/overloadConsecutiveness.ts] ////

=== overloadConsecutiveness.ts ===
// Making sure compiler won't break with declarations that are consecutive in the AST but not consecutive in the source. Syntax errors intentional.

function f1(), function f1();
>f1 : { (): any; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^
>f1 : { (): any; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^

function f2(), function f2() {}
>f2 : { (): any; (): void; }
>   : ^^^^^^^^^^^^^^^^^^^^^^
>f2 : { (): any; (): void; }
>   : ^^^^^^^^^^^^^^^^^^^^^^

function f3() {}, function f3();
>f3 : { (): void; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^^
>f3 : { (): void; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^^

class C {
>C : C
>  : ^

	m1(), m1();
>m1 : { (): any; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^
>m1 : { (): any; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^

	m2(), m2() {}
>m2 : { (): any; (): void; }
>   : ^^^^^^^^^^^^^^^^^^^^^^
>m2 : { (): any; (): void; }
>   : ^^^^^^^^^^^^^^^^^^^^^^

	m3() {}, m3();
>m3 : { (): void; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^^
>m3 : { (): void; (): any; }
>   : ^^^^^^^^^^^^^^^^^^^^^^
}

