//// [tests/cases/compiler/overloadsWithConstraints.ts] ////

=== overloadsWithConstraints.ts ===
declare function f<T extends Number>(x: T): T;
>f : Symbol(f, Decl(overloadsWithConstraints.ts, 0, 0), Decl(overloadsWithConstraints.ts, 0, 46))
>T : Symbol(T, Decl(overloadsWithConstraints.ts, 0, 19))
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(overloadsWithConstraints.ts, 0, 37))
>T : Symbol(T, Decl(overloadsWithConstraints.ts, 0, 19))
>T : Symbol(T, Decl(overloadsWithConstraints.ts, 0, 19))

declare function f<T extends String>(x: T): T
>f : Symbol(f, Decl(overloadsWithConstraints.ts, 0, 0), Decl(overloadsWithConstraints.ts, 0, 46))
>T : Symbol(T, Decl(overloadsWithConstraints.ts, 1, 19))
>String : Symbol(String, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(overloadsWithConstraints.ts, 1, 37))
>T : Symbol(T, Decl(overloadsWithConstraints.ts, 1, 19))
>T : Symbol(T, Decl(overloadsWithConstraints.ts, 1, 19))

var v = f<string>("");
>v : Symbol(v, Decl(overloadsWithConstraints.ts, 3, 3))
>f : Symbol(f, Decl(overloadsWithConstraints.ts, 0, 0), Decl(overloadsWithConstraints.ts, 0, 46))

