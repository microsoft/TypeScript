//// [tests/cases/conformance/override/override20.ts] ////

=== override20.ts ===
const Foo: C1 & C2 =
>Foo : C1 & C2
>    : ^^^^^^^

    class {
>class {        m1() { }        m2() { }    } : typeof Foo
>                                             : ^^^^^^^^^^

        m1() { }
>m1 : () => void
>   : ^^^^^^^^^^

        m2() { }
>m2 : () => void
>   : ^^^^^^^^^^
    }

interface I1 {
    m1(): void;
>m1 : () => void
>   : ^^^^^^    
}

interface I2 {
    m1(): void;
>m1 : () => void
>   : ^^^^^^    

    m2(): void;
>m2 : () => void
>   : ^^^^^^    
}

interface C1 {
    new(...args: any[]): I1;
>args : any[]
>     : ^^^^^
}

interface C2 {
    new(...args: any[]): I2;
>args : any[]
>     : ^^^^^
}

export class Bar extends Foo {
>Bar : Bar
>    : ^^^
>Foo : I1 & I2
>    : ^^^^^^^

    m1() {
>m1 : () => void
>   : ^^^^^^^^^^

        super.m1();
>super.m1() : void
>           : ^^^^
>super.m1 : (() => void) & (() => void)
>         : ^^^^^^^    ^^^^^^^^^^^    ^
>super : I1 & I2
>      : ^^^^^^^
>m1 : (() => void) & (() => void)
>   : ^^^^^^^    ^^^^^^^^^^^    ^
    }
    m2() {
>m2 : () => void
>   : ^^^^^^^^^^

        super.m2();
>super.m2() : void
>           : ^^^^
>super.m2 : () => void
>         : ^^^^^^    
>super : I1 & I2
>      : ^^^^^^^
>m2 : () => void
>   : ^^^^^^    
    }
}

