parameterPropertySelfReference.ts(5,37): error TS2372: Parameter 'f' cannot reference itself.
parameterPropertySelfReference.ts(10,17): error TS2502: 'f' is referenced directly or indirectly in its own type annotation.
parameterPropertySelfReference.ts(10,39): error TS2372: Parameter 'f' cannot reference itself.
parameterPropertySelfReference.ts(15,36): error TS2372: Parameter 'g' cannot reference itself.
parameterPropertySelfReference.ts(20,39): error TS2372: Parameter 'h' cannot reference itself.
parameterPropertySelfReference.ts(25,29): error TS2372: Parameter 'x' cannot reference itself.
parameterPropertySelfReference.ts(28,34): error TS2372: Parameter 'param' cannot reference itself.
parameterPropertySelfReference.ts(30,32): error TS2372: Parameter 'param' cannot reference itself.


==== parameterPropertySelfReference.ts (8 errors) ====
    // These should all produce "Parameter 'x' cannot reference itself" error (TS2372)
    
    class TestParameterProperty {
        // Parameter property with self-reference - currently NOT detected (BUG)
        constructor(private f: number = f) {} // Should error: Parameter 'f' cannot reference itself
                                        ~
!!! error TS2372: Parameter 'f' cannot reference itself.
    }
    
    class TestParameterPropertyWithTypeof {
        // Parameter property with typeof self-reference - from issue #62414
        constructor(private f: typeof f = f) {} // Should error: Parameter 'f' cannot reference itself
                    ~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2502: 'f' is referenced directly or indirectly in its own type annotation.
                                          ~
!!! error TS2372: Parameter 'f' cannot reference itself.
    }
    
    class TestParameterPropertyPublic {
        // Public parameter property
        constructor(public g: string = g) {} // Should error: Parameter 'g' cannot reference itself
                                       ~
!!! error TS2372: Parameter 'g' cannot reference itself.
    }
    
    class TestParameterPropertyReadonly {
        // Readonly parameter property
        constructor(readonly h: boolean = h) {} // Should error: Parameter 'h' cannot reference itself
                                          ~
!!! error TS2372: Parameter 'h' cannot reference itself.
    }
    
    // These should work correctly (already implemented)
    class TestRegularParameter {
        constructor(x: number = x) {} // Should error: Parameter 'x' cannot reference itself (already works)
                                ~
!!! error TS2372: Parameter 'x' cannot reference itself.
    }
    
    function regularFunction(param = param) {} // Should error: Parameter 'param' cannot reference itself (already works)
                                     ~~~~~
!!! error TS2372: Parameter 'param' cannot reference itself.
    
    const arrowFunction = (param = param) => {}; // Should error: Parameter 'param' cannot reference itself (already works)
                                   ~~~~~
!!! error TS2372: Parameter 'param' cannot reference itself.
    