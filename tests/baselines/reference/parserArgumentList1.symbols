//// [tests/cases/conformance/parser/ecmascript5/parserArgumentList1.ts] ////

=== parserArgumentList1.ts ===
export function removeClass (node:HTMLElement, className:string) {
>removeClass : Symbol(removeClass, Decl(parserArgumentList1.ts, 0, 0))
>node : Symbol(node, Decl(parserArgumentList1.ts, 0, 29))
>HTMLElement : Symbol(HTMLElement, Decl(lib.dom.d.ts, --, --), Decl(lib.dom.d.ts, --, --))
>className : Symbol(className, Decl(parserArgumentList1.ts, 0, 46))

	node.className = node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {
>node.className : Symbol(Element.className, Decl(lib.dom.d.ts, --, --))
>node : Symbol(node, Decl(parserArgumentList1.ts, 0, 29))
>className : Symbol(Element.className, Decl(lib.dom.d.ts, --, --))
>node.className.replace : Symbol(String.replace, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>node.className : Symbol(Element.className, Decl(lib.dom.d.ts, --, --))
>node : Symbol(node, Decl(parserArgumentList1.ts, 0, 29))
>className : Symbol(Element.className, Decl(lib.dom.d.ts, --, --))
>replace : Symbol(String.replace, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>className : Symbol(className, Decl(parserArgumentList1.ts, 0, 46))
>everything : Symbol(everything, Decl(parserArgumentList1.ts, 1, 80))
>leftDelimiter : Symbol(leftDelimiter, Decl(parserArgumentList1.ts, 1, 91))
>name : Symbol(name, Decl(parserArgumentList1.ts, 1, 106))
>rightDelimiter : Symbol(rightDelimiter, Decl(parserArgumentList1.ts, 1, 112))

		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';
>leftDelimiter : Symbol(leftDelimiter, Decl(parserArgumentList1.ts, 1, 91))
>rightDelimiter : Symbol(rightDelimiter, Decl(parserArgumentList1.ts, 1, 112))

	});
}
