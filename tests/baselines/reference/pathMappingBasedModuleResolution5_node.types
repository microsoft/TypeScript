//// [tests/cases/compiler/pathMappingBasedModuleResolution5_node.ts] ////

=== c:/root/folder1/file1.ts ===
import {x} from "folder2/file1"
>x : number
>  : ^^^^^^

import {y} from "folder3/file2"
>y : number
>  : ^^^^^^

import {z} from "components/file3"
>z : number
>  : ^^^^^^

import {z1} from "file4"
>z1 : number
>   : ^^^^^^

declare function use(a: any): void;
>use : (a: any) => void
>    : ^ ^^   ^^^^^    
>a : any

use(x.toExponential());
>use(x.toExponential()) : void
>                       : ^^^^
>use : (a: any) => void
>    : ^ ^^   ^^^^^    
>x.toExponential() : string
>                  : ^^^^^^
>x.toExponential : (fractionDigits?: number) => string
>                : ^              ^^^      ^^^^^      
>x : number
>  : ^^^^^^
>toExponential : (fractionDigits?: number) => string
>              : ^              ^^^      ^^^^^      

use(y.toExponential());
>use(y.toExponential()) : void
>                       : ^^^^
>use : (a: any) => void
>    : ^ ^^   ^^^^^    
>y.toExponential() : string
>                  : ^^^^^^
>y.toExponential : (fractionDigits?: number) => string
>                : ^              ^^^      ^^^^^      
>y : number
>  : ^^^^^^
>toExponential : (fractionDigits?: number) => string
>              : ^              ^^^      ^^^^^      

use(z.toExponential());
>use(z.toExponential()) : void
>                       : ^^^^
>use : (a: any) => void
>    : ^ ^^   ^^^^^    
>z.toExponential() : string
>                  : ^^^^^^
>z.toExponential : (fractionDigits?: number) => string
>                : ^              ^^^      ^^^^^      
>z : number
>  : ^^^^^^
>toExponential : (fractionDigits?: number) => string
>              : ^              ^^^      ^^^^^      

use(z1.toExponential());
>use(z1.toExponential()) : void
>                        : ^^^^
>use : (a: any) => void
>    : ^ ^^   ^^^^^    
>z1.toExponential() : string
>                   : ^^^^^^
>z1.toExponential : (fractionDigits?: number) => string
>                 : ^              ^^^      ^^^^^      
>z1 : number
>   : ^^^^^^
>toExponential : (fractionDigits?: number) => string
>              : ^              ^^^      ^^^^^      

=== c:/root/folder2/file1.ts ===
export var x = 1;
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

=== c:/root/generated/folder3/file2.ts ===
export var y = 1;
>y : number
>  : ^^^^^^
>1 : 1
>  : ^

=== c:/root/shared/components/file3/index.d.ts ===
export var z: number;
>z : number
>  : ^^^^^^

=== c:/node_modules/file4.ts ===
export var z1 = 1;
>z1 : number
>   : ^^^^^^
>1 : 1
>  : ^

