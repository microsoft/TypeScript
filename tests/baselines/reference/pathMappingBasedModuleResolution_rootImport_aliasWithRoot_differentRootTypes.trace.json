[
    "======== Resolving module '/foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name '/foo'.",
    "'paths' option is specified, looking for a pattern to match module name '/foo'.",
    "Module name '/foo', matched pattern '/*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name '/foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module '/bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name '/bar'.",
    "'paths' option is specified, looking for a pattern to match module name '/bar'.",
    "Module name '/bar', matched pattern '/*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name '/bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module 'c:/foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'c:/foo'.",
    "'paths' option is specified, looking for a pattern to match module name 'c:/foo'.",
    "Module name 'c:/foo', matched pattern 'c:/*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name 'c:/foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module 'c:/bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'c:/bar'.",
    "'paths' option is specified, looking for a pattern to match module name 'c:/bar'.",
    "Module name 'c:/bar', matched pattern 'c:/*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name 'c:/bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module 'c:\\foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'c:\\foo'.",
    "'paths' option is specified, looking for a pattern to match module name 'c:\\foo'.",
    "Module name 'c:\\foo', matched pattern 'c:\\*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name 'c:\\foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module 'c:\\bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'c:\\bar'.",
    "'paths' option is specified, looking for a pattern to match module name 'c:\\bar'.",
    "Module name 'c:\\bar', matched pattern 'c:\\*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name 'c:\\bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module '//server/foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name '//server/foo'.",
    "'paths' option is specified, looking for a pattern to match module name '//server/foo'.",
    "Module name '//server/foo', matched pattern '//server/*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name '//server/foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module '//server/bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name '//server/bar'.",
    "'paths' option is specified, looking for a pattern to match module name '//server/bar'.",
    "Module name '//server/bar', matched pattern '//server/*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name '//server/bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module '\\\\server\\foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name '\\\\server\\foo'.",
    "'paths' option is specified, looking for a pattern to match module name '\\\\server\\foo'.",
    "Module name '\\\\server\\foo', matched pattern '\\\\server\\*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name '\\\\server\\foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module '\\\\server\\bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name '\\\\server\\bar'.",
    "'paths' option is specified, looking for a pattern to match module name '\\\\server\\bar'.",
    "Module name '\\\\server\\bar', matched pattern '\\\\server\\*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name '\\\\server\\bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module 'file:///foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'file:///foo'.",
    "'paths' option is specified, looking for a pattern to match module name 'file:///foo'.",
    "Module name 'file:///foo', matched pattern 'file:///*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name 'file:///foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module 'file:///bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'file:///bar'.",
    "'paths' option is specified, looking for a pattern to match module name 'file:///bar'.",
    "Module name 'file:///bar', matched pattern 'file:///*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name 'file:///bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module 'file://c:/foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'file://c:/foo'.",
    "'paths' option is specified, looking for a pattern to match module name 'file://c:/foo'.",
    "Module name 'file://c:/foo', matched pattern 'file://c:/*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name 'file://c:/foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module 'file://c:/bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'file://c:/bar'.",
    "'paths' option is specified, looking for a pattern to match module name 'file://c:/bar'.",
    "Module name 'file://c:/bar', matched pattern 'file://c:/*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name 'file://c:/bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module 'file://server/foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'file://server/foo'.",
    "'paths' option is specified, looking for a pattern to match module name 'file://server/foo'.",
    "Module name 'file://server/foo', matched pattern 'file://server/*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name 'file://server/foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module 'file://server/bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'file://server/bar'.",
    "'paths' option is specified, looking for a pattern to match module name 'file://server/bar'.",
    "Module name 'file://server/bar', matched pattern 'file://server/*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name 'file://server/bar' was successfully resolved to '/root/src/bar.js'. ========",
    "======== Resolving module 'http://server/foo' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'http://server/foo'.",
    "'paths' option is specified, looking for a pattern to match module name 'http://server/foo'.",
    "Module name 'http://server/foo', matched pattern 'http://server/*'.",
    "Trying substitution './src/*', candidate module location: './src/foo'.",
    "Loading module as file / folder, candidate module location '/root/src/foo', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/foo.ts' exists - use it as a name resolution result.",
    "======== Module name 'http://server/foo' was successfully resolved to '/root/src/foo.ts'. ========",
    "======== Resolving module 'http://server/bar' from '/root/a.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/root', using this value to resolve non-relative module name 'http://server/bar'.",
    "'paths' option is specified, looking for a pattern to match module name 'http://server/bar'.",
    "Module name 'http://server/bar', matched pattern 'http://server/*'.",
    "Trying substitution './src/*', candidate module location: './src/bar'.",
    "Loading module as file / folder, candidate module location '/root/src/bar', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/root/src/bar.ts' does not exist.",
    "File '/root/src/bar.tsx' does not exist.",
    "File '/root/src/bar.d.ts' does not exist.",
    "File '/root/src/bar.js' exists - use it as a name resolution result.",
    "======== Module name 'http://server/bar' was successfully resolved to '/root/src/bar.js'. ========"
]