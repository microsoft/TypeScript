//// [tests/cases/compiler/privacyCannotNameVarTypeDeclFile.ts] ////

=== privacyCannotNameVarTypeDeclFile_consumer.ts ===
import exporter = require("./privacyCannotNameVarTypeDeclFile_exporter");
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))

export class publicClassWithWithPrivatePropertyTypes {
>publicClassWithWithPrivatePropertyTypes : Symbol(publicClassWithWithPrivatePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 73))

    static myPublicStaticProperty = exporter.createExportedWidget1(); // Error
>myPublicStaticProperty : Symbol(publicClassWithWithPrivatePropertyTypes.myPublicStaticProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 1, 54))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    private static myPrivateStaticProperty = exporter.createExportedWidget1();
>myPrivateStaticProperty : Symbol(publicClassWithWithPrivatePropertyTypes.myPrivateStaticProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 2, 69))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    myPublicProperty = exporter.createExportedWidget1(); // Error
>myPublicProperty : Symbol(publicClassWithWithPrivatePropertyTypes.myPublicProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 3, 78))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    private myPrivateProperty = exporter.createExportedWidget1();
>myPrivateProperty : Symbol(publicClassWithWithPrivatePropertyTypes.myPrivateProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 4, 56))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    static myPublicStaticProperty1 = exporter.createExportedWidget3(); // Error
>myPublicStaticProperty1 : Symbol(publicClassWithWithPrivatePropertyTypes.myPublicStaticProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 5, 65))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    private static myPrivateStaticProperty1 = exporter.createExportedWidget3();
>myPrivateStaticProperty1 : Symbol(publicClassWithWithPrivatePropertyTypes.myPrivateStaticProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 7, 70))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    myPublicProperty1 = exporter.createExportedWidget3(); // Error
>myPublicProperty1 : Symbol(publicClassWithWithPrivatePropertyTypes.myPublicProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 8, 79))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    private myPrivateProperty1 = exporter.createExportedWidget3();
>myPrivateProperty1 : Symbol(publicClassWithWithPrivatePropertyTypes.myPrivateProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 9, 57))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
}

class privateClassWithWithPrivatePropertyTypes {
>privateClassWithWithPrivatePropertyTypes : Symbol(privateClassWithWithPrivatePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 11, 1))

    static myPublicStaticProperty = exporter.createExportedWidget1(); 
>myPublicStaticProperty : Symbol(privateClassWithWithPrivatePropertyTypes.myPublicStaticProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 13, 48))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    private static myPrivateStaticProperty = exporter.createExportedWidget1();
>myPrivateStaticProperty : Symbol(privateClassWithWithPrivatePropertyTypes.myPrivateStaticProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 14, 69))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    myPublicProperty = exporter.createExportedWidget1(); 
>myPublicProperty : Symbol(privateClassWithWithPrivatePropertyTypes.myPublicProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 15, 78))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    private myPrivateProperty = exporter.createExportedWidget1();
>myPrivateProperty : Symbol(privateClassWithWithPrivatePropertyTypes.myPrivateProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 16, 56))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    static myPublicStaticProperty1 = exporter.createExportedWidget3(); 
>myPublicStaticProperty1 : Symbol(privateClassWithWithPrivatePropertyTypes.myPublicStaticProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 17, 65))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    private static myPrivateStaticProperty1 = exporter.createExportedWidget3();
>myPrivateStaticProperty1 : Symbol(privateClassWithWithPrivatePropertyTypes.myPrivateStaticProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 19, 70))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    myPublicProperty1 = exporter.createExportedWidget3(); 
>myPublicProperty1 : Symbol(privateClassWithWithPrivatePropertyTypes.myPublicProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 20, 79))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    private myPrivateProperty1 = exporter.createExportedWidget3();
>myPrivateProperty1 : Symbol(privateClassWithWithPrivatePropertyTypes.myPrivateProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 21, 57))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
}

export var publicVarWithPrivatePropertyTypes= exporter.createExportedWidget1(); // Error
>publicVarWithPrivatePropertyTypes : Symbol(publicVarWithPrivatePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 25, 10))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

var privateVarWithPrivatePropertyTypes= exporter.createExportedWidget1();
>privateVarWithPrivatePropertyTypes : Symbol(privateVarWithPrivatePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 26, 3))
>exporter.createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget1 : Symbol(exporter.createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

export var publicVarWithPrivatePropertyTypes1 = exporter.createExportedWidget3(); // Error
>publicVarWithPrivatePropertyTypes1 : Symbol(publicVarWithPrivatePropertyTypes1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 27, 10))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

var privateVarWithPrivatePropertyTypes1 = exporter.createExportedWidget3();
>privateVarWithPrivatePropertyTypes1 : Symbol(privateVarWithPrivatePropertyTypes1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 28, 3))
>exporter.createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget3 : Symbol(exporter.createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

export class publicClassWithPrivateModulePropertyTypes {
>publicClassWithPrivateModulePropertyTypes : Symbol(publicClassWithPrivateModulePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 28, 75))

    static myPublicStaticProperty= exporter.createExportedWidget2(); // Error
>myPublicStaticProperty : Symbol(publicClassWithPrivateModulePropertyTypes.myPublicStaticProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 30, 56))
>exporter.createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

    myPublicProperty = exporter.createExportedWidget2(); // Error
>myPublicProperty : Symbol(publicClassWithPrivateModulePropertyTypes.myPublicProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 31, 68))
>exporter.createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

    static myPublicStaticProperty1 = exporter.createExportedWidget4(); // Error
>myPublicStaticProperty1 : Symbol(publicClassWithPrivateModulePropertyTypes.myPublicStaticProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 32, 56))
>exporter.createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))

    myPublicProperty1 = exporter.createExportedWidget4(); // Error
>myPublicProperty1 : Symbol(publicClassWithPrivateModulePropertyTypes.myPublicProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 33, 70))
>exporter.createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
}
export var publicVarWithPrivateModulePropertyTypes= exporter.createExportedWidget2(); // Error
>publicVarWithPrivateModulePropertyTypes : Symbol(publicVarWithPrivateModulePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 36, 10))
>exporter.createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

export var publicVarWithPrivateModulePropertyTypes1 = exporter.createExportedWidget4(); // Error
>publicVarWithPrivateModulePropertyTypes1 : Symbol(publicVarWithPrivateModulePropertyTypes1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 37, 10))
>exporter.createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))

class privateClassWithPrivateModulePropertyTypes {
>privateClassWithPrivateModulePropertyTypes : Symbol(privateClassWithPrivateModulePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 37, 87))

    static myPublicStaticProperty= exporter.createExportedWidget2();
>myPublicStaticProperty : Symbol(privateClassWithPrivateModulePropertyTypes.myPublicStaticProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 39, 50))
>exporter.createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

    myPublicProperty= exporter.createExportedWidget2();
>myPublicProperty : Symbol(privateClassWithPrivateModulePropertyTypes.myPublicProperty, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 40, 68))
>exporter.createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

    static myPublicStaticProperty1 = exporter.createExportedWidget4();
>myPublicStaticProperty1 : Symbol(privateClassWithPrivateModulePropertyTypes.myPublicStaticProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 41, 55))
>exporter.createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))

    myPublicProperty1 = exporter.createExportedWidget4();
>myPublicProperty1 : Symbol(privateClassWithPrivateModulePropertyTypes.myPublicProperty1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 42, 70))
>exporter.createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
}
var privateVarWithPrivateModulePropertyTypes= exporter.createExportedWidget2();
>privateVarWithPrivateModulePropertyTypes : Symbol(privateVarWithPrivateModulePropertyTypes, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 45, 3))
>exporter.createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget2 : Symbol(exporter.createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

var privateVarWithPrivateModulePropertyTypes1 = exporter.createExportedWidget4();
>privateVarWithPrivateModulePropertyTypes1 : Symbol(privateVarWithPrivateModulePropertyTypes1, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 46, 3))
>exporter.createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))
>exporter : Symbol(exporter, Decl(privacyCannotNameVarTypeDeclFile_consumer.ts, 0, 0))
>createExportedWidget4 : Symbol(exporter.createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))

=== privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts ===
declare module "GlobalWidgets" {
>"GlobalWidgets" : Symbol("GlobalWidgets", Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 0, 0))

    export class Widget3 {
>Widget3 : Symbol(Widget3, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 0, 32))

        name: string;
>name : Symbol(Widget3.name, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 1, 26))
    }
    export function createWidget3(): Widget3;
>createWidget3 : Symbol(createWidget3, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 3, 5))
>Widget3 : Symbol(Widget3, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 0, 32))

    export namespace SpecializedGlobalWidget {
>SpecializedGlobalWidget : Symbol(SpecializedGlobalWidget, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 4, 45))

        export class Widget4 {
>Widget4 : Symbol(Widget4, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 6, 46))

            name: string;
>name : Symbol(Widget4.name, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 7, 30))
        }
        function createWidget4(): Widget4;
>createWidget4 : Symbol(createWidget4, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 9, 9))
>Widget4 : Symbol(Widget4, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 6, 46))
    }
}

=== privacyCannotNameVarTypeDeclFile_Widgets.ts ===
export class Widget1 {
>Widget1 : Symbol(Widget1, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 0, 0))

    name = 'one';
>name : Symbol(Widget1.name, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 0, 22))
}
export function createWidget1() {
>createWidget1 : Symbol(createWidget1, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 2, 1))

    return new Widget1();
>Widget1 : Symbol(Widget1, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 0, 0))
}

export namespace SpecializedWidget {
>SpecializedWidget : Symbol(SpecializedWidget, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 5, 1))

    export class Widget2 {
>Widget2 : Symbol(Widget2, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 7, 36))

        name = 'one';
>name : Symbol(Widget2.name, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 8, 26))
    }
    export function createWidget2() {
>createWidget2 : Symbol(createWidget2, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 10, 5))

        return new Widget2();
>Widget2 : Symbol(Widget2, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 7, 36))
    }
}

=== privacyCannotNameVarTypeDeclFile_exporter.ts ===
///<reference path='privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts'/>
import Widgets = require("./privacyCannotNameVarTypeDeclFile_Widgets");
>Widgets : Symbol(Widgets, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 0, 0))

import Widgets1 = require("GlobalWidgets");
>Widgets1 : Symbol(Widgets1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 1, 71))

export function createExportedWidget1() {
>createExportedWidget1 : Symbol(createExportedWidget1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 2, 43))

    return Widgets.createWidget1();
>Widgets.createWidget1 : Symbol(Widgets.createWidget1, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 2, 1))
>Widgets : Symbol(Widgets, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 0, 0))
>createWidget1 : Symbol(Widgets.createWidget1, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 2, 1))
}
export function createExportedWidget2() {
>createExportedWidget2 : Symbol(createExportedWidget2, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 5, 1))

    return Widgets.SpecializedWidget.createWidget2();
>Widgets.SpecializedWidget.createWidget2 : Symbol(Widgets.SpecializedWidget.createWidget2, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 10, 5))
>Widgets.SpecializedWidget : Symbol(Widgets.SpecializedWidget, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 5, 1))
>Widgets : Symbol(Widgets, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 0, 0))
>SpecializedWidget : Symbol(Widgets.SpecializedWidget, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 5, 1))
>createWidget2 : Symbol(Widgets.SpecializedWidget.createWidget2, Decl(privacyCannotNameVarTypeDeclFile_Widgets.ts, 10, 5))
}
export function createExportedWidget3() {
>createExportedWidget3 : Symbol(createExportedWidget3, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 8, 1))

    return Widgets1.createWidget3();
>Widgets1.createWidget3 : Symbol(Widgets1.createWidget3, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 3, 5))
>Widgets1 : Symbol(Widgets1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 1, 71))
>createWidget3 : Symbol(Widgets1.createWidget3, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 3, 5))
}
export function createExportedWidget4() {
>createExportedWidget4 : Symbol(createExportedWidget4, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 11, 1))

    return Widgets1.SpecializedGlobalWidget.createWidget4();
>Widgets1.SpecializedGlobalWidget.createWidget4 : Symbol(Widgets1.SpecializedGlobalWidget.createWidget4, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 9, 9))
>Widgets1.SpecializedGlobalWidget : Symbol(Widgets1.SpecializedGlobalWidget, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 4, 45))
>Widgets1 : Symbol(Widgets1, Decl(privacyCannotNameVarTypeDeclFile_exporter.ts, 1, 71))
>SpecializedGlobalWidget : Symbol(Widgets1.SpecializedGlobalWidget, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 4, 45))
>createWidget4 : Symbol(Widgets1.SpecializedGlobalWidget.createWidget4, Decl(privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts, 9, 9))
}

