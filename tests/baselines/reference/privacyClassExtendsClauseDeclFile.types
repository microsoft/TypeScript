//// [tests/cases/compiler/privacyClassExtendsClauseDeclFile.ts] ////

=== privacyClassExtendsClauseDeclFile_externalModule.ts ===
export module publicModule {
>publicModule : typeof publicModule
>             : ^^^^^^^^^^^^^^^^^^^

    export class publicClassInPublicModule {
>publicClassInPublicModule : publicClassInPublicModule
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^

        private f1() {
>f1 : () => void
>   : ^^^^^^^^^^
        }
    }

    class privateClassInPublicModule {
>privateClassInPublicModule : privateClassInPublicModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }

    class privateClassExtendingPublicClassInModule extends publicClassInPublicModule {
>privateClassExtendingPublicClassInModule : privateClassExtendingPublicClassInModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInPublicModule : publicClassInPublicModule
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    class privateClassExtendingPrivateClassInModule extends privateClassInPublicModule {
>privateClassExtendingPrivateClassInModule : privateClassExtendingPrivateClassInModule
>                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClassInPublicModule : privateClassInPublicModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingPublicClassInModule extends publicClassInPublicModule {
>publicClassExtendingPublicClassInModule : publicClassExtendingPublicClassInModule
>                                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInPublicModule : publicClassInPublicModule
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingPrivateClassInModule extends privateClassInPublicModule { // Should error
>publicClassExtendingPrivateClassInModule : publicClassExtendingPrivateClassInModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClassInPublicModule : privateClassInPublicModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }

    class privateClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
>privateClassExtendingFromPrivateModuleClass : privateClassExtendingFromPrivateModuleClass
>                                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule.publicClassInPrivateModule : privateModule.publicClassInPrivateModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : typeof privateModule.publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule { // Should error
>publicClassExtendingFromPrivateModuleClass : publicClassExtendingFromPrivateModuleClass
>                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule.publicClassInPrivateModule : privateModule.publicClassInPrivateModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : typeof privateModule.publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
}

module privateModule {
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^

    export class publicClassInPrivateModule {
>publicClassInPrivateModule : publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^

        private f1() {
>f1 : () => void
>   : ^^^^^^^^^^
        }
    }

    class privateClassInPrivateModule {
>privateClassInPrivateModule : privateClassInPrivateModule
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }

    class privateClassExtendingPublicClassInModule extends publicClassInPrivateModule {
>privateClassExtendingPublicClassInModule : privateClassExtendingPublicClassInModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    class privateClassExtendingPrivateClassInModule extends privateClassInPrivateModule {
>privateClassExtendingPrivateClassInModule : privateClassExtendingPrivateClassInModule
>                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClassInPrivateModule : privateClassInPrivateModule
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingPublicClassInModule extends publicClassInPrivateModule {
>publicClassExtendingPublicClassInModule : publicClassExtendingPublicClassInModule
>                                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingPrivateClassInModule extends privateClassInPrivateModule { 
>publicClassExtendingPrivateClassInModule : publicClassExtendingPrivateClassInModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClassInPrivateModule : privateClassInPrivateModule
>                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }

    class privateClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
>privateClassExtendingFromPrivateModuleClass : privateClassExtendingFromPrivateModuleClass
>                                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule.publicClassInPrivateModule : publicClassInPrivateModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : typeof publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
>publicClassExtendingFromPrivateModuleClass : publicClassExtendingFromPrivateModuleClass
>                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule.publicClassInPrivateModule : publicClassInPrivateModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : typeof publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
}

export class publicClass {
>publicClass : publicClass
>            : ^^^^^^^^^^^

    private f1() {
>f1 : () => void
>   : ^^^^^^^^^^
    }
}

class privateClass {
>privateClass : privateClass
>             : ^^^^^^^^^^^^
}

class privateClassExtendingPublicClass extends publicClass {
>privateClassExtendingPublicClass : privateClassExtendingPublicClass
>                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClass : publicClass
>            : ^^^^^^^^^^^
}
class privateClassExtendingPrivateClassInModule extends privateClass {
>privateClassExtendingPrivateClassInModule : privateClassExtendingPrivateClassInModule
>                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClass : privateClass
>             : ^^^^^^^^^^^^
}
export class publicClassExtendingPublicClass extends publicClass {
>publicClassExtendingPublicClass : publicClassExtendingPublicClass
>                                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClass : publicClass
>            : ^^^^^^^^^^^
}
export class publicClassExtendingPrivateClass extends privateClass { // Should error
>publicClassExtendingPrivateClass : publicClassExtendingPrivateClass
>                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClass : privateClass
>             : ^^^^^^^^^^^^
}

class privateClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule {
>privateClassExtendingFromPrivateModuleClass : privateClassExtendingFromPrivateModuleClass
>                                            : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule.publicClassInPrivateModule : privateModule.publicClassInPrivateModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : typeof privateModule.publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}
export class publicClassExtendingFromPrivateModuleClass extends privateModule.publicClassInPrivateModule { // Should error
>publicClassExtendingFromPrivateModuleClass : publicClassExtendingFromPrivateModuleClass
>                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule.publicClassInPrivateModule : privateModule.publicClassInPrivateModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateModule : typeof privateModule
>              : ^^^^^^^^^^^^^^^^^^^^
>publicClassInPrivateModule : typeof privateModule.publicClassInPrivateModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}

=== privacyClassExtendsClauseDeclFile_GlobalFile.ts ===
module publicModuleInGlobal {
>publicModuleInGlobal : typeof publicModuleInGlobal
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

    export class publicClassInPublicModule {
>publicClassInPublicModule : publicClassInPublicModule
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^

        private f1() {
>f1 : () => void
>   : ^^^^^^^^^^
        }
    }

    class privateClassInPublicModule {
>privateClassInPublicModule : privateClassInPublicModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }

    class privateClassExtendingPublicClassInModule extends publicClassInPublicModule {
>privateClassExtendingPublicClassInModule : privateClassExtendingPublicClassInModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInPublicModule : publicClassInPublicModule
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    class privateClassExtendingPrivateClassInModule extends privateClassInPublicModule {
>privateClassExtendingPrivateClassInModule : privateClassExtendingPrivateClassInModule
>                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClassInPublicModule : privateClassInPublicModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingPublicClassInModule extends publicClassInPublicModule {
>publicClassExtendingPublicClassInModule : publicClassExtendingPublicClassInModule
>                                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInPublicModule : publicClassInPublicModule
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^
    }
    export class publicClassExtendingPrivateClassInModule extends privateClassInPublicModule { // Should error
>publicClassExtendingPrivateClassInModule : publicClassExtendingPrivateClassInModule
>                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>privateClassInPublicModule : privateClassInPublicModule
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^
    }
}
class publicClassInGlobal {
>publicClassInGlobal : publicClassInGlobal
>                    : ^^^^^^^^^^^^^^^^^^^
}
class publicClassExtendingPublicClassInGlobal extends publicClassInGlobal {
>publicClassExtendingPublicClassInGlobal : publicClassExtendingPublicClassInGlobal
>                                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>publicClassInGlobal : publicClassInGlobal
>                    : ^^^^^^^^^^^^^^^^^^^
}

