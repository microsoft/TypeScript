privacyClassImplementsClauseDeclFile_GlobalFile.ts(1,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
privacyClassImplementsClauseDeclFile_externalModule.ts(1,15): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
privacyClassImplementsClauseDeclFile_externalModule.ts(26,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.


==== privacyClassImplementsClauseDeclFile_externalModule.ts (2 errors) ====
    export module publicModule {
                  ~~~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export interface publicInterfaceInPublicModule {
        }
    
        interface privateInterfaceInPublicModule {
        }
    
        class privateClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
        }
        class privateClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule {
        }
        export class publicClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
        }
        export class publicClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule { // Should error
        }
    
        class privateClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
        }
        export class publicClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule { // Should error
        }
    
        export class publicClassImplementingPrivateAndPublicInterface implements privateInterfaceInPublicModule, publicInterfaceInPublicModule { // Should error
        }
    }
    
    module privateModule {
           ~~~~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export interface publicInterfaceInPrivateModule {
    
        }
    
        interface privateInterfaceInPrivateModule {
        }
    
        class privateClassImplementingPublicInterfaceInModule implements publicInterfaceInPrivateModule {
        }
        class privateClassImplementingPrivateInterfaceInModule implements privateInterfaceInPrivateModule {
        }
        export class publicClassImplementingPublicInterfaceInModule implements publicInterfaceInPrivateModule {
        }
        export class publicClassImplementingPrivateInterfaceInModule implements privateInterfaceInPrivateModule { 
        }
    
        class privateClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
        }
        export class publicClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
        }
    }
    
    export interface publicInterface {
    
    }
    
    interface privateInterface {
    }
    
    class privateClassImplementingPublicInterface implements publicInterface {
    }
    class privateClassImplementingPrivateInterfaceInModule implements privateInterface {
    }
    export class publicClassImplementingPublicInterface implements publicInterface {
    }
    export class publicClassImplementingPrivateInterface implements privateInterface { // Should error
    }
    
    class privateClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
    }
    export class publicClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule { // Should error
    }
    
==== privacyClassImplementsClauseDeclFile_GlobalFile.ts (1 errors) ====
    module publicModuleInGlobal {
           ~~~~~~~~~~~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export interface publicInterfaceInPublicModule {
        }
    
        interface privateInterfaceInPublicModule {
        }
    
        class privateClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
        }
        class privateClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule {
        }
        export class publicClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
        }
        export class publicClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule { // Should error
        }
    }
    interface publicInterfaceInGlobal {
    }
    class publicClassImplementingPublicInterfaceInGlobal implements publicInterfaceInGlobal {
    }
    