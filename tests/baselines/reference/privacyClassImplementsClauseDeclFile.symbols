//// [tests/cases/compiler/privacyClassImplementsClauseDeclFile.ts] ////

=== privacyClassImplementsClauseDeclFile_externalModule.ts ===
export namespace publicModule {
>publicModule : Symbol(publicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 0, 0))

    export interface publicInterfaceInPublicModule {
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 0, 31))
    }

    interface privateInterfaceInPublicModule {
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 2, 5))
    }

    class privateClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
>privateClassImplementingPublicInterfaceInModule : Symbol(privateClassImplementingPublicInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 5, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 0, 31))
    }
    class privateClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule {
>privateClassImplementingPrivateInterfaceInModule : Symbol(privateClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 8, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 2, 5))
    }
    export class publicClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
>publicClassImplementingPublicInterfaceInModule : Symbol(publicClassImplementingPublicInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 10, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 0, 31))
    }
    export class publicClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule { // Should error
>publicClassImplementingPrivateInterfaceInModule : Symbol(publicClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 12, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 2, 5))
    }

    class privateClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
>privateClassImplementingFromPrivateModuleInterface : Symbol(privateClassImplementingFromPrivateModuleInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 14, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
    }
    export class publicClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule { // Should error
>publicClassImplementingFromPrivateModuleInterface : Symbol(publicClassImplementingFromPrivateModuleInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 17, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
    }

    export class publicClassImplementingPrivateAndPublicInterface implements privateInterfaceInPublicModule, publicInterfaceInPublicModule { // Should error
>publicClassImplementingPrivateAndPublicInterface : Symbol(publicClassImplementingPrivateAndPublicInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 19, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 2, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 0, 31))
    }
}

namespace privateModule {
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))

    export interface publicInterfaceInPrivateModule {
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))

    }

    interface privateInterfaceInPrivateModule {
>privateInterfaceInPrivateModule : Symbol(privateInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 28, 5))
    }

    class privateClassImplementingPublicInterfaceInModule implements publicInterfaceInPrivateModule {
>privateClassImplementingPublicInterfaceInModule : Symbol(privateClassImplementingPublicInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 31, 5))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
    }
    class privateClassImplementingPrivateInterfaceInModule implements privateInterfaceInPrivateModule {
>privateClassImplementingPrivateInterfaceInModule : Symbol(privateClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 34, 5))
>privateInterfaceInPrivateModule : Symbol(privateInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 28, 5))
    }
    export class publicClassImplementingPublicInterfaceInModule implements publicInterfaceInPrivateModule {
>publicClassImplementingPublicInterfaceInModule : Symbol(publicClassImplementingPublicInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 36, 5))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
    }
    export class publicClassImplementingPrivateInterfaceInModule implements privateInterfaceInPrivateModule { 
>publicClassImplementingPrivateInterfaceInModule : Symbol(publicClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 38, 5))
>privateInterfaceInPrivateModule : Symbol(privateInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 28, 5))
    }

    class privateClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
>privateClassImplementingFromPrivateModuleInterface : Symbol(privateClassImplementingFromPrivateModuleInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 40, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
    }
    export class publicClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
>publicClassImplementingFromPrivateModuleInterface : Symbol(publicClassImplementingFromPrivateModuleInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 43, 5))
>privateModule.publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
    }
}

export interface publicInterface {
>publicInterface : Symbol(publicInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 46, 1))

}

interface privateInterface {
>privateInterface : Symbol(privateInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 50, 1))
}

class privateClassImplementingPublicInterface implements publicInterface {
>privateClassImplementingPublicInterface : Symbol(privateClassImplementingPublicInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 53, 1))
>publicInterface : Symbol(publicInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 46, 1))
}
class privateClassImplementingPrivateInterfaceInModule implements privateInterface {
>privateClassImplementingPrivateInterfaceInModule : Symbol(privateClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 56, 1))
>privateInterface : Symbol(privateInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 50, 1))
}
export class publicClassImplementingPublicInterface implements publicInterface {
>publicClassImplementingPublicInterface : Symbol(publicClassImplementingPublicInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 58, 1))
>publicInterface : Symbol(publicInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 46, 1))
}
export class publicClassImplementingPrivateInterface implements privateInterface { // Should error
>publicClassImplementingPrivateInterface : Symbol(publicClassImplementingPrivateInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 60, 1))
>privateInterface : Symbol(privateInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 50, 1))
}

class privateClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule {
>privateClassImplementingFromPrivateModuleInterface : Symbol(privateClassImplementingFromPrivateModuleInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 62, 1))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
}
export class publicClassImplementingFromPrivateModuleInterface implements privateModule.publicInterfaceInPrivateModule { // Should error
>publicClassImplementingFromPrivateModuleInterface : Symbol(publicClassImplementingFromPrivateModuleInterface, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 65, 1))
>privateModule.publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
>privateModule : Symbol(privateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 23, 1))
>publicInterfaceInPrivateModule : Symbol(privateModule.publicInterfaceInPrivateModule, Decl(privacyClassImplementsClauseDeclFile_externalModule.ts, 25, 25))
}

=== privacyClassImplementsClauseDeclFile_GlobalFile.ts ===
namespace publicModuleInGlobal {
>publicModuleInGlobal : Symbol(publicModuleInGlobal, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 0, 0))

    export interface publicInterfaceInPublicModule {
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 0, 32))
    }

    interface privateInterfaceInPublicModule {
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 2, 5))
    }

    class privateClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
>privateClassImplementingPublicInterfaceInModule : Symbol(privateClassImplementingPublicInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 5, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 0, 32))
    }
    class privateClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule {
>privateClassImplementingPrivateInterfaceInModule : Symbol(privateClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 8, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 2, 5))
    }
    export class publicClassImplementingPublicInterfaceInModule implements publicInterfaceInPublicModule {
>publicClassImplementingPublicInterfaceInModule : Symbol(publicClassImplementingPublicInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 10, 5))
>publicInterfaceInPublicModule : Symbol(publicInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 0, 32))
    }
    export class publicClassImplementingPrivateInterfaceInModule implements privateInterfaceInPublicModule { // Should error
>publicClassImplementingPrivateInterfaceInModule : Symbol(publicClassImplementingPrivateInterfaceInModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 12, 5))
>privateInterfaceInPublicModule : Symbol(privateInterfaceInPublicModule, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 2, 5))
    }
}
interface publicInterfaceInGlobal {
>publicInterfaceInGlobal : Symbol(publicInterfaceInGlobal, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 15, 1))
}
class publicClassImplementingPublicInterfaceInGlobal implements publicInterfaceInGlobal {
>publicClassImplementingPublicInterfaceInGlobal : Symbol(publicClassImplementingPublicInterfaceInGlobal, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 17, 1))
>publicInterfaceInGlobal : Symbol(publicInterfaceInGlobal, Decl(privacyClassImplementsClauseDeclFile_GlobalFile.ts, 15, 1))
}

