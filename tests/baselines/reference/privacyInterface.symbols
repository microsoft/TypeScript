//// [tests/cases/compiler/privacyInterface.ts] ////

=== privacyInterface.ts ===
export namespace m1 {
>m1 : Symbol(m1, Decl(privacyInterface.ts, 0, 0))

    export class C1_public {
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        private f1() {
>f1 : Symbol(C1_public.f1, Decl(privacyInterface.ts, 1, 28))
        }
    }


    class C2_private {
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))
    }

    export interface C3_public {
>C3_public : Symbol(C3_public, Decl(privacyInterface.ts, 8, 5))

        (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 11, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 12, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 14, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        new (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 16, 13))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        new (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 17, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        new (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        new (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 19, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        [c: number]: C1_public;
>c : Symbol(c, Decl(privacyInterface.ts, 21, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        [c: string]: C2_private;
>c : Symbol(c, Decl(privacyInterface.ts, 22, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        x: C1_public;
>x : Symbol(C3_public.x, Decl(privacyInterface.ts, 22, 32))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        y: C2_private;
>y : Symbol(C3_public.y, Decl(privacyInterface.ts, 24, 21))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        a?: C1_public;
>a : Symbol(C3_public.a, Decl(privacyInterface.ts, 25, 22))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        b?: C2_private;
>b : Symbol(C3_public.b, Decl(privacyInterface.ts, 27, 22))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        f1(a1: C1_public);
>f1 : Symbol(C3_public.f1, Decl(privacyInterface.ts, 28, 23))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 30, 11))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        f2(a1: C2_private);
>f2 : Symbol(C3_public.f2, Decl(privacyInterface.ts, 30, 26))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 31, 11))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        f3(): C1_public;
>f3 : Symbol(C3_public.f3, Decl(privacyInterface.ts, 31, 27))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        f4(): C2_private;
>f4 : Symbol(C3_public.f4, Decl(privacyInterface.ts, 32, 24))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

    }

    interface C4_private {
>C4_private : Symbol(C4_private, Decl(privacyInterface.ts, 35, 5))

        (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 38, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 39, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 41, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        new (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 43, 13))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        new (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 44, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        new (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        new (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 46, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        [c: number]: C1_public;
>c : Symbol(c, Decl(privacyInterface.ts, 48, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        [c: string]: C2_private;
>c : Symbol(c, Decl(privacyInterface.ts, 49, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        x: C1_public;
>x : Symbol(C4_private.x, Decl(privacyInterface.ts, 49, 32))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        y: C2_private;
>y : Symbol(C4_private.y, Decl(privacyInterface.ts, 51, 21))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        a?: C1_public;
>a : Symbol(C4_private.a, Decl(privacyInterface.ts, 52, 22))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        b?: C2_private;
>b : Symbol(C4_private.b, Decl(privacyInterface.ts, 54, 22))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        f1(a1: C1_public);
>f1 : Symbol(C4_private.f1, Decl(privacyInterface.ts, 55, 23))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 57, 11))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        f2(a1: C2_private);
>f2 : Symbol(C4_private.f2, Decl(privacyInterface.ts, 57, 26))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 58, 11))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

        f3(): C1_public;
>f3 : Symbol(C4_private.f3, Decl(privacyInterface.ts, 58, 27))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 0, 21))

        f4(): C2_private;
>f4 : Symbol(C4_private.f4, Decl(privacyInterface.ts, 59, 24))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 4, 5))

    }
}


namespace m2 {
>m2 : Symbol(m2, Decl(privacyInterface.ts, 63, 1))

    export class C1_public {
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        private f1() {
>f1 : Symbol(C1_public.f1, Decl(privacyInterface.ts, 67, 28))
        }
    }


    class C2_private {
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))
    }

    export interface C3_public {
>C3_public : Symbol(C3_public, Decl(privacyInterface.ts, 74, 5))

        (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 77, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 78, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 80, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        new (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 82, 13))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        new (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 83, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        new (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        new (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 85, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        [c: number]: C1_public;
>c : Symbol(c, Decl(privacyInterface.ts, 87, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        [c: string]: C2_private;
>c : Symbol(c, Decl(privacyInterface.ts, 88, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        x: C1_public;
>x : Symbol(C3_public.x, Decl(privacyInterface.ts, 88, 32))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        y: C2_private;
>y : Symbol(C3_public.y, Decl(privacyInterface.ts, 90, 21))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        a?: C1_public;
>a : Symbol(C3_public.a, Decl(privacyInterface.ts, 91, 22))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        b?: C2_private;
>b : Symbol(C3_public.b, Decl(privacyInterface.ts, 93, 22))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        f1(a1: C1_public);
>f1 : Symbol(C3_public.f1, Decl(privacyInterface.ts, 94, 23))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 96, 11))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        f2(a1: C2_private);
>f2 : Symbol(C3_public.f2, Decl(privacyInterface.ts, 96, 26))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 97, 11))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        f3(): C1_public;
>f3 : Symbol(C3_public.f3, Decl(privacyInterface.ts, 97, 27))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        f4(): C2_private;
>f4 : Symbol(C3_public.f4, Decl(privacyInterface.ts, 98, 24))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

    }

    interface C4_private {
>C4_private : Symbol(C4_private, Decl(privacyInterface.ts, 101, 5))

        (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 104, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 105, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 107, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        new (c1: C1_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 109, 13))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        new (c1: C2_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 110, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        new (): C1_public;
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        new (c2: number): C2_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 112, 13))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        [c: number]: C1_public;
>c : Symbol(c, Decl(privacyInterface.ts, 114, 9))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        [c: string]: C2_private;
>c : Symbol(c, Decl(privacyInterface.ts, 115, 9))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        x: C1_public;
>x : Symbol(C4_private.x, Decl(privacyInterface.ts, 115, 32))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        y: C2_private;
>y : Symbol(C4_private.y, Decl(privacyInterface.ts, 117, 21))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        a?: C1_public;
>a : Symbol(C4_private.a, Decl(privacyInterface.ts, 118, 22))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        b?: C2_private;
>b : Symbol(C4_private.b, Decl(privacyInterface.ts, 120, 22))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        f1(a1: C1_public);
>f1 : Symbol(C4_private.f1, Decl(privacyInterface.ts, 121, 23))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 123, 11))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        f2(a1: C2_private);
>f2 : Symbol(C4_private.f2, Decl(privacyInterface.ts, 123, 26))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 124, 11))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

        f3(): C1_public;
>f3 : Symbol(C4_private.f3, Decl(privacyInterface.ts, 124, 27))
>C1_public : Symbol(C1_public, Decl(privacyInterface.ts, 66, 14))

        f4(): C2_private;
>f4 : Symbol(C4_private.f4, Decl(privacyInterface.ts, 125, 24))
>C2_private : Symbol(C2_private, Decl(privacyInterface.ts, 70, 5))

    }
}

export class C5_public {
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    private f1() {
>f1 : Symbol(C5_public.f1, Decl(privacyInterface.ts, 131, 24))
    }
}


class C6_private {
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))
}

export interface C7_public {
>C7_public : Symbol(C7_public, Decl(privacyInterface.ts, 138, 1))

    (c1: C5_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 141, 5))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    (c1: C6_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 142, 5))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    (): C5_public;
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    (c2: number): C6_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 144, 5))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    new (c1: C5_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 146, 9))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    new (c1: C6_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 147, 9))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    new (): C5_public;
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    new (c2: number): C6_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 149, 9))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    [c: number]: C5_public;
>c : Symbol(c, Decl(privacyInterface.ts, 151, 5))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    [c: string]: C6_private;
>c : Symbol(c, Decl(privacyInterface.ts, 152, 5))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    x: C5_public;
>x : Symbol(C7_public.x, Decl(privacyInterface.ts, 152, 28))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    y: C6_private;
>y : Symbol(C7_public.y, Decl(privacyInterface.ts, 154, 17))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    a?: C5_public;
>a : Symbol(C7_public.a, Decl(privacyInterface.ts, 155, 18))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    b?: C6_private;
>b : Symbol(C7_public.b, Decl(privacyInterface.ts, 157, 18))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    f1(a1: C5_public);
>f1 : Symbol(C7_public.f1, Decl(privacyInterface.ts, 158, 19))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 160, 7))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    f2(a1: C6_private);
>f2 : Symbol(C7_public.f2, Decl(privacyInterface.ts, 160, 22))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 161, 7))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    f3(): C5_public;
>f3 : Symbol(C7_public.f3, Decl(privacyInterface.ts, 161, 23))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    f4(): C6_private;
>f4 : Symbol(C7_public.f4, Decl(privacyInterface.ts, 162, 20))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

}

interface C8_private {
>C8_private : Symbol(C8_private, Decl(privacyInterface.ts, 165, 1))

    (c1: C5_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 168, 5))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    (c1: C6_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 169, 5))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    (): C5_public;
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    (c2: number): C6_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 171, 5))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    new (c1: C5_public);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 173, 9))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    new (c1: C6_private);
>c1 : Symbol(c1, Decl(privacyInterface.ts, 174, 9))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    new (): C5_public;
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    new (c2: number): C6_private;
>c2 : Symbol(c2, Decl(privacyInterface.ts, 176, 9))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    [c: number]: C5_public;
>c : Symbol(c, Decl(privacyInterface.ts, 178, 5))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    [c: string]: C6_private;
>c : Symbol(c, Decl(privacyInterface.ts, 179, 5))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    x: C5_public;
>x : Symbol(C8_private.x, Decl(privacyInterface.ts, 179, 28))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    y: C6_private;
>y : Symbol(C8_private.y, Decl(privacyInterface.ts, 181, 17))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    a?: C5_public;
>a : Symbol(C8_private.a, Decl(privacyInterface.ts, 182, 18))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    b?: C6_private;
>b : Symbol(C8_private.b, Decl(privacyInterface.ts, 184, 18))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    f1(a1: C5_public);
>f1 : Symbol(C8_private.f1, Decl(privacyInterface.ts, 185, 19))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 187, 7))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    f2(a1: C6_private);
>f2 : Symbol(C8_private.f2, Decl(privacyInterface.ts, 187, 22))
>a1 : Symbol(a1, Decl(privacyInterface.ts, 188, 7))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

    f3(): C5_public;
>f3 : Symbol(C8_private.f3, Decl(privacyInterface.ts, 188, 23))
>C5_public : Symbol(C5_public, Decl(privacyInterface.ts, 129, 1))

    f4(): C6_private;
>f4 : Symbol(C8_private.f4, Decl(privacyInterface.ts, 189, 20))
>C6_private : Symbol(C6_private, Decl(privacyInterface.ts, 134, 1))

}

export namespace m3 {
>m3 : Symbol(m3, Decl(privacyInterface.ts, 192, 1))

    export interface m3_i_public {
>m3_i_public : Symbol(m3_i_public, Decl(privacyInterface.ts, 194, 21))

        f1(): number;
>f1 : Symbol(m3_i_public.f1, Decl(privacyInterface.ts, 195, 34))
    }

    interface m3_i_private {
>m3_i_private : Symbol(m3_i_private, Decl(privacyInterface.ts, 197, 5))

        f2(): string;
>f2 : Symbol(m3_i_private.f2, Decl(privacyInterface.ts, 199, 28))
    }

    interface m3_C1_private extends m3_i_public {
>m3_C1_private : Symbol(m3_C1_private, Decl(privacyInterface.ts, 201, 5))
>m3_i_public : Symbol(m3_i_public, Decl(privacyInterface.ts, 194, 21))
    }
    interface m3_C2_private extends m3_i_private {
>m3_C2_private : Symbol(m3_C2_private, Decl(privacyInterface.ts, 204, 5))
>m3_i_private : Symbol(m3_i_private, Decl(privacyInterface.ts, 197, 5))
    }
    export interface m3_C3_public extends m3_i_public {
>m3_C3_public : Symbol(m3_C3_public, Decl(privacyInterface.ts, 206, 5))
>m3_i_public : Symbol(m3_i_public, Decl(privacyInterface.ts, 194, 21))
    }
    export interface m3_C4_public extends m3_i_private {
>m3_C4_public : Symbol(m3_C4_public, Decl(privacyInterface.ts, 208, 5))
>m3_i_private : Symbol(m3_i_private, Decl(privacyInterface.ts, 197, 5))
    }

    interface m3_C5_private extends m3_i_private, m3_i_public {
>m3_C5_private : Symbol(m3_C5_private, Decl(privacyInterface.ts, 210, 5))
>m3_i_private : Symbol(m3_i_private, Decl(privacyInterface.ts, 197, 5))
>m3_i_public : Symbol(m3_i_public, Decl(privacyInterface.ts, 194, 21))
    }
    export interface m3_C6_public extends  m3_i_private, m3_i_public {
>m3_C6_public : Symbol(m3_C6_public, Decl(privacyInterface.ts, 213, 5))
>m3_i_private : Symbol(m3_i_private, Decl(privacyInterface.ts, 197, 5))
>m3_i_public : Symbol(m3_i_public, Decl(privacyInterface.ts, 194, 21))
    }
}


namespace m4 {
>m4 : Symbol(m4, Decl(privacyInterface.ts, 216, 1))

    export interface m4_i_public {
>m4_i_public : Symbol(m4_i_public, Decl(privacyInterface.ts, 219, 14))

        f1(): number;
>f1 : Symbol(m4_i_public.f1, Decl(privacyInterface.ts, 220, 34))
    }

    interface m4_i_private {
>m4_i_private : Symbol(m4_i_private, Decl(privacyInterface.ts, 222, 5))

        f2(): string;
>f2 : Symbol(m4_i_private.f2, Decl(privacyInterface.ts, 224, 28))
    }

    interface m4_C1_private extends m4_i_public {
>m4_C1_private : Symbol(m4_C1_private, Decl(privacyInterface.ts, 226, 5))
>m4_i_public : Symbol(m4_i_public, Decl(privacyInterface.ts, 219, 14))
    }
    interface m4_C2_private extends m4_i_private {
>m4_C2_private : Symbol(m4_C2_private, Decl(privacyInterface.ts, 229, 5))
>m4_i_private : Symbol(m4_i_private, Decl(privacyInterface.ts, 222, 5))
    }
    export interface m4_C3_public extends m4_i_public {
>m4_C3_public : Symbol(m4_C3_public, Decl(privacyInterface.ts, 231, 5))
>m4_i_public : Symbol(m4_i_public, Decl(privacyInterface.ts, 219, 14))
    }
    export interface m4_C4_public extends m4_i_private {
>m4_C4_public : Symbol(m4_C4_public, Decl(privacyInterface.ts, 233, 5))
>m4_i_private : Symbol(m4_i_private, Decl(privacyInterface.ts, 222, 5))
    }

    interface m4_C5_private extends m4_i_private, m4_i_public {
>m4_C5_private : Symbol(m4_C5_private, Decl(privacyInterface.ts, 235, 5))
>m4_i_private : Symbol(m4_i_private, Decl(privacyInterface.ts, 222, 5))
>m4_i_public : Symbol(m4_i_public, Decl(privacyInterface.ts, 219, 14))
    }
    export interface m4_C6_public extends  m4_i_private, m4_i_public {
>m4_C6_public : Symbol(m4_C6_public, Decl(privacyInterface.ts, 238, 5))
>m4_i_private : Symbol(m4_i_private, Decl(privacyInterface.ts, 222, 5))
>m4_i_public : Symbol(m4_i_public, Decl(privacyInterface.ts, 219, 14))
    }
}

export interface glo_i_public {
>glo_i_public : Symbol(glo_i_public, Decl(privacyInterface.ts, 241, 1))

    f1(): number;
>f1 : Symbol(glo_i_public.f1, Decl(privacyInterface.ts, 243, 31))
}

interface glo_i_private {
>glo_i_private : Symbol(glo_i_private, Decl(privacyInterface.ts, 245, 1))

    f2(): string;
>f2 : Symbol(glo_i_private.f2, Decl(privacyInterface.ts, 247, 25))
}

interface glo_C1_private extends glo_i_public {
>glo_C1_private : Symbol(glo_C1_private, Decl(privacyInterface.ts, 249, 1))
>glo_i_public : Symbol(glo_i_public, Decl(privacyInterface.ts, 241, 1))
}
interface glo_C2_private extends glo_i_private {
>glo_C2_private : Symbol(glo_C2_private, Decl(privacyInterface.ts, 252, 1))
>glo_i_private : Symbol(glo_i_private, Decl(privacyInterface.ts, 245, 1))
}
export interface glo_C3_public extends glo_i_public {
>glo_C3_public : Symbol(glo_C3_public, Decl(privacyInterface.ts, 254, 1))
>glo_i_public : Symbol(glo_i_public, Decl(privacyInterface.ts, 241, 1))
}
export interface glo_C4_public extends glo_i_private {
>glo_C4_public : Symbol(glo_C4_public, Decl(privacyInterface.ts, 256, 1))
>glo_i_private : Symbol(glo_i_private, Decl(privacyInterface.ts, 245, 1))
}

interface glo_C5_private extends glo_i_private, glo_i_public {
>glo_C5_private : Symbol(glo_C5_private, Decl(privacyInterface.ts, 258, 1))
>glo_i_private : Symbol(glo_i_private, Decl(privacyInterface.ts, 245, 1))
>glo_i_public : Symbol(glo_i_public, Decl(privacyInterface.ts, 241, 1))
}
export interface glo_C6_public extends  glo_i_private, glo_i_public {
>glo_C6_public : Symbol(glo_C6_public, Decl(privacyInterface.ts, 261, 1))
>glo_i_private : Symbol(glo_i_private, Decl(privacyInterface.ts, 245, 1))
>glo_i_public : Symbol(glo_i_public, Decl(privacyInterface.ts, 241, 1))
}
