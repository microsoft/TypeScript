//// [tests/cases/compiler/privacyTopLevelInternalReferenceImportWithoutExport.ts] ////

=== privacyTopLevelInternalReferenceImportWithoutExport.ts ===
// private elements
namespace m_private {
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))

    export class c_private {
>c_private : Symbol(c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 1, 21))
    }
    export enum e_private {
>e_private : Symbol(e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 3, 5))

        Happy,
>Happy : Symbol(im_private_e_private.Happy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 4, 27))

        Grumpy
>Grumpy : Symbol(im_private_e_private.Grumpy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 5, 14))
    }
    export function f_private() {
>f_private : Symbol(f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 7, 5))

        return new c_private();
>c_private : Symbol(c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 1, 21))
    }
    export var v_private = new c_private();
>v_private : Symbol(v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 11, 14))
>c_private : Symbol(c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 1, 21))

    export interface i_private {
>i_private : Symbol(i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 11, 43))
    }
    export namespace mi_private {
>mi_private : Symbol(mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 13, 5))

        export class c {
>c : Symbol(c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 14, 33))
        }
    }
    export namespace mu_private {
>mu_private : Symbol(mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 17, 5))

        export interface i {
>i : Symbol(i, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 18, 33))
        }
    }
}

// Public elements
export namespace m_public {
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))

    export class c_public {
>c_public : Symbol(c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 25, 27))
    }
    export enum e_public {
>e_public : Symbol(e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 27, 5))

        Happy,
>Happy : Symbol(im_private_e_public.Happy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 28, 26))

        Grumpy
>Grumpy : Symbol(im_private_e_public.Grumpy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 29, 14))
    }
    export function f_public() {
>f_public : Symbol(f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 31, 5))

        return new c_public();
>c_public : Symbol(c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 25, 27))
    }
    export var v_public = 10;
>v_public : Symbol(v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 35, 14))

    export interface i_public {
>i_public : Symbol(i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 35, 29))
    }
    export namespace mi_public {
>mi_public : Symbol(mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 37, 5))

        export class c {
>c : Symbol(c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 38, 32))
        }
    }
    export namespace mu_public {
>mu_public : Symbol(mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 41, 5))

        export interface i {
>i : Symbol(i, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 42, 32))
        }
    }
}

// No Privacy errors - importing private elements
import im_private_c_private = m_private.c_private;
>im_private_c_private : Symbol(im_private_c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 46, 1))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>c_private : Symbol(im_private_c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 1, 21))

import im_private_e_private = m_private.e_private;
>im_private_e_private : Symbol(im_private_e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 49, 50))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>e_private : Symbol(im_private_e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 3, 5))

import im_private_f_private = m_private.f_private;
>im_private_f_private : Symbol(im_private_f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 50, 50))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>f_private : Symbol(im_private_f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 7, 5))

import im_private_v_private = m_private.v_private;
>im_private_v_private : Symbol(im_private_v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 51, 50))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>v_private : Symbol(im_private_v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 11, 14))

import im_private_i_private = m_private.i_private;
>im_private_i_private : Symbol(im_private_i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 52, 50))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>i_private : Symbol(im_private_i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 11, 43))

import im_private_mi_private = m_private.mi_private;
>im_private_mi_private : Symbol(im_private_mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 53, 50))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>mi_private : Symbol(im_private_mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 13, 5))

import im_private_mu_private = m_private.mu_private;
>im_private_mu_private : Symbol(im_private_mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 54, 52))
>m_private : Symbol(m_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 0, 0))
>mu_private : Symbol(im_private_mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 17, 5))

// Usage of above decls
var privateUse_im_private_c_private = new im_private_c_private();
>privateUse_im_private_c_private : Symbol(privateUse_im_private_c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 58, 3))
>im_private_c_private : Symbol(im_private_c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 46, 1))

export var publicUse_im_private_c_private = new im_private_c_private();
>publicUse_im_private_c_private : Symbol(publicUse_im_private_c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 59, 10))
>im_private_c_private : Symbol(im_private_c_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 46, 1))

var privateUse_im_private_e_private = im_private_e_private.Happy;
>privateUse_im_private_e_private : Symbol(privateUse_im_private_e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 60, 3))
>im_private_e_private.Happy : Symbol(im_private_e_private.Happy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 4, 27))
>im_private_e_private : Symbol(im_private_e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 49, 50))
>Happy : Symbol(im_private_e_private.Happy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 4, 27))

export var publicUse_im_private_e_private = im_private_e_private.Grumpy;
>publicUse_im_private_e_private : Symbol(publicUse_im_private_e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 61, 10))
>im_private_e_private.Grumpy : Symbol(im_private_e_private.Grumpy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 5, 14))
>im_private_e_private : Symbol(im_private_e_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 49, 50))
>Grumpy : Symbol(im_private_e_private.Grumpy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 5, 14))

var privateUse_im_private_f_private = im_private_f_private();
>privateUse_im_private_f_private : Symbol(privateUse_im_private_f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 62, 3))
>im_private_f_private : Symbol(im_private_f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 50, 50))

export var publicUse_im_private_f_private = im_private_f_private();
>publicUse_im_private_f_private : Symbol(publicUse_im_private_f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 63, 10))
>im_private_f_private : Symbol(im_private_f_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 50, 50))

var privateUse_im_private_v_private = im_private_v_private;
>privateUse_im_private_v_private : Symbol(privateUse_im_private_v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 64, 3))
>im_private_v_private : Symbol(im_private_v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 51, 50))

export var publicUse_im_private_v_private = im_private_v_private;
>publicUse_im_private_v_private : Symbol(publicUse_im_private_v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 65, 10))
>im_private_v_private : Symbol(im_private_v_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 51, 50))

var privateUse_im_private_i_private: im_private_i_private;
>privateUse_im_private_i_private : Symbol(privateUse_im_private_i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 66, 3))
>im_private_i_private : Symbol(im_private_i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 52, 50))

export var publicUse_im_private_i_private: im_private_i_private;
>publicUse_im_private_i_private : Symbol(publicUse_im_private_i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 67, 10))
>im_private_i_private : Symbol(im_private_i_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 52, 50))

var privateUse_im_private_mi_private = new im_private_mi_private.c();
>privateUse_im_private_mi_private : Symbol(privateUse_im_private_mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 68, 3))
>im_private_mi_private.c : Symbol(im_private_mi_private.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 14, 33))
>im_private_mi_private : Symbol(im_private_mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 53, 50))
>c : Symbol(im_private_mi_private.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 14, 33))

export var publicUse_im_private_mi_private = new im_private_mi_private.c();
>publicUse_im_private_mi_private : Symbol(publicUse_im_private_mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 69, 10))
>im_private_mi_private.c : Symbol(im_private_mi_private.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 14, 33))
>im_private_mi_private : Symbol(im_private_mi_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 53, 50))
>c : Symbol(im_private_mi_private.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 14, 33))

var privateUse_im_private_mu_private: im_private_mu_private.i;
>privateUse_im_private_mu_private : Symbol(privateUse_im_private_mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 70, 3))
>im_private_mu_private : Symbol(im_private_mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 54, 52))
>i : Symbol(im_private_mu_private.i, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 18, 33))

export var publicUse_im_private_mu_private: im_private_mu_private.i;
>publicUse_im_private_mu_private : Symbol(publicUse_im_private_mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 71, 10))
>im_private_mu_private : Symbol(im_private_mu_private, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 54, 52))
>i : Symbol(im_private_mu_private.i, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 18, 33))


// No Privacy errors - importing public elements
import im_private_c_public = m_public.c_public;
>im_private_c_public : Symbol(im_private_c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 71, 68))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>c_public : Symbol(im_private_c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 25, 27))

import im_private_e_public = m_public.e_public;
>im_private_e_public : Symbol(im_private_e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 75, 47))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>e_public : Symbol(im_private_e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 27, 5))

import im_private_f_public = m_public.f_public;
>im_private_f_public : Symbol(im_private_f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 76, 47))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>f_public : Symbol(im_private_f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 31, 5))

import im_private_v_public = m_public.v_public;
>im_private_v_public : Symbol(im_private_v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 77, 47))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>v_public : Symbol(im_private_v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 35, 14))

import im_private_i_public = m_public.i_public;
>im_private_i_public : Symbol(im_private_i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 78, 47))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>i_public : Symbol(im_private_i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 35, 29))

import im_private_mi_public = m_public.mi_public;
>im_private_mi_public : Symbol(im_private_mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 79, 47))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>mi_public : Symbol(im_private_mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 37, 5))

import im_private_mu_public = m_public.mu_public;
>im_private_mu_public : Symbol(im_private_mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 80, 49))
>m_public : Symbol(m_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 22, 1))
>mu_public : Symbol(im_private_mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 41, 5))

// Usage of above decls
var privateUse_im_private_c_public = new im_private_c_public();
>privateUse_im_private_c_public : Symbol(privateUse_im_private_c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 84, 3))
>im_private_c_public : Symbol(im_private_c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 71, 68))

export var publicUse_im_private_c_public = new im_private_c_public();
>publicUse_im_private_c_public : Symbol(publicUse_im_private_c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 85, 10))
>im_private_c_public : Symbol(im_private_c_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 71, 68))

var privateUse_im_private_e_public = im_private_e_public.Happy;
>privateUse_im_private_e_public : Symbol(privateUse_im_private_e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 86, 3))
>im_private_e_public.Happy : Symbol(im_private_e_public.Happy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 28, 26))
>im_private_e_public : Symbol(im_private_e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 75, 47))
>Happy : Symbol(im_private_e_public.Happy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 28, 26))

export var publicUse_im_private_e_public = im_private_e_public.Grumpy;
>publicUse_im_private_e_public : Symbol(publicUse_im_private_e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 87, 10))
>im_private_e_public.Grumpy : Symbol(im_private_e_public.Grumpy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 29, 14))
>im_private_e_public : Symbol(im_private_e_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 75, 47))
>Grumpy : Symbol(im_private_e_public.Grumpy, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 29, 14))

var privateUse_im_private_f_public = im_private_f_public();
>privateUse_im_private_f_public : Symbol(privateUse_im_private_f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 88, 3))
>im_private_f_public : Symbol(im_private_f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 76, 47))

export var publicUse_im_private_f_public = im_private_f_public();
>publicUse_im_private_f_public : Symbol(publicUse_im_private_f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 89, 10))
>im_private_f_public : Symbol(im_private_f_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 76, 47))

var privateUse_im_private_v_public = im_private_v_public;
>privateUse_im_private_v_public : Symbol(privateUse_im_private_v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 90, 3))
>im_private_v_public : Symbol(im_private_v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 77, 47))

export var publicUse_im_private_v_public = im_private_v_public;
>publicUse_im_private_v_public : Symbol(publicUse_im_private_v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 91, 10))
>im_private_v_public : Symbol(im_private_v_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 77, 47))

var privateUse_im_private_i_public: im_private_i_public;
>privateUse_im_private_i_public : Symbol(privateUse_im_private_i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 92, 3))
>im_private_i_public : Symbol(im_private_i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 78, 47))

export var publicUse_im_private_i_public: im_private_i_public;
>publicUse_im_private_i_public : Symbol(publicUse_im_private_i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 93, 10))
>im_private_i_public : Symbol(im_private_i_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 78, 47))

var privateUse_im_private_mi_public = new im_private_mi_public.c();
>privateUse_im_private_mi_public : Symbol(privateUse_im_private_mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 94, 3))
>im_private_mi_public.c : Symbol(im_private_mi_public.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 38, 32))
>im_private_mi_public : Symbol(im_private_mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 79, 47))
>c : Symbol(im_private_mi_public.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 38, 32))

export var publicUse_im_private_mi_public = new im_private_mi_public.c();
>publicUse_im_private_mi_public : Symbol(publicUse_im_private_mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 95, 10))
>im_private_mi_public.c : Symbol(im_private_mi_public.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 38, 32))
>im_private_mi_public : Symbol(im_private_mi_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 79, 47))
>c : Symbol(im_private_mi_public.c, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 38, 32))

var privateUse_im_private_mu_public: im_private_mu_public.i;
>privateUse_im_private_mu_public : Symbol(privateUse_im_private_mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 96, 3))
>im_private_mu_public : Symbol(im_private_mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 80, 49))
>i : Symbol(im_private_mu_public.i, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 42, 32))

export var publicUse_im_private_mu_public: im_private_mu_public.i;
>publicUse_im_private_mu_public : Symbol(publicUse_im_private_mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 97, 10))
>im_private_mu_public : Symbol(im_private_mu_public, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 80, 49))
>i : Symbol(im_private_mu_public.i, Decl(privacyTopLevelInternalReferenceImportWithoutExport.ts, 42, 32))

