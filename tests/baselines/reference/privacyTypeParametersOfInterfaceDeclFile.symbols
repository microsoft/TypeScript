//// [tests/cases/compiler/privacyTypeParametersOfInterfaceDeclFile.ts] ////

=== privacyTypeParametersOfInterfaceDeclFile.ts ===
class privateClass {
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))
}

export class publicClass {
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))
}

class privateClassT<T> {
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 6, 20))
}

export class publicClassT<T> {
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 9, 26))
}

export interface publicInterfaceWithPrivateTypeParameters<T extends privateClass> { // Error
>publicInterfaceWithPrivateTypeParameters : Symbol(publicInterfaceWithPrivateTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 10, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 12, 58))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 12, 83))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 13, 13))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 12, 58))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 12, 58))

    myMethod0(): publicClassT<T>;
>myMethod0 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 13, 24))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 12, 58))

    myMethod1(): privateClassT<privateClass>; 
>myMethod1 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 14, 33))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod2(): privateClassT<publicClass>;
>myMethod2 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 15, 45))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))

    myMethod3(): publicClassT<privateClass>;
>myMethod3 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 16, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod4(): publicClassT<publicClass>; 
>myMethod4 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 17, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))
}

export interface publicInterfaceWithPublicTypeParameters<T extends publicClass> {
>publicInterfaceWithPublicTypeParameters : Symbol(publicInterfaceWithPublicTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 19, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 21, 57))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))

    myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPublicTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 21, 81))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 22, 13))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 21, 57))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 21, 57))

    myMethod0(): publicClassT<T>
>myMethod0 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 22, 24))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 21, 57))

    myMethod1(): privateClassT<privateClass>;
>myMethod1 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 23, 32))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod2(): privateClassT<publicClass>;
>myMethod2 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 24, 45))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))

    myMethod3(): publicClassT<privateClass>;
>myMethod3 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 25, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod4(): publicClassT<publicClass>;
>myMethod4 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 26, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))
}

interface privateInterfaceWithPrivateTypeParameters<T extends privateClass> {
>privateInterfaceWithPrivateTypeParameters : Symbol(privateInterfaceWithPrivateTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 28, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 30, 52))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 30, 77))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 31, 13))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 30, 52))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 30, 52))

    myMethod0(): publicClassT<T>;
>myMethod0 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 31, 24))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 30, 52))

    myMethod1(): privateClassT<privateClass>;
>myMethod1 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 32, 33))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod2(): privateClassT<publicClass>;
>myMethod2 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 33, 45))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))

    myMethod3(): publicClassT<privateClass>;
>myMethod3 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 34, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod4(): publicClassT<publicClass>;
>myMethod4 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 35, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))
}

interface privateInterfaceWithPublicTypeParameters<T extends publicClass> {
>privateInterfaceWithPublicTypeParameters : Symbol(privateInterfaceWithPublicTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 37, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 39, 51))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))

    myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPublicTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 39, 75))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 40, 13))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 39, 51))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 39, 51))

    myMethod0(): publicClassT<T>;
>myMethod0 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 40, 24))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 39, 51))

    myMethod1(): privateClassT<privateClass>;
>myMethod1 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 41, 33))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod2(): privateClassT<publicClass>;
>myMethod2 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 42, 45))
>privateClassT : Symbol(privateClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 4, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))

    myMethod3(): publicClassT<privateClass>;
>myMethod3 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 43, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>privateClass : Symbol(privateClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 0, 0))

    myMethod4(): publicClassT<publicClass>;
>myMethod4 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 44, 44))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>publicClass : Symbol(publicClass, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 1, 1))
}

export interface publicInterfaceWithPublicTypeParametersWithoutExtends<T> {
>publicInterfaceWithPublicTypeParametersWithoutExtends : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 46, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 48, 71))

    myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 48, 75))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 49, 13))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 48, 71))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 48, 71))

    myMethod0(): publicClassT<T>;
>myMethod0 : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 49, 24))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 48, 71))
}

interface privateInterfaceWithPublicTypeParametersWithoutExtends<T> {
>privateInterfaceWithPublicTypeParametersWithoutExtends : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 51, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 53, 65))

    myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 53, 69))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 54, 13))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 53, 65))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 53, 65))

    myMethod0(): publicClassT<T>;
>myMethod0 : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 54, 24))
>publicClassT : Symbol(publicClassT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 7, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 53, 65))
}


export interface publicInterfaceWithPrivateModuleTypeParameterConstraints<T extends privateModule.publicClassInPrivateModule> { // Error
>publicInterfaceWithPrivateModuleTypeParameterConstraints : Symbol(publicInterfaceWithPrivateModuleTypeParameterConstraints, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 56, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 59, 74))
>privateModule : Symbol(privateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 129, 1))
>publicClassInPrivateModule : Symbol(privateModule.publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
}

interface privateInterfaceWithPrivateModuleTypeParameterConstraints<T extends privateModule.publicClassInPrivateModule> { // Error
>privateInterfaceWithPrivateModuleTypeParameterConstraints : Symbol(privateInterfaceWithPrivateModuleTypeParameterConstraints, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 60, 1))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 62, 68))
>privateModule : Symbol(privateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 129, 1))
>publicClassInPrivateModule : Symbol(privateModule.publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
}

export namespace publicModule {
>publicModule : Symbol(publicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 63, 1))

    class privateClassInPublicModule {
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))
    }

    export class publicClassInPublicModule {
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))
    }

    class privateClassInPublicModuleT<T> {
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 72, 38))
    }

    export class publicClassInPublicModuleT<T> {
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 75, 44))
    }

    export interface publicInterfaceWithPrivateTypeParameters<T extends privateClassInPublicModule> { // Error
>publicInterfaceWithPrivateTypeParameters : Symbol(publicInterfaceWithPrivateTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 76, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 78, 62))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 78, 101))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 79, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 78, 62))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 78, 62))

        myMethod0(): publicClassInPublicModuleT<T>;
>myMethod0 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 79, 28))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 78, 62))

        myMethod1(): privateClassInPublicModuleT<privateClassInPublicModule>;
>myMethod1 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 80, 51))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod2(): privateClassInPublicModuleT<publicClassInPublicModule>;
>myMethod2 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 81, 77))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))

        myMethod3(): publicClassInPublicModuleT<privateClassInPublicModule>;
>myMethod3 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 82, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod4(): publicClassInPublicModuleT<publicClassInPublicModule>;
>myMethod4 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 83, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))
    }

    export interface publicInterfaceWithPublicTypeParameters<T extends publicClassInPublicModule> {
>publicInterfaceWithPublicTypeParameters : Symbol(publicInterfaceWithPublicTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 85, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 87, 61))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))

        myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPublicTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 87, 99))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 88, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 87, 61))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 87, 61))

        myMethod0(): publicClassInPublicModuleT<T>
>myMethod0 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 88, 28))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 87, 61))

        myMethod1(): privateClassInPublicModuleT<privateClassInPublicModule>;
>myMethod1 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 89, 50))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod2(): privateClassInPublicModuleT<publicClassInPublicModule>;
>myMethod2 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 90, 77))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))

        myMethod3(): publicClassInPublicModuleT<privateClassInPublicModule>;
>myMethod3 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 91, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod4(): publicClassInPublicModuleT<publicClassInPublicModule>;
>myMethod4 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 92, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))
    }

    interface privateInterfaceWithPrivateTypeParameters<T extends privateClassInPublicModule> {
>privateInterfaceWithPrivateTypeParameters : Symbol(privateInterfaceWithPrivateTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 94, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 96, 56))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 96, 95))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 97, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 96, 56))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 96, 56))

        myMethod0(): publicClassInPublicModuleT<T>;
>myMethod0 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 97, 28))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 96, 56))

        myMethod1(): privateClassInPublicModuleT<privateClassInPublicModule>;
>myMethod1 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 98, 51))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod2(): privateClassInPublicModuleT<publicClassInPublicModule>;
>myMethod2 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 99, 77))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))

        myMethod3(): publicClassInPublicModuleT<privateClassInPublicModule>;
>myMethod3 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 100, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod4(): publicClassInPublicModuleT<publicClassInPublicModule>;
>myMethod4 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 101, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))
    }

    interface privateInterfaceWithPublicTypeParameters<T extends publicClassInPublicModule> {
>privateInterfaceWithPublicTypeParameters : Symbol(privateInterfaceWithPublicTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 103, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 105, 55))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))

        myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPublicTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 105, 93))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 106, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 105, 55))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 105, 55))

        myMethod0(): publicClassInPublicModuleT<T>;
>myMethod0 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 106, 28))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 105, 55))

        myMethod1(): privateClassInPublicModuleT<privateClassInPublicModule>;
>myMethod1 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 107, 51))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod2(): privateClassInPublicModuleT<publicClassInPublicModule>;
>myMethod2 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 108, 77))
>privateClassInPublicModuleT : Symbol(privateClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 70, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))

        myMethod3(): publicClassInPublicModuleT<privateClassInPublicModule>;
>myMethod3 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 109, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>privateClassInPublicModule : Symbol(privateClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 65, 31))

        myMethod4(): publicClassInPublicModuleT<publicClassInPublicModule>;
>myMethod4 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 110, 76))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>publicClassInPublicModule : Symbol(publicClassInPublicModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 67, 5))
    }

    export interface publicInterfaceWithPublicTypeParametersWithoutExtends<T> {
>publicInterfaceWithPublicTypeParametersWithoutExtends : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 112, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 114, 75))

        myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 114, 79))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 115, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 114, 75))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 114, 75))

        myMethod0(): publicClassInPublicModuleT<T>;
>myMethod0 : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 115, 28))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 114, 75))
    }

    interface privateInterfaceWithPublicTypeParametersWithoutExtends<T> {
>privateInterfaceWithPublicTypeParametersWithoutExtends : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 117, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 119, 69))

        myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 119, 73))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 120, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 119, 69))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 119, 69))

        myMethod0(): publicClassInPublicModuleT<T>;
>myMethod0 : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 120, 28))
>publicClassInPublicModuleT : Symbol(publicClassInPublicModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 73, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 119, 69))
    }

    export interface publicInterfaceWithPrivateModuleTypeParameterConstraints<T extends privateModule.publicClassInPrivateModule> { // Error
>publicInterfaceWithPrivateModuleTypeParameterConstraints : Symbol(publicInterfaceWithPrivateModuleTypeParameterConstraints, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 122, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 124, 78))
>privateModule : Symbol(privateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 129, 1))
>publicClassInPrivateModule : Symbol(privateModule.publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }

    interface privateInterfaceWithPrivateModuleTypeParameterConstraints<T extends privateModule.publicClassInPrivateModule> { // Error
>privateInterfaceWithPrivateModuleTypeParameterConstraints : Symbol(privateInterfaceWithPrivateModuleTypeParameterConstraints, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 125, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 127, 72))
>privateModule : Symbol(privateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 129, 1))
>publicClassInPrivateModule : Symbol(privateModule.publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }
}

namespace privateModule {
>privateModule : Symbol(privateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 129, 1))

    class privateClassInPrivateModule {
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))
    }

    export class publicClassInPrivateModule {
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }

    class privateClassInPrivateModuleT<T> {
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 138, 39))
    }

    export class publicClassInPrivateModuleT<T> {
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 141, 45))
    }

    export interface publicInterfaceWithPrivateTypeParameters<T extends privateClassInPrivateModule> {
>publicInterfaceWithPrivateTypeParameters : Symbol(publicInterfaceWithPrivateTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 142, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 144, 62))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 144, 102))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 145, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 144, 62))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 144, 62))

        myMethod0(): publicClassInPrivateModuleT<T>;
>myMethod0 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 145, 28))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 144, 62))

        myMethod1(): privateClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod1 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 146, 52))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod2(): privateClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod2 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 147, 79))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))

        myMethod3(): publicClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod3 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 148, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod4(): publicClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod4 : Symbol(publicInterfaceWithPrivateTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 149, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }

    export interface publicInterfaceWithPublicTypeParameters<T extends publicClassInPrivateModule> {
>publicInterfaceWithPublicTypeParameters : Symbol(publicInterfaceWithPublicTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 151, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 153, 61))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))

        myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPublicTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 153, 100))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 154, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 153, 61))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 153, 61))

        myMethod0(): publicClassInPrivateModuleT<T>
>myMethod0 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 154, 28))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 153, 61))

        myMethod1(): privateClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod1 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 155, 51))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod2(): privateClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod2 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 156, 79))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))

        myMethod3(): publicClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod3 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 157, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod4(): publicClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod4 : Symbol(publicInterfaceWithPublicTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 158, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }

    interface privateInterfaceWithPrivateTypeParameters<T extends privateClassInPrivateModule> {
>privateInterfaceWithPrivateTypeParameters : Symbol(privateInterfaceWithPrivateTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 160, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 162, 56))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 162, 96))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 163, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 162, 56))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 162, 56))

        myMethod0(): publicClassInPrivateModuleT<T>;
>myMethod0 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 163, 28))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 162, 56))

        myMethod1(): privateClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod1 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 164, 52))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod2(): privateClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod2 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 165, 79))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))

        myMethod3(): publicClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod3 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 166, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod4(): publicClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod4 : Symbol(privateInterfaceWithPrivateTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 167, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }

    interface privateInterfaceWithPublicTypeParameters<T extends publicClassInPrivateModule> {
>privateInterfaceWithPublicTypeParameters : Symbol(privateInterfaceWithPublicTypeParameters, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 169, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 171, 55))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))

        myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPublicTypeParameters.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 171, 94))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 172, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 171, 55))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 171, 55))

        myMethod0(): publicClassInPrivateModuleT<T>;
>myMethod0 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 172, 28))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 171, 55))

        myMethod1(): privateClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod1 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod1, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 173, 52))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod2(): privateClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod2 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod2, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 174, 79))
>privateClassInPrivateModuleT : Symbol(privateClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 136, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))

        myMethod3(): publicClassInPrivateModuleT<privateClassInPrivateModule>;
>myMethod3 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod3, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 175, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>privateClassInPrivateModule : Symbol(privateClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 131, 25))

        myMethod4(): publicClassInPrivateModuleT<publicClassInPrivateModule>;
>myMethod4 : Symbol(privateInterfaceWithPublicTypeParameters.myMethod4, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 176, 78))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>publicClassInPrivateModule : Symbol(publicClassInPrivateModule, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 133, 5))
    }

    export interface publicInterfaceWithPublicTypeParametersWithoutExtends<T> {
>publicInterfaceWithPublicTypeParametersWithoutExtends : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 178, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 180, 75))

        myMethod(val: T): T;
>myMethod : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 180, 79))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 181, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 180, 75))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 180, 75))

        myMethod0(): publicClassInPrivateModuleT<T>;
>myMethod0 : Symbol(publicInterfaceWithPublicTypeParametersWithoutExtends.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 181, 28))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 180, 75))
    }

    interface privateInterfaceWithPublicTypeParametersWithoutExtends<T> {
>privateInterfaceWithPublicTypeParametersWithoutExtends : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 183, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 185, 69))

        myMethod(val: T): T;
>myMethod : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends.myMethod, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 185, 73))
>val : Symbol(val, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 186, 17))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 185, 69))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 185, 69))

        myMethod0(): publicClassInPrivateModuleT<T>;
>myMethod0 : Symbol(privateInterfaceWithPublicTypeParametersWithoutExtends.myMethod0, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 186, 28))
>publicClassInPrivateModuleT : Symbol(publicClassInPrivateModuleT, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 139, 5))
>T : Symbol(T, Decl(privacyTypeParametersOfInterfaceDeclFile.ts, 185, 69))
    }
}
