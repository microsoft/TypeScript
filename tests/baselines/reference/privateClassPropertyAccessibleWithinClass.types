//// [tests/cases/conformance/classes/members/accessibility/privateClassPropertyAccessibleWithinClass.ts] ////

=== privateClassPropertyAccessibleWithinClass.ts ===
// no errors

class C {
>C : C
>  : ^

    private x: string;
>x : string
>  : ^^^^^^

    private get y() { return this.x; }
>y : string
>  : ^^^^^^
>this.x : string
>       : ^^^^^^
>this : this
>     : ^^^^
>x : string
>  : ^^^^^^

    private set y(x) { this.y = this.x; }
>y : string
>  : ^^^^^^
>x : string
>  : ^^^^^^
>this.y = this.x : string
>                : ^^^^^^
>this.y : string
>       : ^^^^^^
>this : this
>     : ^^^^
>y : string
>  : ^^^^^^
>this.x : string
>       : ^^^^^^
>this : this
>     : ^^^^
>x : string
>  : ^^^^^^

    private foo() { return this.foo; }
>foo : () => any
>    : ^^^^^^^^^
>this.foo : () => any
>         : ^^^^^^^^^
>this : this
>     : ^^^^
>foo : () => any
>    : ^^^^^^^^^

    private static x: string;
>x : string
>  : ^^^^^^

    private static get y() { return this.x; }
>y : string
>  : ^^^^^^
>this.x : string
>       : ^^^^^^
>this : typeof C
>     : ^^^^^^^^
>x : string
>  : ^^^^^^

    private static set y(x) { this.y = this.x; }
>y : string
>  : ^^^^^^
>x : string
>  : ^^^^^^
>this.y = this.x : string
>                : ^^^^^^
>this.y : string
>       : ^^^^^^
>this : typeof C
>     : ^^^^^^^^
>y : string
>  : ^^^^^^
>this.x : string
>       : ^^^^^^
>this : typeof C
>     : ^^^^^^^^
>x : string
>  : ^^^^^^

    private static foo() { return this.foo; }
>foo : () => typeof C.foo
>    : ^^^^^^^^^^^^^^^^^^
>this.foo : () => typeof C.foo
>         : ^^^^^^^^^^^^^^^^^^
>this : typeof C
>     : ^^^^^^^^
>foo : () => typeof C.foo
>    : ^^^^^^^^^^^^^^^^^^

    private static bar() { this.foo(); }
>bar : () => void
>    : ^^^^^^^^^^
>this.foo() : () => typeof C.foo
>           : ^^^^^^^^^^^^^^^^^^
>this.foo : () => typeof C.foo
>         : ^^^^^^^^^^^^^^^^^^
>this : typeof C
>     : ^^^^^^^^
>foo : () => typeof C.foo
>    : ^^^^^^^^^^^^^^^^^^
}

// added level of function nesting
class C2 {
>C2 : C2
>   : ^^

    private x: string;
>x : string
>  : ^^^^^^

    private get y() { () => this.x; return null; }
>y : any
>() => this.x : () => string
>             : ^^^^^^^^^^^^
>this.x : string
>       : ^^^^^^
>this : this
>     : ^^^^
>x : string
>  : ^^^^^^

    private set y(x) { () => { this.y = this.x; } }
>y : any
>x : any
>() => { this.y = this.x; } : () => void
>                           : ^^^^^^^^^^
>this.y = this.x : string
>                : ^^^^^^
>this.y : any
>this : this
>     : ^^^^
>y : any
>  : ^^^
>this.x : string
>       : ^^^^^^
>this : this
>     : ^^^^
>x : string
>  : ^^^^^^

    private foo() { () => this.foo; }
>foo : () => void
>    : ^^^^^^^^^^
>() => this.foo : () => () => void
>               : ^^^^^^^^^^^^^^^^
>this.foo : () => void
>         : ^^^^^^^^^^
>this : this
>     : ^^^^
>foo : () => void
>    : ^^^^^^^^^^

    private static x: string;
>x : string
>  : ^^^^^^

    private static get y() { () => this.x; return null; }
>y : any
>() => this.x : () => string
>             : ^^^^^^^^^^^^
>this.x : string
>       : ^^^^^^
>this : typeof C2
>     : ^^^^^^^^^
>x : string
>  : ^^^^^^

    private static set y(x) {
>y : any
>x : any

        () => { this.y = this.x; }
>() => { this.y = this.x; } : () => void
>                           : ^^^^^^^^^^
>this.y = this.x : string
>                : ^^^^^^
>this.y : any
>this : typeof C2
>     : ^^^^^^^^^
>y : any
>  : ^^^
>this.x : string
>       : ^^^^^^
>this : typeof C2
>     : ^^^^^^^^^
>x : string
>  : ^^^^^^
     }
    private static foo() { () => this.foo; }
>foo : () => void
>    : ^^^^^^^^^^
>() => this.foo : () => () => void
>               : ^^^^^^^^^^^^^^^^
>this.foo : () => void
>         : ^^^^^^^^^^
>this : typeof C2
>     : ^^^^^^^^^
>foo : () => void
>    : ^^^^^^^^^^

    private static bar() { () => this.foo(); }
>bar : () => void
>    : ^^^^^^^^^^
>() => this.foo() : () => void
>                 : ^^^^^^^^^^
>this.foo() : void
>           : ^^^^
>this.foo : () => void
>         : ^^^^^^^^^^
>this : typeof C2
>     : ^^^^^^^^^
>foo : () => void
>    : ^^^^^^^^^^
}

