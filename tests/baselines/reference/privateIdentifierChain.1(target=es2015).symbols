//// [tests/cases/conformance/expressions/optionalChaining/privateIdentifierChain/privateIdentifierChain.1.ts] ////

=== privateIdentifierChain.1.ts ===
class A {
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

    a?: A
>a : Symbol(A.a, Decl(privateIdentifierChain.1.ts, 0, 9))
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

    #b?: A;
>#b : Symbol(A.#b, Decl(privateIdentifierChain.1.ts, 1, 9))
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

    getA(): A {
>getA : Symbol(A.getA, Decl(privateIdentifierChain.1.ts, 2, 11))
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

        return new A();
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))
    }
    constructor() {
        this.a = this;
>this.a : Symbol(A.a, Decl(privateIdentifierChain.1.ts, 0, 9))
>this : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))
>a : Symbol(A.a, Decl(privateIdentifierChain.1.ts, 0, 9))
>this : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

        // None of these should error
        this?.#b;
>this?.#b : Symbol(A.#b, Decl(privateIdentifierChain.1.ts, 1, 9))
>this : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

        this?.a.#b;
>this?.a.#b : Symbol(A.#b, Decl(privateIdentifierChain.1.ts, 1, 9))
>this?.a : Symbol(A.a, Decl(privateIdentifierChain.1.ts, 0, 9))
>this : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))
>a : Symbol(A.a, Decl(privateIdentifierChain.1.ts, 0, 9))

        this?.getA().#b;
>this?.getA().#b : Symbol(A.#b, Decl(privateIdentifierChain.1.ts, 1, 9))
>this?.getA : Symbol(A.getA, Decl(privateIdentifierChain.1.ts, 2, 11))
>this : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))
>getA : Symbol(A.getA, Decl(privateIdentifierChain.1.ts, 2, 11))
    }
}

class B {
>B : Symbol(B, Decl(privateIdentifierChain.1.ts, 13, 1))

    a?: A
>a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

    getA(): A {
>getA : Symbol(B.getA, Decl(privateIdentifierChain.1.ts, 16, 9))
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

        return new A();
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))
    }
    constructor() {
        this.a = new A();
>this.a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))
>this : Symbol(B, Decl(privateIdentifierChain.1.ts, 13, 1))
>a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))
>A : Symbol(A, Decl(privateIdentifierChain.1.ts, 0, 0))

        this.a?.#b; // Error
>this.a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))
>this : Symbol(B, Decl(privateIdentifierChain.1.ts, 13, 1))
>a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))

        this?.a.#b; // Error
>this?.a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))
>this : Symbol(B, Decl(privateIdentifierChain.1.ts, 13, 1))
>a : Symbol(B.a, Decl(privateIdentifierChain.1.ts, 15, 9))

        this?.getA().#b; // Error
>this?.getA : Symbol(B.getA, Decl(privateIdentifierChain.1.ts, 16, 9))
>this : Symbol(B, Decl(privateIdentifierChain.1.ts, 13, 1))
>getA : Symbol(B.getA, Decl(privateIdentifierChain.1.ts, 16, 9))
    }
}

