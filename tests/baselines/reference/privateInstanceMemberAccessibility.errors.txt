privateInstanceMemberAccessibility.ts(5,7): error TS2415: Class 'Derived' incorrectly extends base class 'Base'.
  Property 'foo' is private in type 'Base' but not in type 'Derived'.
privateInstanceMemberAccessibility.ts(6,15): error TS2855: Class field 'foo' defined by the parent class is not accessible in the child class via super.
privateInstanceMemberAccessibility.ts(8,22): error TS2855: Class field 'foo' defined by the parent class is not accessible in the child class via super.
privateInstanceMemberAccessibility.ts(10,15): error TS2304: Cannot find name 'super'.
privateInstanceMemberAccessibility.ts(12,12): error TS1442: Expected '=' for property initializer.


==== privateInstanceMemberAccessibility.ts (5 errors) ====
    class Base {
        private foo: string;
    }
    
    class Derived extends Base {
          ~~~~~~~
!!! error TS2415: Class 'Derived' incorrectly extends base class 'Base'.
!!! error TS2415:   Property 'foo' is private in type 'Base' but not in type 'Derived'.
        x = super.foo; // error
                  ~~~
!!! error TS2855: Class field 'foo' defined by the parent class is not accessible in the child class via super.
        y() {
            return super.foo; // error
                         ~~~
!!! error TS2855: Class field 'foo' defined by the parent class is not accessible in the child class via super.
        }
        z: typeof super.foo; // error
                  ~~~~~
!!! error TS2304: Cannot find name 'super'.
    
        a: this.foo; // error
               ~
!!! error TS1442: Expected '=' for property initializer.
    }