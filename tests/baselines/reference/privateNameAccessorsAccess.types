//// [tests/cases/conformance/classes/members/privateNames/privateNameAccessorsAccess.ts] ////

=== privateNameAccessorsAccess.ts ===
class A2 {
>A2 : A2
>   : ^^

    get #prop() { return ""; }
>#prop : string
>      : ^^^^^^
>"" : ""
>   : ^^

    set #prop(param: string) { }
>#prop : string
>      : ^^^^^^
>param : string
>      : ^^^^^^

    constructor() {
        console.log(this.#prop);
>console.log(this.#prop) : void
>                        : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>this.#prop : string
>           : ^^^^^^
>this : this
>     : ^^^^

        let a: A2 = this;
>a : A2
>  : ^^
>this : this
>     : ^^^^

        a.#prop;
>a.#prop : string
>        : ^^^^^^
>a : A2
>  : ^^

        function  foo (){
>foo : () => void
>    : ^^^^^^^^^^

            a.#prop;
>a.#prop : string
>        : ^^^^^^
>a : A2
>  : ^^
        }
    }
}
new A2().#prop; // Error
>new A2().#prop : any
>               : ^^^
>new A2() : A2
>         : ^^
>A2 : typeof A2
>   : ^^^^^^^^^

function  foo (){
>foo : () => void
>    : ^^^^^^^^^^

    new A2().#prop; // Error
>new A2().#prop : any
>               : ^^^
>new A2() : A2
>         : ^^
>A2 : typeof A2
>   : ^^^^^^^^^
}

class B2 {
>B2 : B2
>   : ^^

    m() {
>m : () => void
>  : ^^^^^^^^^^

        new A2().#prop;
>new A2().#prop : any
>               : ^^^
>new A2() : A2
>         : ^^
>A2 : typeof A2
>   : ^^^^^^^^^
    }
}

