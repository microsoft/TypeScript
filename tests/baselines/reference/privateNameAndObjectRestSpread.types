//// [tests/cases/conformance/classes/members/privateNames/privateNameAndObjectRestSpread.ts] ////

=== privateNameAndObjectRestSpread.ts ===
class C {
>C : C
>  : ^

    #prop = 1;
>#prop : number
>      : ^^^^^^
>1 : 1
>  : ^

    static #propStatic = 1;
>#propStatic : number
>            : ^^^^^^
>1 : 1
>  : ^

    method(other: C) {
>method : (other: C) => void
>       : ^     ^^ ^^^^^^^^^
>other : C
>      : ^

        const obj = { ...other };
>obj : {}
>    : ^^
>{ ...other } : {}
>             : ^^
>other : C
>      : ^

        obj.#prop;
>obj.#prop : any
>          : ^^^
>obj : {}
>    : ^^

        const { ...rest } = other;
>rest : {}
>     : ^^
>other : C
>      : ^

        rest.#prop;
>rest.#prop : any
>           : ^^^
>rest : {}
>     : ^^

        const statics = { ... C};
>statics : { prototype: C; }
>        : ^^^^^^^^^^^^^^^^^
>{ ... C} : { prototype: C; }
>         : ^^^^^^^^^^^^^^^^^
>C : typeof C
>  : ^^^^^^^^

        statics.#propStatic
>statics.#propStatic : any
>                    : ^^^
>statics : { prototype: C; }
>        : ^^^^^^^^^^^^^^^^^

        const { ...sRest } = C;
>sRest : { prototype: C; }
>      : ^^^^^^^^^^^^^^^^^
>C : typeof C
>  : ^^^^^^^^

        sRest.#propStatic;
>sRest.#propStatic : any
>                  : ^^^
>sRest : { prototype: C; }
>      : ^^^^^^^^^^^^^^^^^
    }
}
