//// [tests/cases/conformance/classes/members/privateNames/privateNamesInNestedClasses-1.ts] ////

=== privateNamesInNestedClasses-1.ts ===
class A {
>A : A
>  : ^

   #foo = "A's #foo";
>#foo : string
>     : ^^^^^^
>"A's #foo" : "A's #foo"
>           : ^^^^^^^^^^

   #bar = "A's #bar";
>#bar : string
>     : ^^^^^^
>"A's #bar" : "A's #bar"
>           : ^^^^^^^^^^

   method () {
>method : () => void
>       : ^^^^^^^^^^

       class B {
>B : B
>  : ^

           #foo = "B's #foo";
>#foo : string
>     : ^^^^^^
>"B's #foo" : "B's #foo"
>           : ^^^^^^^^^^

           bar (a: any) {
>bar : (a: any) => void
>    : ^ ^^   ^^^^^^^^^
>a : any
>  : ^^^

               a.#foo; // OK, no compile-time error, don't know what `a` is
>a.#foo : any
>       : ^^^
>a : any
>  : ^^^
           }
           baz (a: A) {
>baz : (a: A) => void
>    : ^ ^^ ^^^^^^^^^
>a : A
>  : ^

               a.#foo; // compile-time error, shadowed
>a.#foo : any
>       : ^^^
>a : A
>  : ^
           }
           quux (b: B) {
>quux : (b: B) => void
>     : ^ ^^^^^^^^^^^^
>b : B
>  : ^

               b.#foo; // OK
>b.#foo : string
>       : ^^^^^^
>b : B
>  : ^
           }
       }
       const a = new A();
>a : A
>  : ^
>new A() : A
>        : ^
>A : typeof A
>  : ^^^^^^^^

       new B().bar(a);
>new B().bar(a) : void
>               : ^^^^
>new B().bar : (a: any) => void
>            : ^ ^^   ^^^^^^^^^
>new B() : B
>        : ^
>B : typeof B
>  : ^^^^^^^^
>bar : (a: any) => void
>    : ^ ^^   ^^^^^^^^^
>a : A
>  : ^

       new B().baz(a);
>new B().baz(a) : void
>               : ^^^^
>new B().baz : (a: A) => void
>            : ^ ^^ ^^^^^^^^^
>new B() : B
>        : ^
>B : typeof B
>  : ^^^^^^^^
>baz : (a: A) => void
>    : ^ ^^ ^^^^^^^^^
>a : A
>  : ^

       const b = new B();
>b : B
>  : ^
>new B() : B
>        : ^
>B : typeof B
>  : ^^^^^^^^

       new B().quux(b);
>new B().quux(b) : void
>                : ^^^^
>new B().quux : (b: B) => void
>             : ^ ^^^^^^^^^^^^
>new B() : B
>        : ^
>B : typeof B
>  : ^^^^^^^^
>quux : (b: B) => void
>     : ^ ^^^^^^^^^^^^
>b : B
>  : ^
   }
}

new A().method();
>new A().method() : void
>                 : ^^^^
>new A().method : () => void
>               : ^^^^^^^^^^
>new A() : A
>        : ^
>A : typeof A
>  : ^^^^^^^^
>method : () => void
>       : ^^^^^^^^^^

