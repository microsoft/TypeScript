//// [tests/cases/conformance/classes/members/privateNames/privateNamesUnique-2.ts] ////

=== a.ts ===
export class Foo {
>Foo : Foo
>    : ^^^

    #x;
>#x : any
>   : ^^^

    copy(other: import("./b").Foo) {
>copy : (other: import("./b").Foo) => void
>     : ^     ^^                 ^^^^^^^^^
>other : import("b").Foo
>      : ^^^^^^^^^^^^^^^^^^^^^

        other.#x; // error
>other.#x : any
>         : ^^^
>other : import("b").Foo
>      : ^^^^^^^^^^^^^^^^^^^^^
    }
}
    
=== b.ts ===
export class Foo {
>Foo : Foo
>    : ^^^

    #x;
>#x : any
>   : ^^^
}

=== main.ts ===
import { Foo as A } from "./a";
>Foo : typeof A
>    : ^^^^^^^^
>A : typeof A
>  : ^^^^^^^^

import { Foo as B } from "./b";
>Foo : typeof B
>    : ^^^^^^^^
>B : typeof B
>  : ^^^^^^^^

const a = new A();
>a : A
>  : ^
>new A() : A
>        : ^
>A : typeof A
>  : ^^^^^^^^

const b = new B();
>b : B
>  : ^
>new B() : B
>        : ^
>B : typeof B
>  : ^^^^^^^^

a.copy(b); // error
>a.copy(b) : void
>          : ^^^^
>a.copy : (other: import("b").Foo) => void
>       : ^     ^^                     ^^^^^^^^^
>a : A
>  : ^
>copy : (other: import("b").Foo) => void
>     : ^     ^^                     ^^^^^^^^^
>b : B
>  : ^

