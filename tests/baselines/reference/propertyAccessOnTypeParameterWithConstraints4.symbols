//// [tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints4.ts] ////

=== propertyAccessOnTypeParameterWithConstraints4.ts ===
class C<T extends Date> {
>C : Symbol(C, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 0))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 8))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    f() {
>f : Symbol(C.f, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 25))

        var x: T;
>x : Symbol(x, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 2, 11))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 8))

        var a = x['notHere'](); // should be string
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 3, 11))
>x : Symbol(x, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 2, 11))

        return a + x.notHere();
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 3, 11))
>x : Symbol(x, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 2, 11))
    }
}

var r = (new C<Date>()).f();
>r : Symbol(r, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 8, 3))
>(new C<Date>()).f : Symbol(C.f, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 25))
>C : Symbol(C, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 0))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>f : Symbol(C.f, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 0, 25))

interface I<T extends Date> {
>I : Symbol(I, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 8, 28))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 12))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    foo: T;
>foo : Symbol(I.foo, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 29))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 12))
}
var i: I<Date>;
>i : Symbol(i, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 13, 3))
>I : Symbol(I, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 8, 28))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

var r2 = i.foo.notHere();
>r2 : Symbol(r2, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 14, 3))
>i.foo : Symbol(I.foo, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 29))
>i : Symbol(i, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 13, 3))
>foo : Symbol(I.foo, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 29))

var r2b = i.foo['notHere']();
>r2b : Symbol(r2b, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 15, 3))
>i.foo : Symbol(I.foo, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 29))
>i : Symbol(i, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 13, 3))
>foo : Symbol(I.foo, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 10, 29))

var a: {
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 17, 3))

    <T extends Date>(): T;
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 18, 5))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 18, 5))
}
var r3: string = a().notHere();
>r3 : Symbol(r3, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 20, 3))
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 17, 3))

var r3b: string = a()['notHere']();
>r3b : Symbol(r3b, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 21, 3))
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 17, 3))

var b = {
>b : Symbol(b, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 23, 3))

    foo: <T extends Date>(x: T): T => {
>foo : Symbol(foo, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 23, 9))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 24, 10))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>x : Symbol(x, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 24, 26))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 24, 10))
>T : Symbol(T, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 24, 10))

        var a = x['notHere'](); // should be string
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 25, 11))
>x : Symbol(x, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 24, 26))

        return a + x.notHere();
>a : Symbol(a, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 25, 11))
>x : Symbol(x, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 24, 26))

    },
    bar: b.foo().notHere()
>bar : Symbol(bar, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 27, 6))
>b : Symbol(b, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 23, 3))
}

var r4 = b.foo(new Date());
>r4 : Symbol(r4, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 31, 3))
>b : Symbol(b, Decl(propertyAccessOnTypeParameterWithConstraints4.ts, 23, 3))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

