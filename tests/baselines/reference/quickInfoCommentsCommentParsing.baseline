// === QuickInfo ===
=== /tests/cases/fourslash/quickInfoCommentsCommentParsing.ts ===
// /// This is simple /// comments
// function simple() {
// }
// 
// simple( );
// ^^^^^^
// | ----------------------------------------------------------------------
// | function simple(): void
// | ----------------------------------------------------------------------
// 
// /// multiLine /// Comments
// /// This is example of multiline /// comments
// /// Another multiLine
// function multiLine() {
// }
// multiLine( );
// ^^^^^^^^^
// | ----------------------------------------------------------------------
// | function multiLine(): void
// | ----------------------------------------------------------------------
// 
// /** this is eg of single line jsdoc style comment */
// function jsDocSingleLine() {
// }
// jsDocSingleLine();
// ^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocSingleLine(): void
// | this is eg of single line jsdoc style comment
// | ----------------------------------------------------------------------
// 
// 
// /** this is multiple line jsdoc stule comment
// *New line1
// *New Line2*/
// function jsDocMultiLine() {
// }
// jsDocMultiLine();
// ^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMultiLine(): void
// | this is multiple line jsdoc stule comment
// | New line1
// | New Line2
// | ----------------------------------------------------------------------
// 
// /** multiple line jsdoc comments no longer merge
// *New line1
// *New Line2*/
// /** Shoul mege this line as well
// * and this too*/ /** Another this one too*/
// function jsDocMultiLineMerge() {
// }
// jsDocMultiLineMerge();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMultiLineMerge(): void
// | Another this one too
// | ----------------------------------------------------------------------
// 
// 
// /// Triple slash comment
// /** jsdoc comment */
// function jsDocMixedComments1() {
// }
// jsDocMixedComments1();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMixedComments1(): void
// | jsdoc comment
// | ----------------------------------------------------------------------
// 
// /// Triple slash comment
// /** jsdoc comment */ /** another jsDocComment*/
// function jsDocMixedComments2() {
// }
// jsDocMixedComments2();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMixedComments2(): void
// | another jsDocComment
// | ----------------------------------------------------------------------
// 
// /** jsdoc comment */ /*** triplestar jsDocComment*/
// /// Triple slash comment
// function jsDocMixedComments3() {
// }
// jsDocMixedComments3();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMixedComments3(): void
// | * triplestar jsDocComment
// | ----------------------------------------------------------------------
// 
// /** jsdoc comment */ /** another jsDocComment*/
// /// Triple slash comment
// /// Triple slash comment 2
// function jsDocMixedComments4() {
// }
// jsDocMixedComments4();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMixedComments4(): void
// | another jsDocComment
// | ----------------------------------------------------------------------
// 
// /// Triple slash comment 1
// /** jsdoc comment */ /** another jsDocComment*/
// /// Triple slash comment
// /// Triple slash comment 2
// function jsDocMixedComments5() {
// }
// jsDocMixedComments5();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMixedComments5(): void
// | another jsDocComment
// | ----------------------------------------------------------------------
// 
// /** another jsDocComment*/
// /// Triple slash comment 1
// /// Triple slash comment
// /// Triple slash comment 2
// /** jsdoc comment */
// function jsDocMixedComments6() {
// }
// jsDocMixedComments6();
// ^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocMixedComments6(): void
// | jsdoc comment
// | ----------------------------------------------------------------------
// 
// // This shoulnot be help comment
// function noHelpComment1() {
// }
// noHelpComment1();
// ^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function noHelpComment1(): void
// | ----------------------------------------------------------------------
// 
// /* This shoulnot be help comment */
// function noHelpComment2() {
// }
// noHelpComment2();
// ^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function noHelpComment2(): void
// | ----------------------------------------------------------------------
// 
// function noHelpComment3() {
// }
// noHelpComment3();
// ^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function noHelpComment3(): void
// | ----------------------------------------------------------------------
// /** Adds two integers and returns the result
//   * @param {number} a first number
//   * @param b second number
//   */
// function sum(a: number, b: number) {
//              ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | first number
// | @param a first number
// | ----------------------------------------------------------------------
//                         ^
// | ----------------------------------------------------------------------
// | (parameter) b: number
// | second number
// | @param b second number
// | ----------------------------------------------------------------------
//     return a + b;
// }
// sum(10, 20);
// ^^^
// | ----------------------------------------------------------------------
// | function sum(a: number, b: number): number
// | Adds two integers and returns the result
// | @param a first number
// | @param b second number
// | ----------------------------------------------------------------------
// /** This is multiplication function
//  * @param 
//  * @param a first number
//  * @param b
//  * @param c {
//  @param d @anotherTag
//  * @param e LastParam @anotherTag*/
// function multiply(a: number, b: number, c?: number, d?, e?) {
//                   ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | first number
// | @param a first number
// | ----------------------------------------------------------------------
//                              ^
// | ----------------------------------------------------------------------
// | (parameter) b: number
// | @param b
// | ----------------------------------------------------------------------
//                                         ^
// | ----------------------------------------------------------------------
// | (parameter) c: number
// | @param c
// | ----------------------------------------------------------------------
//                                                     ^
// | ----------------------------------------------------------------------
// | (parameter) d: any
// | @param d
// | ----------------------------------------------------------------------
//                                                         ^
// | ----------------------------------------------------------------------
// | (parameter) e: any
// | LastParam
// | @param e LastParam
// | ----------------------------------------------------------------------
// }
// multiply(10, 20, 30, 40, 50);
// ^^^^^^^^
// | ----------------------------------------------------------------------
// | function multiply(a: number, b: number, c?: number, d?: any, e?: any): void
// | This is multiplication function
// | @param 
// | @param a first number
// | @param b
// | @param c
// | @param d
// | @anotherTag 
// | @param e LastParam
// | @anotherTag 
// | ----------------------------------------------------------------------
// /** fn f1 with number
// * @param { string} b about b
// */
// function f1(a: number);
//             ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | ----------------------------------------------------------------------
// function f1(b: string);
//             ^
// | ----------------------------------------------------------------------
// | (parameter) b: string
// | ----------------------------------------------------------------------
// /**@param opt optional parameter*/
// function f1(aOrb, opt?) {
//     return aOrb;
// }
// f1(10);
// ^^
// | ----------------------------------------------------------------------
// | function f1(a: number): any (+1 overload)
// | fn f1 with number
// | @param b about b
// | ----------------------------------------------------------------------
// f1("hello");
// ^^
// | ----------------------------------------------------------------------
// | function f1(b: string): any (+1 overload)
// | fn f1 with number
// | @param b about b
// | ----------------------------------------------------------------------
// 
// /** This is subtract function
// @param { a
// *@param { number | } b this is about b
// @param { { () => string; } } c this is optional param c
// @param { { () => string; } d this is optional param d
// @param { { () => string; } } e this is optional param e
// @param { { { () => string; } } f this is optional param f
// */
// function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string) {
//                   ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | ----------------------------------------------------------------------
//                              ^
// | ----------------------------------------------------------------------
// | (parameter) b: number
// | this is about b
// | @param b this is about b
// | ----------------------------------------------------------------------
//                                         ^
// | ----------------------------------------------------------------------
// | (parameter) c: () => string
// | this is optional param c
// | @param c this is optional param c
// | ----------------------------------------------------------------------
//                                                           ^
// | ----------------------------------------------------------------------
// | (parameter) d: () => string
// | this is optional param d
// | @param d this is optional param d
// | ----------------------------------------------------------------------
//                                                                             ^
// | ----------------------------------------------------------------------
// | (parameter) e: () => string
// | this is optional param e
// | @param e this is optional param e
// | ----------------------------------------------------------------------
//                                                                                               ^
// | ----------------------------------------------------------------------
// | (parameter) f: () => string
// | ----------------------------------------------------------------------
// }
// subtract(10,  20,  null,  null,  null, null);
// ^^^^^^^^
// | ----------------------------------------------------------------------
// | function subtract(a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string): void
// | This is subtract function
// | @param 
// | @param b this is about b
// | @param c this is optional param c
// | @param d this is optional param d
// | @param e this is optional param e
// | @param  { () => string; } } f this is optional param f
// | ----------------------------------------------------------------------
// /** this is square function
// @paramTag { number } a this is input number of paramTag
// @param { number } a this is input number
// @returnType { number } it is return type
// */
// function square(a: number) {
//                 ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | this is input number
// | @param a this is input number
// | ----------------------------------------------------------------------
//     return a * a;
// }
// square(10);
// ^^^^^^
// | ----------------------------------------------------------------------
// | function square(a: number): number
// | this is square function
// | @paramTag { number } a this is input number of paramTag
// | @param a this is input number
// | @returnType { number } it is return type
// | ----------------------------------------------------------------------
// /** this is divide function
// @param { number} a this is a
// @paramTag { number } g this is optional param g
// @param { number} b this is b
// */
// function divide(a: number, b: number) {
//                 ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | this is a
// | @param a this is a
// | ----------------------------------------------------------------------
//                            ^
// | ----------------------------------------------------------------------
// | (parameter) b: number
// | this is b
// | @param b this is b
// | ----------------------------------------------------------------------
// }
// divide(10, 20);
// ^^^^^^
// | ----------------------------------------------------------------------
// | function divide(a: number, b: number): void
// | this is divide function
// | @param a this is a
// | @paramTag { number } g this is optional param g
// | @param b this is b
// | ----------------------------------------------------------------------
// /**
// Function returns string concat of foo and bar
// @param			{string}		foo		is string
// @param		    {string}		bar		is second string
// */
// function fooBar(foo: string, bar: string) {
//                 ^^^
// | ----------------------------------------------------------------------
// | (parameter) foo: string
// | is string
// | @param foo is string
// | ----------------------------------------------------------------------
//                              ^^^
// | ----------------------------------------------------------------------
// | (parameter) bar: string
// | is second string
// | @param bar is second string
// | ----------------------------------------------------------------------
//     return foo + bar;
// }
// fooBar("foo","bar");
// ^^^^^^
// | ----------------------------------------------------------------------
// | function fooBar(foo: string, bar: string): string
// | Function returns string concat of foo and bar
// | @param foo is string
// | @param bar is second string
// | ----------------------------------------------------------------------
// /** This is a comment */
// var x;
// /**
//   * This is a comment
//   */
// var y;
// /** this is jsdoc style function with param tag as well as inline parameter help
// *@param a it is first parameter
// *@param c it is third parameter
// */
// function jsDocParamTest(/** this is inline comment for a */a: number, /** this is inline comment for b*/ b: number, c: number, d: number) {
//                                                            ^
// | ----------------------------------------------------------------------
// | (parameter) a: number
// | this is inline comment for a
// | it is first parameter
// | @param a it is first parameter
// | ----------------------------------------------------------------------
//                                                                                                          ^
// | ----------------------------------------------------------------------
// | (parameter) b: number
// | this is inline comment for b
// | ----------------------------------------------------------------------
//                                                                                                                     ^
// | ----------------------------------------------------------------------
// | (parameter) c: number
// | it is third parameter
// | @param c it is third parameter
// | ----------------------------------------------------------------------
//                                                                                                                                ^
// | ----------------------------------------------------------------------
// | (parameter) d: number
// | ----------------------------------------------------------------------
//     return a + b + c + d;
// }
// jsDocParamTest(30, 40, 50, 60);
// ^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocParamTest(a: number, b: number, c: number, d: number): number
// | this is jsdoc style function with param tag as well as inline parameter help
// | @param a it is first parameter
// | @param c it is third parameter
// | ----------------------------------------------------------------------
// /** This is function comment
//   * And properly aligned comment
//   */
// function jsDocCommentAlignmentTest1() {
// }
// jsDocCommentAlignmentTest1();
// ^^^^^^^^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocCommentAlignmentTest1(): void
// | This is function comment
// | And properly aligned comment
// | ----------------------------------------------------------------------
// /** This is function comment
//   *     And aligned with 4 space char margin
//   */
// function jsDocCommentAlignmentTest2() {
// }
// jsDocCommentAlignmentTest2();
// ^^^^^^^^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocCommentAlignmentTest2(): void
// | This is function comment
// |     And aligned with 4 space char margin
// | ----------------------------------------------------------------------
// /** This is function comment
//   *     And aligned with 4 space char margin
//   * @param {string} a this is info about a
//   *                   spanning on two lines and aligned perfectly
//   * @param b          this is info about b
//   *                   spanning on two lines and aligned perfectly
//   *                   spanning one more line alined perfectly
//   *                       spanning another line with more margin
//   * @param c          this is info about b
//   *  not aligned text about parameter will eat only one space
//   */
// function jsDocCommentAlignmentTest3(a: string, b, c) {
//                                     ^
// | ----------------------------------------------------------------------
// | (parameter) a: string
// | this is info about a
// |                   spanning on two lines and aligned perfectly
// | @param a this is info about a
// |                   spanning on two lines and aligned perfectly
// | ----------------------------------------------------------------------
//                                                ^
// | ----------------------------------------------------------------------
// | (parameter) b: any
// | this is info about b
// |                   spanning on two lines and aligned perfectly
// |                   spanning one more line alined perfectly
// |                       spanning another line with more margin
// | @param b this is info about b
// |                   spanning on two lines and aligned perfectly
// |                   spanning one more line alined perfectly
// |                       spanning another line with more margin
// | ----------------------------------------------------------------------
//                                                   ^
// | ----------------------------------------------------------------------
// | (parameter) c: any
// | this is info about b
// |  not aligned text about parameter will eat only one space
// | @param c this is info about b
// |  not aligned text about parameter will eat only one space
// | ----------------------------------------------------------------------
// }
// jsDocCommentAlignmentTest3("hello",1, 2);
// ^^^^^^^^^^^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | function jsDocCommentAlignmentTest3(a: string, b: any, c: any): void
// | This is function comment
// |     And aligned with 4 space char margin
// | @param a this is info about a
// |                   spanning on two lines and aligned perfectly
// | @param b this is info about b
// |                   spanning on two lines and aligned perfectly
// |                   spanning one more line alined perfectly
// |                       spanning another line with more margin
// | @param c this is info about b
// |  not aligned text about parameter will eat only one space
// | ----------------------------------------------------------------------
// 
// ^
// | ----------------------------------------------------------------------
// | No quickinfo at /**/.
// | ----------------------------------------------------------------------
// class NoQuickInfoClass {
//       ^^^^^^^^^^^^^^^^
// | ----------------------------------------------------------------------
// | class NoQuickInfoClass
// | ----------------------------------------------------------------------
// }

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 58,
      "name": "1q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 55,
        "length": 6
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "simple",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 190,
      "name": "2q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 187,
        "length": 9
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "multiLine",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 291,
      "name": "3q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 286,
        "length": 15
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocSingleLine",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is eg of single line jsdoc style comment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 413,
      "name": "4q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 407,
        "length": 14
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMultiLine",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 618,
      "name": "5q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 611,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMultiLineMerge",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "Another this one too",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 725,
      "name": "6q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 717,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMixedComments1",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "jsdoc comment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 856,
      "name": "7q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 849,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMixedComments2",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "another jsDocComment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 994,
      "name": "8q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 985,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMixedComments3",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "* triplestar jsDocComment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1154,
      "name": "9q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1144,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMixedComments4",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "another jsDocComment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1336,
      "name": "10q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1330,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMixedComments5",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "another jsDocComment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1524,
      "name": "11q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1516,
        "length": 19
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocMixedComments6",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "jsdoc comment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1608,
      "name": "12q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1603,
        "length": 14
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "noHelpComment1",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1695,
      "name": "13q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1688,
        "length": 14
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "noHelpComment2",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1744,
      "name": "14q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1737,
        "length": 14
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "noHelpComment3",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1880,
      "name": "16aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 1880,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "first number",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "first number",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1891,
      "name": "17aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 1891,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "second number",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "second number",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 1925,
      "name": "16q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 1924,
        "length": 3
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "sum",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "Adds two integers and returns the result",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "first number",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "second number",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2111,
      "name": "19aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2111,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "first number",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "first number",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2122,
      "name": "20aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2122,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2133,
      "name": "21aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2133,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2145,
      "name": "22aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2145,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "d",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        }
      ],
      "documentation": [],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "d",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2149,
      "name": "23aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2149,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "e",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "LastParam",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "LastParam",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2161,
      "name": "19q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 2157,
        "length": 8
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "multiply",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "d",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "e",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "This is multiplication function",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "first number",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "d",
              "kind": "text"
            }
          ]
        },
        {
          "name": "anotherTag"
        },
        {
          "name": "param",
          "text": [
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "LastParam",
              "kind": "text"
            }
          ]
        },
        {
          "name": "anotherTag"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2253,
      "name": "25aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2253,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2277,
      "name": "26aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2277,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2370,
      "name": "25q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 2369,
        "length": 2
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "f1",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "+",
          "kind": "operator"
        },
        {
          "text": "1",
          "kind": "numericLiteral"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "overload",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        }
      ],
      "documentation": [
        {
          "text": "fn f1 with number",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "about b",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2378,
      "name": "26q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 2377,
        "length": 2
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "f1",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "+",
          "kind": "operator"
        },
        {
          "text": "1",
          "kind": "numericLiteral"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "overload",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        }
      ],
      "documentation": [
        {
          "text": "fn f1 with number",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "about b",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2716,
      "name": "28aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2716,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2727,
      "name": "29aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2727,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is about b",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is about b",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2738,
      "name": "30aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2738,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is optional param c",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is optional param c",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2756,
      "name": "31aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2756,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "d",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is optional param d",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is optional param d",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2774,
      "name": "32aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2774,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "e",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is optional param e",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is optional param e",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2792,
      "name": "33aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 2792,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "f",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 2818,
      "name": "28q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 2814,
        "length": 8
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "subtract",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "d",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "e",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "f",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "This is subtract function",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is about b",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is optional param c",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is optional param d",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is optional param e",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "{ () => string; } } f this is optional param f",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3045,
      "name": "34aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3045,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is input number",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is input number",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3081,
      "name": "34q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 3078,
        "length": 6
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "square",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is square function",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "paramTag",
          "text": [
            {
              "text": "{ number } a this is input number of paramTag",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is input number",
              "kind": "text"
            }
          ]
        },
        {
          "name": "returnType",
          "text": [
            {
              "text": "{ number } it is return type",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3243,
      "name": "35aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3243,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is a",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is a",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3254,
      "name": "36aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3254,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is b",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is b",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3272,
      "name": "35q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 3269,
        "length": 6
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "divide",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is divide function",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is a",
              "kind": "text"
            }
          ]
        },
        {
          "name": "paramTag",
          "text": [
            {
              "text": "{ number } g this is optional param g",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is b",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3432,
      "name": "37aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3432,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "is string",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "is string",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3445,
      "name": "38aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3445,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "bar",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "is second string",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "is second string",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3486,
      "name": "37q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 3484,
        "length": 6
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "fooBar",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "foo",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "bar",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "Function returns string concat of foo and bar",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "is string",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "is second string",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3782,
      "name": "40aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3782,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is inline comment for a",
          "kind": "text"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "it is first parameter",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "it is first parameter",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3828,
      "name": "41aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3828,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is inline comment for b",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3839,
      "name": "42aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3839,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "it is third parameter",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "it is third parameter",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3850,
      "name": "43aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 3850,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "d",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": []
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 3894,
      "name": "40q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 3891,
        "length": 14
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocParamTest",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "d",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is jsdoc style function with param tag as well as inline parameter help",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "it is first parameter",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "it is third parameter",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4040,
      "name": "45q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 4032,
        "length": 26
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocCommentAlignmentTest1",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "This is function comment\nAnd properly aligned comment",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4193,
      "name": "46q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 4183,
        "length": 26
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocCommentAlignmentTest2",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "This is function comment\n    And aligned with 4 space char margin",
          "kind": "text"
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4778,
      "name": "47aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 4778,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is info about a\n                  spanning on two lines and aligned perfectly",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is info about a\n                  spanning on two lines and aligned perfectly",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4789,
      "name": "48aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 4789,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is info about b\n                  spanning on two lines and aligned perfectly\n                  spanning one more line alined perfectly\n                      spanning another line with more margin",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is info about b\n                  spanning on two lines and aligned perfectly\n                  spanning one more line alined perfectly\n                      spanning another line with more margin",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4792,
      "name": "49aq"
    },
    "item": {
      "kind": "parameter",
      "kindModifiers": "",
      "textSpan": {
        "start": 4792,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "parameter",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "this is info about b\n not aligned text about parameter will eat only one space",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is info about b\n not aligned text about parameter will eat only one space",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4809,
      "name": "47q"
    },
    "item": {
      "kind": "function",
      "kindModifiers": "",
      "textSpan": {
        "start": 4799,
        "length": 26
      },
      "displayParts": [
        {
          "text": "function",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "jsDocCommentAlignmentTest3",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "c",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "any",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "documentation": [
        {
          "text": "This is function comment\n    And aligned with 4 space char margin",
          "kind": "text"
        }
      ],
      "tags": [
        {
          "name": "param",
          "text": [
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is info about a\n                  spanning on two lines and aligned perfectly",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is info about b\n                  spanning on two lines and aligned perfectly\n                  spanning one more line alined perfectly\n                      spanning another line with more margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "param",
          "text": [
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "this is info about b\n not aligned text about parameter will eat only one space",
              "kind": "text"
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4841,
      "name": ""
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/quickInfoCommentsCommentParsing.ts",
      "position": 4854,
      "name": "50q"
    },
    "item": {
      "kind": "class",
      "kindModifiers": "",
      "textSpan": {
        "start": 4848,
        "length": 16
      },
      "displayParts": [
        {
          "text": "class",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "NoQuickInfoClass",
          "kind": "className"
        }
      ],
      "documentation": []
    }
  }
]