//// [tests/cases/compiler/reboundBaseClassSymbol.ts] ////

=== reboundBaseClassSymbol.ts ===
interface A { a: number; }
>A : Symbol(A, Decl(reboundBaseClassSymbol.ts, 0, 0))
>a : Symbol(A.a, Decl(reboundBaseClassSymbol.ts, 0, 13))

namespace Foo {
>Foo : Symbol(Foo, Decl(reboundBaseClassSymbol.ts, 0, 26))

    var A = 1;
>A : Symbol(A, Decl(reboundBaseClassSymbol.ts, 2, 7))

    interface B extends A { b: string; } 
>B : Symbol(B, Decl(reboundBaseClassSymbol.ts, 2, 14))
>A : Symbol(A, Decl(reboundBaseClassSymbol.ts, 0, 0))
>b : Symbol(B.b, Decl(reboundBaseClassSymbol.ts, 3, 27))
}
