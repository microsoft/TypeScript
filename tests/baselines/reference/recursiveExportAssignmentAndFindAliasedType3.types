//// [tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType3.ts] ////

=== recursiveExportAssignmentAndFindAliasedType3_moduleA.ts ===
/// <reference path="recursiveExportAssignmentAndFindAliasedType3_moduleDef.d.ts"/>
import moduleC = require("moduleC");
>moduleC : any
>        : ^^^

import ClassB = require("recursiveExportAssignmentAndFindAliasedType3_moduleB");
>ClassB : typeof ClassB
>       : ^^^^^^^^^^^^^

export var b: ClassB; // This should result in type ClassB
>b : ClassB
>  : ^^^^^^

=== recursiveExportAssignmentAndFindAliasedType3_moduleDef.d.ts ===
declare module "moduleC" {
>"moduleC" : typeof import("moduleC")
>          : ^^^^^^^^^^^^^^^^^^^^^^^^

    import self = require("moduleD");
>self : any
>     : ^^^

    export = self;
>self : any
>     : ^^^
}
declare module "moduleD" {
>"moduleD" : typeof import("moduleD")
>          : ^^^^^^^^^^^^^^^^^^^^^^^^

    import self = require("moduleE");
>self : any
>     : ^^^

    export = self;
>self : any
>     : ^^^
}
declare module "moduleE" {
>"moduleE" : typeof import("moduleE")
>          : ^^^^^^^^^^^^^^^^^^^^^^^^

    import self = require("moduleC");
>self : any
>     : ^^^

    export = self;
>self : any
>     : ^^^
}

=== recursiveExportAssignmentAndFindAliasedType3_moduleB.ts ===
class ClassB { }
>ClassB : ClassB
>       : ^^^^^^

export = ClassB;
>ClassB : ClassB
>       : ^^^^^^

