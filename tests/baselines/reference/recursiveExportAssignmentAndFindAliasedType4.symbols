//// [tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType4.ts] ////

=== recursiveExportAssignmentAndFindAliasedType4_moduleA.ts ===
import moduleC = require("recursiveExportAssignmentAndFindAliasedType4_moduleC");
>moduleC : Symbol(moduleC, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleA.ts, 0, 0))

import ClassB = require("recursiveExportAssignmentAndFindAliasedType4_moduleB");
>ClassB : Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleA.ts, 0, 81))

export var b: ClassB; // This should result in type ClassB
>b : Symbol(b, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleA.ts, 2, 10))
>ClassB : Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleA.ts, 0, 81))

=== recursiveExportAssignmentAndFindAliasedType4_moduleC.ts ===
import self = require("recursiveExportAssignmentAndFindAliasedType4_moduleC");
>self : Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleC.ts, 0, 0))

export = self;
>self : Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleC.ts, 0, 0))

=== recursiveExportAssignmentAndFindAliasedType4_moduleB.ts ===
class ClassB { }
>ClassB : Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleB.ts, 0, 0))

export = ClassB;
>ClassB : Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType4_moduleB.ts, 0, 0))

