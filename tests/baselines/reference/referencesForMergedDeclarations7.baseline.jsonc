// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
// interface Foo { }
// namespace Foo {
//     <|export interface /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Bar|] { }|>
//     export module Bar { export interface Baz { } }
//     export function Bar() { }
// }
// 
// // module, value and type
// import a2 = Foo.[|Bar|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
  // interface Foo { }
  // namespace Foo {
  //     export interface /*FIND ALL REFS*/Bar { }
  //     export module Bar { export interface Baz { } }
  //     <|export function [|Bar|]() { }|>
  // }
  // 
  // // module, value and type
  // import a2 = Foo.Bar;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "interface Foo.Bar\nnamespace Foo.Bar",
    "displayParts": [
     {
      "text": "interface",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
// interface Foo { }
// namespace Foo {
//     export interface Bar { }
//     <|export module /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Bar|] { export interface Baz { } }|>
//     export function Bar() { }
// }
// 
// // module, value and type
// import a2 = Foo.[|Bar|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
  // interface Foo { }
  // namespace Foo {
  //     export interface Bar { }
  //     export module /*FIND ALL REFS*/Bar { export interface Baz { } }
  //     <|export function [|Bar|]() { }|>
  // }
  // 
  // // module, value and type
  // import a2 = Foo.Bar;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo.Bar",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
// interface Foo { }
// namespace Foo {
//     export interface Bar { }
//     export module Bar { export interface Baz { } }
//     <|export function /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Bar|]() { }|>
// }
// 
// // module, value and type
// import a2 = Foo.[|Bar|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
  // interface Foo { }
  // namespace Foo {
  //     export interface Bar { }
  //     export module Bar { export interface Baz { } }
  //     <|export function /*FIND ALL REFS*/[|Bar|]() { }|>
  // }
  // 
  // // module, value and type
  // import a2 = Foo.Bar;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo.Bar\nfunction Foo.Bar(): void",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
// interface Foo { }
// namespace Foo {
//     <|export interface [|{| isWriteAccess: true |}Bar|] { }|>
//     <|export module [|{| isWriteAccess: true |}Bar|] { export interface Baz { } }|>
//     <|export function [|{| isWriteAccess: true |}Bar|]() { }|>
// }
// 
// // module, value and type
// import a2 = Foo./*FIND ALL REFS*/[|Bar|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations7.ts ===
  // interface Foo { }
  // namespace Foo {
  //     export interface Bar { }
  //     export module Bar { export interface Baz { } }
  //     <|export function [|Bar|]() { }|>
  // }
  // 
  // // module, value and type
  // import a2 = Foo./*FIND ALL REFS*/Bar;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "interface Foo.Bar\nnamespace Foo.Bar\nfunction Foo.Bar(): void",
    "displayParts": [
     {
      "text": "interface",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Bar",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]