// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// namespace FindRef4 {
// 	namespace MixedStaticsClassTest {
// 		export class Foo {
// 			/*FIND ALL REFS*/<|[|{| isDefinition: true |}bar|]: Foo;|>
// 			static bar: Foo;
// 
// 			public foo(): void {
// --- (line: 8) skipped ---

// --- (line: 14) skipped ---
// 		// instance function
// 		var x = new MixedStaticsClassTest.Foo();
// 		x.foo();
// 		x.[|bar|];
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.foo();
// --- (line: 22) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // namespace FindRef4 {
  // 	namespace MixedStaticsClassTest {
  // 		export class Foo {
  // 			/*FIND ALL REFS*/<|[|bar|]: Foo;|>
  // 			static bar: Foo;
  // 
  // 			public foo(): void {
  // --- (line: 8) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MixedStaticsClassTest.Foo.bar: Foo",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "bar",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// namespace FindRef4 {
// 	namespace MixedStaticsClassTest {
// 		export class Foo {
// 			bar: Foo;
// 			/*FIND ALL REFS*/<|static [|{| isDefinition: true |}bar|]: Foo;|>
// 
// 			public foo(): void {
// 			}
// --- (line: 9) skipped ---

// --- (line: 18) skipped ---
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.foo();
// 		MixedStaticsClassTest.Foo.[|bar|];
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // namespace FindRef4 {
  // 	namespace MixedStaticsClassTest {
  // 		export class Foo {
  // 			bar: Foo;
  // 			/*FIND ALL REFS*/<|static [|bar|]: Foo;|>
  // 
  // 			public foo(): void {
  // 			}
  // --- (line: 9) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MixedStaticsClassTest.Foo.bar: Foo",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "bar",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// namespace FindRef4 {
// 	namespace MixedStaticsClassTest {
// 		export class Foo {
// 			bar: Foo;
// 			<|static /*FIND ALL REFS*/[|{| isDefinition: true |}bar|]: Foo;|>
// 
// 			public foo(): void {
// 			}
// --- (line: 9) skipped ---

// --- (line: 18) skipped ---
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.foo();
// 		MixedStaticsClassTest.Foo.[|bar|];
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // namespace FindRef4 {
  // 	namespace MixedStaticsClassTest {
  // 		export class Foo {
  // 			bar: Foo;
  // 			<|static /*FIND ALL REFS*/[|bar|]: Foo;|>
  // 
  // 			public foo(): void {
  // 			}
  // --- (line: 9) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MixedStaticsClassTest.Foo.bar: Foo",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "bar",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// --- (line: 3) skipped ---
// 			bar: Foo;
// 			static bar: Foo;
// 
// 			/*FIND ALL REFS*/<|public [|{| isWriteAccess: true, isDefinition: true |}foo|](): void {
// 			}|>
// 			public static foo(): void {
// 			}
// 		}
// 	}
// 
// 	function test() {
// 		// instance function
// 		var x = new MixedStaticsClassTest.Foo();
// 		x.[|foo|]();
// 		x.bar;
// 
// 		// static function
// --- (line: 21) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // --- (line: 3) skipped ---
  // 			bar: Foo;
  // 			static bar: Foo;
  // 
  // 			/*FIND ALL REFS*/<|public [|foo|](): void {
  // 			}|>
  // 			public static foo(): void {
  // 			}
  // 		}
  // --- (line: 12) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MixedStaticsClassTest.Foo.foo(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "foo",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// --- (line: 3) skipped ---
// 			bar: Foo;
// 			static bar: Foo;
// 
// 			<|public /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}foo|](): void {
// 			}|>
// 			public static foo(): void {
// 			}
// 		}
// 	}
// 
// 	function test() {
// 		// instance function
// 		var x = new MixedStaticsClassTest.Foo();
// 		x.[|foo|]();
// 		x.bar;
// 
// 		// static function
// --- (line: 21) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // --- (line: 3) skipped ---
  // 			bar: Foo;
  // 			static bar: Foo;
  // 
  // 			<|public /*FIND ALL REFS*/[|foo|](): void {
  // 			}|>
  // 			public static foo(): void {
  // 			}
  // 		}
  // --- (line: 12) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MixedStaticsClassTest.Foo.foo(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "foo",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// --- (line: 5) skipped ---
// 
// 			public foo(): void {
// 			}
// 			/*FIND ALL REFS*/<|public static [|{| isWriteAccess: true, isDefinition: true |}foo|](): void {
// 			}|>
// 		}
// 	}
// 
// --- (line: 14) skipped ---

// --- (line: 17) skipped ---
// 		x.bar;
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.[|foo|]();
// 		MixedStaticsClassTest.Foo.bar;
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // --- (line: 5) skipped ---
  // 
  // 			public foo(): void {
  // 			}
  // 			/*FIND ALL REFS*/<|public static [|foo|](): void {
  // 			}|>
  // 		}
  // 	}
  // 
  // --- (line: 14) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MixedStaticsClassTest.Foo.foo(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "foo",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// --- (line: 5) skipped ---
// 
// 			public foo(): void {
// 			}
// 			<|public static /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}foo|](): void {
// 			}|>
// 		}
// 	}
// 
// --- (line: 14) skipped ---

// --- (line: 17) skipped ---
// 		x.bar;
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.[|foo|]();
// 		MixedStaticsClassTest.Foo.bar;
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // --- (line: 5) skipped ---
  // 
  // 			public foo(): void {
  // 			}
  // 			<|public static /*FIND ALL REFS*/[|foo|](): void {
  // 			}|>
  // 		}
  // 	}
  // 
  // --- (line: 14) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MixedStaticsClassTest.Foo.foo(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "foo",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// --- (line: 3) skipped ---
// 			bar: Foo;
// 			static bar: Foo;
// 
// 			<|public [|{| isWriteAccess: true |}foo|](): void {
// 			}|>
// 			public static foo(): void {
// 			}
// 		}
// 	}
// 
// 	function test() {
// 		// instance function
// 		var x = new MixedStaticsClassTest.Foo();
// 		x./*FIND ALL REFS*/[|foo|]();
// 		x.bar;
// 
// 		// static function
// --- (line: 21) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // --- (line: 3) skipped ---
  // 			bar: Foo;
  // 			static bar: Foo;
  // 
  // 			<|public [|foo|](): void {
  // 			}|>
  // 			public static foo(): void {
  // 			}
  // 		}
  // 	}
  // 
  // 	function test() {
  // 		// instance function
  // 		var x = new MixedStaticsClassTest.Foo();
  // 		x./*FIND ALL REFS*/foo();
  // 		x.bar;
  // 
  // 		// static function
  // --- (line: 21) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MixedStaticsClassTest.Foo.foo(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "foo",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// namespace FindRef4 {
// 	namespace MixedStaticsClassTest {
// 		export class Foo {
// 			<|[|bar|]: Foo;|>
// 			static bar: Foo;
// 
// 			public foo(): void {
// --- (line: 8) skipped ---

// --- (line: 14) skipped ---
// 		// instance function
// 		var x = new MixedStaticsClassTest.Foo();
// 		x.foo();
// 		x./*FIND ALL REFS*/[|bar|];
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.foo();
// --- (line: 22) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // namespace FindRef4 {
  // 	namespace MixedStaticsClassTest {
  // 		export class Foo {
  // 			<|[|bar|]: Foo;|>
  // 			static bar: Foo;
  // 
  // 			public foo(): void {
  // --- (line: 8) skipped ---

  // --- (line: 14) skipped ---
  // 		// instance function
  // 		var x = new MixedStaticsClassTest.Foo();
  // 		x.foo();
  // 		x./*FIND ALL REFS*/bar;
  // 
  // 		// static function
  // 		MixedStaticsClassTest.Foo.foo();
  // --- (line: 22) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MixedStaticsClassTest.Foo.bar: Foo",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "bar",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// --- (line: 5) skipped ---
// 
// 			public foo(): void {
// 			}
// 			<|public static [|{| isWriteAccess: true |}foo|](): void {
// 			}|>
// 		}
// 	}
// 
// --- (line: 14) skipped ---

// --- (line: 17) skipped ---
// 		x.bar;
// 
// 		// static function
// 		MixedStaticsClassTest.Foo./*FIND ALL REFS*/[|foo|]();
// 		MixedStaticsClassTest.Foo.bar;
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // --- (line: 5) skipped ---
  // 
  // 			public foo(): void {
  // 			}
  // 			<|public static [|foo|](): void {
  // 			}|>
  // 		}
  // 	}
  // 
  // --- (line: 14) skipped ---

  // --- (line: 17) skipped ---
  // 		x.bar;
  // 
  // 		// static function
  // 		MixedStaticsClassTest.Foo./*FIND ALL REFS*/foo();
  // 		MixedStaticsClassTest.Foo.bar;
  // 	}
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MixedStaticsClassTest.Foo.foo(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "foo",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
// namespace FindRef4 {
// 	namespace MixedStaticsClassTest {
// 		export class Foo {
// 			bar: Foo;
// 			<|static [|bar|]: Foo;|>
// 
// 			public foo(): void {
// 			}
// --- (line: 9) skipped ---

// --- (line: 18) skipped ---
// 
// 		// static function
// 		MixedStaticsClassTest.Foo.foo();
// 		MixedStaticsClassTest.Foo./*FIND ALL REFS*/[|bar|];
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForStaticsAndMembersWithSameNames.ts ===
  // namespace FindRef4 {
  // 	namespace MixedStaticsClassTest {
  // 		export class Foo {
  // 			bar: Foo;
  // 			<|static [|bar|]: Foo;|>
  // 
  // 			public foo(): void {
  // 			}
  // --- (line: 9) skipped ---

  // --- (line: 18) skipped ---
  // 
  // 		// static function
  // 		MixedStaticsClassTest.Foo.foo();
  // 		MixedStaticsClassTest.Foo./*FIND ALL REFS*/bar;
  // 	}
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MixedStaticsClassTest.Foo.bar: Foo",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MixedStaticsClassTest",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "bar",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "className"
     }
    ]
   }
  ]