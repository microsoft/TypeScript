// === findAllReferences ===
// === /tests/cases/fourslash/referencesForUnionProperties.ts ===
// interface One {
//     common: { /*FIND ALL REFS*/<|[|{| defId: 0, isDefinition: true |}a|]: number;|> };
// }
// 
// interface Base {
// --- (line: 6) skipped ---

// --- (line: 17) skipped ---
// 
// var x : One | Two;
// 
// x.common.[|{| defId: 1 |}a|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
  // interface One {
  //     common: { /*FIND ALL REFS*/<|[|{| defId: 0 |}a|]: number;|> };
  // }
  // 
  // interface Base {
  //     a: string;
  //     b: string;
  // }
  // 
  // interface HasAOrB extends Base {
  //     <|[|{| defId: 1 |}a|]: string;|>
  //     b: string;
  // }
  // 
  // --- (line: 15) skipped ---

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) a: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) a: string | number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "|",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForUnionProperties.ts ===
// interface One {
//     common: { a: number; };
// }
// 
// interface Base {
//     /*FIND ALL REFS*/<|[|{| defId: 0, isDefinition: true |}a|]: string;|>
//     b: string;
// }
// 
// interface HasAOrB extends Base {
//     <|[|{| defId: 1 |}a|]: string;|>
//     b: string;
// }
// 
// interface Two {
//     common: HasAOrB;
// }
// 
// var x : One | Two;
// 
// x.common.[|{| defId: 2 |}a|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
  // interface One {
  //     common: { a: number; };
  // }
  // 
  // interface Base {
  //     /*FIND ALL REFS*/<|[|{| defId: 0 |}a|]: string;|>
  //     b: string;
  // }
  // 
  // interface HasAOrB extends Base {
  //     <|[|{| defId: 1 |}<|[|{| defId: 2 |}a|]|]: string;|>|>
  //     b: string;
  // }
  // 
  // --- (line: 15) skipped ---

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) Base.a: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) HasAOrB.a: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "HasAOrB",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) a: string | number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "|",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForUnionProperties.ts ===
// interface One {
//     common: { <|[|{| defId: 0 |}a|]: number;|> };
// }
// 
// interface Base {
//     <|[|{| defId: 1 |}a|]: string;|>
//     b: string;
// }
// 
// interface HasAOrB extends Base {
//     <|[|{| defId: 2 |}a|]: string;|>
//     b: string;
// }
// 
// interface Two {
//     common: HasAOrB;
// }
// 
// var x : One | Two;
// 
// x.common./*FIND ALL REFS*/[|{| defId: 3 |}a|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
  // interface One {
  //     common: { <|[|{| defId: 0 |}a|]: number;|> };
  // }
  // 
  // interface Base {
  //     <|[|{| defId: 1 |}a|]: string;|>
  //     b: string;
  // }
  // 
  // interface HasAOrB extends Base {
  //     <|[|{| defId: 2 |}<|[|{| defId: 3 |}a|]|]: string;|>|>
  //     b: string;
  // }
  // 
  // interface Two {
  //     common: HasAOrB;
  // }
  // 
  // var x : One | Two;
  // 
  // x.common./*FIND ALL REFS*/a;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) a: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) Base.a: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) HasAOrB.a: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "HasAOrB",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 3,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) a: string | number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "|",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]