//// [tests/cases/compiler/regExpWithSlashInCharClass.ts] ////

=== regExpWithSlashInCharClass.ts ===
var foo1 = "a/".replace(/.[/]/, "");
>foo1 : string
>     : ^^^^^^
>"a/".replace(/.[/]/, "") : string
>                         : ^^^^^^
>"a/".replace : { (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>             : ^^^           ^^               ^^            ^^      ^^^      ^^^           ^^               ^^        ^^                                             ^^^      ^^^
>"a/" : "a/"
>     : ^^^^
>replace : { (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>        : ^^^           ^^               ^^            ^^      ^^^      ^^^           ^^               ^^        ^^                                             ^^^      ^^^
>/.[/]/ : RegExp
>       : ^^^^^^
>"" : ""
>   : ^^

var foo2 = "a//".replace(/.[//]/g, "");
>foo2 : string
>     : ^^^^^^
>"a//".replace(/.[//]/g, "") : string
>                            : ^^^^^^
>"a//".replace : { (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>              : ^^^           ^^               ^^            ^^      ^^^      ^^^           ^^               ^^        ^^                                             ^^^      ^^^
>"a//" : "a//"
>      : ^^^^^
>replace : { (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>        : ^^^           ^^               ^^            ^^      ^^^      ^^^           ^^               ^^        ^^                                             ^^^      ^^^
>/.[//]/g : RegExp
>         : ^^^^^^
>"" : ""
>   : ^^

var foo3 = "a/".replace(/.[/no sleep /till/]/, "bugfix");
>foo3 : string
>     : ^^^^^^
>"a/".replace(/.[/no sleep /till/]/, "bugfix") : string
>                                              : ^^^^^^
>"a/".replace : { (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>             : ^^^           ^^               ^^            ^^      ^^^      ^^^           ^^               ^^        ^^                                             ^^^      ^^^
>"a/" : "a/"
>     : ^^^^
>replace : { (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>        : ^^^           ^^               ^^            ^^      ^^^      ^^^           ^^               ^^        ^^                                             ^^^      ^^^
>/.[/no sleep /till/]/ : RegExp
>                      : ^^^^^^
>"bugfix" : "bugfix"
>         : ^^^^^^^^

