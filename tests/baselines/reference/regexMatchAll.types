//// [tests/cases/compiler/regexMatchAll.ts] ////

=== regexMatchAll.ts ===
const matches = /\w/g[Symbol.matchAll]("matchAll");
>matches : RegExpStringIterator<RegExpExecArray>
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>/\w/g[Symbol.matchAll]("matchAll") : RegExpStringIterator<RegExpExecArray>
>                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>/\w/g[Symbol.matchAll] : (str: string) => RegExpStringIterator<RegExpExecArray>
>                       : ^   ^^      ^^^^^                                     
>/\w/g : RegExp
>      : ^^^^^^
>Symbol.matchAll : unique symbol
>                : ^^^^^^^^^^^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^
>matchAll : unique symbol
>         : ^^^^^^^^^^^^^
>"matchAll" : "matchAll"
>           : ^^^^^^^^^^

const array = [...matches];
>array : RegExpExecArray[]
>      : ^^^^^^^^^^^^^^^^^
>[...matches] : RegExpExecArray[]
>             : ^^^^^^^^^^^^^^^^^
>...matches : RegExpExecArray
>           : ^^^^^^^^^^^^^^^
>matches : RegExpStringIterator<RegExpExecArray>
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

const { index, input } = array[0];
>index : number
>      : ^^^^^^
>input : string
>      : ^^^^^^
>array[0] : RegExpExecArray
>         : ^^^^^^^^^^^^^^^
>array : RegExpExecArray[]
>      : ^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

