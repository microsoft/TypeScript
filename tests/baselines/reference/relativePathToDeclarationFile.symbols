//// [tests/cases/conformance/externalModules/relativePathToDeclarationFile.ts] ////

=== test/file1.ts ===
import foo = require('foo');
>foo : Symbol(foo, Decl(file1.ts, 0, 0))

import other = require('./other');
>other : Symbol(other, Decl(file1.ts, 0, 28))

import relMod = require('./sub/relMod');
>relMod : Symbol(relMod, Decl(file1.ts, 1, 34))

if(foo.M2.x){
>foo.M2.x : Symbol(foo.M2.x, Decl(foo.d.ts, 1, 11))
>foo.M2 : Symbol(foo.M2, Decl(foo.d.ts, 0, 0))
>foo : Symbol(foo, Decl(file1.ts, 0, 0))
>M2 : Symbol(foo.M2, Decl(foo.d.ts, 0, 0))
>x : Symbol(foo.M2.x, Decl(foo.d.ts, 1, 11))

	var x = new relMod(other.M2.x.charCodeAt(0));
>x : Symbol(x, Decl(file1.ts, 5, 4))
>relMod : Symbol(relMod, Decl(file1.ts, 1, 34))
>other.M2.x.charCodeAt : Symbol(String.charCodeAt, Decl(lib.es5.d.ts, --, --))
>other.M2.x : Symbol(other.M2.x, Decl(other.d.ts, 1, 11))
>other.M2 : Symbol(other.M2, Decl(other.d.ts, 0, 0))
>other : Symbol(other, Decl(file1.ts, 0, 28))
>M2 : Symbol(other.M2, Decl(other.d.ts, 0, 0))
>x : Symbol(other.M2.x, Decl(other.d.ts, 1, 11))
>charCodeAt : Symbol(String.charCodeAt, Decl(lib.es5.d.ts, --, --))
}

=== test/foo.d.ts ===
export declare namespace M2 {
>M2 : Symbol(M2, Decl(foo.d.ts, 0, 0))

	export var x: boolean;
>x : Symbol(x, Decl(foo.d.ts, 1, 11))
}

=== test/other.d.ts ===
export declare namespace M2 {
>M2 : Symbol(M2, Decl(other.d.ts, 0, 0))

	export var x: string;
>x : Symbol(x, Decl(other.d.ts, 1, 11))
}

=== test/sub/relMod.d.ts ===
declare class Test {
>Test : Symbol(Test, Decl(relMod.d.ts, 0, 0))

	constructor(x: number);
>x : Symbol(x, Decl(relMod.d.ts, 1, 13))
}
export = Test;
>Test : Symbol(Test, Decl(relMod.d.ts, 0, 0))

