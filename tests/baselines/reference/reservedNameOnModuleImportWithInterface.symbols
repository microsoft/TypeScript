//// [tests/cases/compiler/reservedNameOnModuleImportWithInterface.ts] ////

=== reservedNameOnModuleImportWithInterface.ts ===
declare namespace test {
>test : Symbol(test, Decl(reservedNameOnModuleImportWithInterface.ts, 0, 0))

    interface mi_string { }
>mi_string : Symbol(mi_string, Decl(reservedNameOnModuleImportWithInterface.ts, 0, 24), Decl(reservedNameOnModuleImportWithInterface.ts, 1, 27))

    namespace mi_string { }
>mi_string : Symbol(mi_string, Decl(reservedNameOnModuleImportWithInterface.ts, 0, 24), Decl(reservedNameOnModuleImportWithInterface.ts, 1, 27))

    // Should error; imports both a type and a module, which means it conflicts with the 'string' type.
    import string = mi_string;
>string : Symbol(string, Decl(reservedNameOnModuleImportWithInterface.ts, 2, 27))
>mi_string : Symbol(mi_string, Decl(reservedNameOnModuleImportWithInterface.ts, 0, 24), Decl(reservedNameOnModuleImportWithInterface.ts, 1, 27))
}

