// === SignatureHelp ===
=== /tests/cases/fourslash/test.js ===
// foo.filter()
//            ^
// | ----------------------------------------------------------------------
// | ReadonlyArray.filter<S extends T>(**predicate: (value: T, index: number, array: readonly T[]) => value is S**, thisArg?: any): S[]
// | Returns the elements of an array that meet the condition specified in a callback function.
// | @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.
// | @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.
// | ----------------------------------------------------------------------

[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/test.js",
      "position": 11,
      "name": ""
    },
    "item": {
      "items": [
        {
          "isVariadic": false,
          "prefixDisplayParts": [
            {
              "text": "ReadonlyArray",
              "kind": "interfaceName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "filter",
              "kind": "methodName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "extends",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            }
          ],
          "suffixDisplayParts": [
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "S",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "separatorDisplayParts": [
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            }
          ],
          "parameters": [
            {
              "name": "predicate",
              "documentation": [
                {
                  "text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.",
                  "kind": "text"
                }
              ],
              "displayParts": [
                {
                  "text": "predicate",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "(",
                  "kind": "punctuation"
                },
                {
                  "text": "value",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "T",
                  "kind": "typeParameterName"
                },
                {
                  "text": ",",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "index",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "number",
                  "kind": "keyword"
                },
                {
                  "text": ",",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "array",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "readonly",
                  "kind": "keyword"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "T",
                  "kind": "typeParameterName"
                },
                {
                  "text": "[",
                  "kind": "punctuation"
                },
                {
                  "text": "]",
                  "kind": "punctuation"
                },
                {
                  "text": ")",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "=>",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "value",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is",
                  "kind": "keyword"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "S",
                  "kind": "typeParameterName"
                }
              ],
              "isOptional": false,
              "isRest": false
            },
            {
              "name": "thisArg",
              "documentation": [
                {
                  "text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
                  "kind": "text"
                }
              ],
              "displayParts": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": "?",
                  "kind": "punctuation"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "any",
                  "kind": "keyword"
                }
              ],
              "isOptional": true,
              "isRest": false
            }
          ],
          "documentation": [
            {
              "text": "Returns the elements of an array that meet the condition specified in a callback function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "predicate",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "isVariadic": false,
          "prefixDisplayParts": [
            {
              "text": "ReadonlyArray",
              "kind": "interfaceName"
            },
            {
              "text": ".",
              "kind": "punctuation"
            },
            {
              "text": "filter",
              "kind": "methodName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            }
          ],
          "suffixDisplayParts": [
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            }
          ],
          "separatorDisplayParts": [
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            }
          ],
          "parameters": [
            {
              "name": "predicate",
              "documentation": [
                {
                  "text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.",
                  "kind": "text"
                }
              ],
              "displayParts": [
                {
                  "text": "predicate",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "(",
                  "kind": "punctuation"
                },
                {
                  "text": "value",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "T",
                  "kind": "typeParameterName"
                },
                {
                  "text": ",",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "index",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "number",
                  "kind": "keyword"
                },
                {
                  "text": ",",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "array",
                  "kind": "parameterName"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "readonly",
                  "kind": "keyword"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "T",
                  "kind": "typeParameterName"
                },
                {
                  "text": "[",
                  "kind": "punctuation"
                },
                {
                  "text": "]",
                  "kind": "punctuation"
                },
                {
                  "text": ")",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "=>",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "unknown",
                  "kind": "keyword"
                }
              ],
              "isOptional": false,
              "isRest": false
            },
            {
              "name": "thisArg",
              "documentation": [
                {
                  "text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
                  "kind": "text"
                }
              ],
              "displayParts": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": "?",
                  "kind": "punctuation"
                },
                {
                  "text": ":",
                  "kind": "punctuation"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "any",
                  "kind": "keyword"
                }
              ],
              "isOptional": true,
              "isRest": false
            }
          ],
          "documentation": [
            {
              "text": "Returns the elements of an array that meet the condition specified in a callback function.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "predicate",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "thisArg",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ],
      "applicableSpan": {
        "start": 11,
        "length": 0
      },
      "selectedItemIndex": 0,
      "argumentIndex": 0,
      "argumentCount": 0
    }
  }
]