//// [tests/cases/compiler/sourceMapValidationClass.ts] ////

=== sourceMapValidationClass.ts ===
class Greeter {
>Greeter : Greeter
>        : ^^^^^^^

    constructor(public greeting: string, ...b: string[]) {
>greeting : string
>         : ^^^^^^
>b : string[]
>  : ^^^^^^^^
    }
    greet() {
>greet : () => string
>      : ^^^^^^^^^^^^

        return "<h1>" + this.greeting + "</h1>";
>"<h1>" + this.greeting + "</h1>" : string
>                                 : ^^^^^^
>"<h1>" + this.greeting : string
>                       : ^^^^^^
>"<h1>" : "<h1>"
>       : ^^^^^^
>this.greeting : string
>              : ^^^^^^
>this : this
>     : ^^^^
>greeting : string
>         : ^^^^^^
>"</h1>" : "</h1>"
>        : ^^^^^^^
    }
    private x: string;
>x : string
>  : ^^^^^^

    private x1: number = 10;
>x1 : number
>   : ^^^^^^
>10 : 10
>   : ^^

    private fn() {
>fn : () => string
>   : ^^^^^^^^^^^^

        return this.greeting;
>this.greeting : string
>              : ^^^^^^
>this : this
>     : ^^^^
>greeting : string
>         : ^^^^^^
    }
    get greetings() {
>greetings : string
>          : ^^^^^^

        return this.greeting;
>this.greeting : string
>              : ^^^^^^
>this : this
>     : ^^^^
>greeting : string
>         : ^^^^^^
    }
    set greetings(greetings: string) {
>greetings : string
>          : ^^^^^^
>greetings : string
>          : ^^^^^^

        this.greeting = greetings;
>this.greeting = greetings : string
>                          : ^^^^^^
>this.greeting : string
>              : ^^^^^^
>this : this
>     : ^^^^
>greeting : string
>         : ^^^^^^
>greetings : string
>          : ^^^^^^
    }
}
