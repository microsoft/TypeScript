//// [tests/cases/compiler/specialPropertyBlockShadowing2.ts] ////

=== src/index.js ===
export function X() { };
>X : Symbol(X, Decl(index.js, 0, 0))

if (Math.random()) {
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

  const X = function () { };
>X : Symbol(X, Decl(index.js, 2, 7))

  X.prototype.method = function () { this.test = 1 };
>X.prototype : Symbol(X.method, Decl(index.js, 2, 28))
>X : Symbol(X, Decl(index.js, 2, 7))
>prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
>method : Symbol(X.method, Decl(index.js, 2, 28))
>this : Symbol(X, Decl(index.js, 2, 11))
>test : Symbol(X.test, Decl(index.js, 3, 36))
}

export function Y() { };
>Y : Symbol(Y, Decl(index.js, 4, 1))

Y.prototype.method = function () { this.test = "foo" };
>Y.prototype : Symbol(Y.method, Decl(index.js, 6, 24))
>Y : Symbol(Y, Decl(index.js, 4, 1))
>prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
>method : Symbol(Y.method, Decl(index.js, 6, 24))
>this.test : Symbol(Y.test, Decl(index.js, 7, 34), Decl(index.js, 11, 36))
>this : Symbol(Y, Decl(index.js, 4, 1))
>test : Symbol(Y.test, Decl(index.js, 7, 34), Decl(index.js, 11, 36))

const AliasTopY = Y;
>AliasTopY : Symbol(AliasTopY, Decl(index.js, 8, 5))
>Y : Symbol(Y, Decl(index.js, 4, 1))

if (Math.random()) {
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

  const Y = function () { };
>Y : Symbol(Y, Decl(index.js, 10, 7))

  Y.prototype.method = function () { this.test = 42 };
>Y.prototype : Symbol(Y.method, Decl(index.js, 10, 28))
>Y : Symbol(Y, Decl(index.js, 10, 7))
>prototype : Symbol(Function.prototype, Decl(lib.es5.d.ts, --, --))
>method : Symbol(Y.method, Decl(index.js, 10, 28))
>this : Symbol(Y, Decl(index.js, 10, 11))
>test : Symbol(Y.test, Decl(index.js, 7, 34), Decl(index.js, 11, 36))

  /** @type {{ test: string }} */
  const topYcheck = new AliasTopY();
>topYcheck : Symbol(topYcheck, Decl(index.js, 14, 7))
>AliasTopY : Symbol(AliasTopY, Decl(index.js, 8, 5))

  /** @type {{ test: number }} */
  const blockYcheck = new Y();
>blockYcheck : Symbol(blockYcheck, Decl(index.js, 16, 7))
>Y : Symbol(Y, Decl(index.js, 10, 7))
}

