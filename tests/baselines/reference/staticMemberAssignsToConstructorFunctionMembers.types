//// [tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/staticMemberAssignsToConstructorFunctionMembers.ts] ////

=== staticMemberAssignsToConstructorFunctionMembers.ts ===
class C {
>C : C
>  : ^

    static foo() {
>foo : () => void
>    : ^^^^^^^^^^

        C.foo = () => { }
>C.foo = () => { } : () => void
>                  : ^^^^^^^^^^
>C.foo : () => void
>      : ^^^^^^^^^^
>C : typeof C
>  : ^^^^^^^^
>foo : () => void
>    : ^^^^^^^^^^
>() => { } : () => void
>          : ^^^^^^^^^^
    }

    static bar(x: number): number {
>bar : (x: number) => number
>    : ^ ^^      ^^^^^      
>x : number
>  : ^^^^^^

        C.bar = () => { } // error
>C.bar = () => { } : () => void
>                  : ^^^^^^^^^^
>C.bar : (x: number) => number
>      : ^ ^^      ^^^^^      
>C : typeof C
>  : ^^^^^^^^
>bar : (x: number) => number
>    : ^ ^^      ^^^^^      
>() => { } : () => void
>          : ^^^^^^^^^^

        C.bar = (x) => x; // ok
>C.bar = (x) => x : (x: number) => number
>                 : ^ ^^^^^^^^^^^^^^^^^^^
>C.bar : (x: number) => number
>      : ^ ^^      ^^^^^      
>C : typeof C
>  : ^^^^^^^^
>bar : (x: number) => number
>    : ^ ^^      ^^^^^      
>(x) => x : (x: number) => number
>         : ^ ^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>x : number
>  : ^^^^^^

        C.bar = (x: number) => 1; // ok
>C.bar = (x: number) => 1 : (x: number) => number
>                         : ^ ^^      ^^^^^^^^^^^
>C.bar : (x: number) => number
>      : ^ ^^      ^^^^^      
>C : typeof C
>  : ^^^^^^^^
>bar : (x: number) => number
>    : ^ ^^      ^^^^^      
>(x: number) => 1 : (x: number) => number
>                 : ^ ^^      ^^^^^^^^^^^
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

        return 1;
>1 : 1
>  : ^
    }
}
