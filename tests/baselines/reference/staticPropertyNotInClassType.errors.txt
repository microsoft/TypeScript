staticPropertyNotInClassType.ts(1,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
staticPropertyNotInClassType.ts(10,12): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
staticPropertyNotInClassType.ts(16,16): error TS2576: Property 'foo' does not exist on type 'C'. Did you mean to access the static member 'C.foo' instead?
staticPropertyNotInClassType.ts(17,16): error TS2339: Property 'bar' does not exist on type 'C'.
staticPropertyNotInClassType.ts(18,16): error TS2576: Property 'x' does not exist on type 'C'. Did you mean to access the static member 'C.x' instead?
staticPropertyNotInClassType.ts(21,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
staticPropertyNotInClassType.ts(27,21): error TS2302: Static members cannot reference class type parameters.
staticPropertyNotInClassType.ts(30,12): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
staticPropertyNotInClassType.ts(36,16): error TS2576: Property 'foo' does not exist on type 'C<number, string>'. Did you mean to access the static member 'C<number, string>.foo' instead?
staticPropertyNotInClassType.ts(37,16): error TS2339: Property 'bar' does not exist on type 'C<number, string>'.
staticPropertyNotInClassType.ts(38,16): error TS2576: Property 'x' does not exist on type 'C<number, string>'. Did you mean to access the static member 'C<number, string>.x' instead?


==== staticPropertyNotInClassType.ts (11 errors) ====
    module NonGeneric {
           ~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        class C {
            fn() { return this; }
            static get x() { return 1; }
            static set x(v) { }
            constructor(public a: number, private b: number) { }
            static foo: string; // not reflected in class type
        }
    
        module C {
               ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
            export var bar = ''; // not reflected in class type
        }
    
        var c = new C(1, 2);
        var r = c.fn();
        var r4 = c.foo; // error
                   ~~~
!!! error TS2576: Property 'foo' does not exist on type 'C'. Did you mean to access the static member 'C.foo' instead?
        var r5 = c.bar; // error
                   ~~~
!!! error TS2339: Property 'bar' does not exist on type 'C'.
        var r6 = c.x; // error
                   ~
!!! error TS2576: Property 'x' does not exist on type 'C'. Did you mean to access the static member 'C.x' instead?
    }
    
    module Generic {
           ~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        class C<T, U> {
            fn() { return this; }
            static get x() { return 1; }
            static set x(v) { }
            constructor(public a: T, private b: U) { }
            static foo: T; // not reflected in class type
                        ~
!!! error TS2302: Static members cannot reference class type parameters.
        }
    
        module C {
               ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
            export var bar = ''; // not reflected in class type
        }
    
        var c = new C(1, '');
        var r = c.fn();
        var r4 = c.foo; // error
                   ~~~
!!! error TS2576: Property 'foo' does not exist on type 'C<number, string>'. Did you mean to access the static member 'C<number, string>.foo' instead?
        var r5 = c.bar; // error
                   ~~~
!!! error TS2339: Property 'bar' does not exist on type 'C<number, string>'.
        var r6 = c.x; // error
                   ~
!!! error TS2576: Property 'x' does not exist on type 'C<number, string>'. Did you mean to access the static member 'C<number, string>.x' instead?
    }