//// [tests/cases/compiler/statics.ts] ////

=== statics.ts ===
namespace M {
>M : Symbol(M, Decl(statics.ts, 0, 0))

    export class C {
>C : Symbol(C, Decl(statics.ts, 0, 13))

        x: number;
>x : Symbol(C.x, Decl(statics.ts, 1, 20))

        constructor(public c1: number, public c2: number, c3: number) {
>c1 : Symbol(C.c1, Decl(statics.ts, 3, 20))
>c2 : Symbol(C.c2, Decl(statics.ts, 3, 38))
>c3 : Symbol(c3, Decl(statics.ts, 3, 57))

            this.x = C.y+this.c1+this.c2+c3;
>this.x : Symbol(C.x, Decl(statics.ts, 1, 20))
>this : Symbol(C, Decl(statics.ts, 0, 13))
>x : Symbol(C.x, Decl(statics.ts, 1, 20))
>C.y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>y : Symbol(C.y, Decl(statics.ts, 9, 21))
>this.c1 : Symbol(C.c1, Decl(statics.ts, 3, 20))
>this : Symbol(C, Decl(statics.ts, 0, 13))
>c1 : Symbol(C.c1, Decl(statics.ts, 3, 20))
>this.c2 : Symbol(C.c2, Decl(statics.ts, 3, 38))
>this : Symbol(C, Decl(statics.ts, 0, 13))
>c2 : Symbol(C.c2, Decl(statics.ts, 3, 38))
>c3 : Symbol(c3, Decl(statics.ts, 3, 57))

            this.g = (v:number) => C.f(this.x+C.y+v+this.c1+this.c2+C.pub);
>this : Symbol(C, Decl(statics.ts, 0, 13))
>v : Symbol(v, Decl(statics.ts, 5, 22))
>C.f : Symbol(C.f, Decl(statics.ts, 10, 24))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>f : Symbol(C.f, Decl(statics.ts, 10, 24))
>this.x : Symbol(C.x, Decl(statics.ts, 1, 20))
>this : Symbol(C, Decl(statics.ts, 0, 13))
>x : Symbol(C.x, Decl(statics.ts, 1, 20))
>C.y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>y : Symbol(C.y, Decl(statics.ts, 9, 21))
>v : Symbol(v, Decl(statics.ts, 5, 22))
>this.c1 : Symbol(C.c1, Decl(statics.ts, 3, 20))
>this : Symbol(C, Decl(statics.ts, 0, 13))
>c1 : Symbol(C.c1, Decl(statics.ts, 3, 20))
>this.c2 : Symbol(C.c2, Decl(statics.ts, 3, 38))
>this : Symbol(C, Decl(statics.ts, 0, 13))
>c2 : Symbol(C.c2, Decl(statics.ts, 3, 38))
>C.pub : Symbol(C.pub, Decl(statics.ts, 8, 22))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>pub : Symbol(C.pub, Decl(statics.ts, 8, 22))
        }

        static priv=2;
>priv : Symbol(C.priv, Decl(statics.ts, 6, 9))

        static pub=3;
>pub : Symbol(C.pub, Decl(statics.ts, 8, 22))

        static y=C.priv;
>y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C.priv : Symbol(C.priv, Decl(statics.ts, 6, 9))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>priv : Symbol(C.priv, Decl(statics.ts, 6, 9))

        static f(n:number) {
>f : Symbol(C.f, Decl(statics.ts, 10, 24))
>n : Symbol(n, Decl(statics.ts, 11, 17))

            return "wow: "+(n+C.y+C.pub+C.priv);
>n : Symbol(n, Decl(statics.ts, 11, 17))
>C.y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C.pub : Symbol(C.pub, Decl(statics.ts, 8, 22))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>pub : Symbol(C.pub, Decl(statics.ts, 8, 22))
>C.priv : Symbol(C.priv, Decl(statics.ts, 6, 9))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>priv : Symbol(C.priv, Decl(statics.ts, 6, 9))

        }        
    }
    var c=C.y;
>c : Symbol(c, Decl(statics.ts, 16, 7))
>C.y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>y : Symbol(C.y, Decl(statics.ts, 9, 21))

    export function f() {
>f : Symbol(f, Decl(statics.ts, 16, 14))

        var result="";
>result : Symbol(result, Decl(statics.ts, 18, 11))

        result+=(c);
>result : Symbol(result, Decl(statics.ts, 18, 11))
>c : Symbol(c, Decl(statics.ts, 16, 7))

        result+=(new C(0,1,2).x);
>result : Symbol(result, Decl(statics.ts, 18, 11))
>new C(0,1,2).x : Symbol(C.x, Decl(statics.ts, 1, 20))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>x : Symbol(C.x, Decl(statics.ts, 1, 20))

        result+=(C.f(10));
>result : Symbol(result, Decl(statics.ts, 18, 11))
>C.f : Symbol(C.f, Decl(statics.ts, 10, 24))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>f : Symbol(C.f, Decl(statics.ts, 10, 24))

        result+=(new C(5,10,20).g(C.y));
>result : Symbol(result, Decl(statics.ts, 18, 11))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>C.y : Symbol(C.y, Decl(statics.ts, 9, 21))
>C : Symbol(C, Decl(statics.ts, 0, 13))
>y : Symbol(C.y, Decl(statics.ts, 9, 21))

        return result;
>result : Symbol(result, Decl(statics.ts, 18, 11))
    }
}

M.f();
>M.f : Symbol(M.f, Decl(statics.ts, 16, 14))
>M : Symbol(M, Decl(statics.ts, 0, 0))
>f : Symbol(M.f, Decl(statics.ts, 16, 14))



