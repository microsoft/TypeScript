//// [tests/cases/compiler/strictTypeofUnionNarrowing.ts] ////

=== strictTypeofUnionNarrowing.ts ===
function stringify1(anything: { toString(): string } | undefined): string {
>stringify1 : (anything: { toString(): string; } | undefined) => string
>           : ^        ^^                                   ^^^^^      
>anything : { toString(): string; } | undefined
>         : ^^^^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>toString : () => string
>         : ^^^^^^      

    return typeof anything === "string" ? anything.toUpperCase() : "";
>typeof anything === "string" ? anything.toUpperCase() : "" : string
>                                                           : ^^^^^^
>typeof anything === "string" : boolean
>                             : ^^^^^^^
>typeof anything : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>anything : { toString(): string; } | undefined
>         : ^^^^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>"string" : "string"
>         : ^^^^^^^^
>anything.toUpperCase() : string
>                       : ^^^^^^
>anything.toUpperCase : () => string
>                     : ^^^^^^      
>anything : string
>         : ^^^^^^
>toUpperCase : () => string
>            : ^^^^^^      
>"" : ""
>   : ^^
}

function stringify2(anything: {} | undefined): string {
>stringify2 : (anything: {} | undefined) => string
>           : ^        ^^              ^^^^^      
>anything : {} | undefined
>         : ^^^^^^^^^^^^^^

    return typeof anything === "string" ? anything.toUpperCase() : "";
>typeof anything === "string" ? anything.toUpperCase() : "" : string
>                                                           : ^^^^^^
>typeof anything === "string" : boolean
>                             : ^^^^^^^
>typeof anything : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>anything : {} | undefined
>         : ^^^^^^^^^^^^^^
>"string" : "string"
>         : ^^^^^^^^
>anything.toUpperCase() : string
>                       : ^^^^^^
>anything.toUpperCase : () => string
>                     : ^^^^^^      
>anything : string
>         : ^^^^^^
>toUpperCase : () => string
>            : ^^^^^^      
>"" : ""
>   : ^^
}

function stringify3(anything: unknown | undefined): string { // should simplify to just `unknown` which should narrow fine
>stringify3 : (anything: unknown | undefined) => string
>           : ^        ^^                   ^^^^^      
>anything : unknown
>         : ^^^^^^^

    return typeof anything === "string" ? anything.toUpperCase() : "";
>typeof anything === "string" ? anything.toUpperCase() : "" : string
>                                                           : ^^^^^^
>typeof anything === "string" : boolean
>                             : ^^^^^^^
>typeof anything : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>anything : unknown
>         : ^^^^^^^
>"string" : "string"
>         : ^^^^^^^^
>anything.toUpperCase() : string
>                       : ^^^^^^
>anything.toUpperCase : () => string
>                     : ^^^^^^      
>anything : string
>         : ^^^^^^
>toUpperCase : () => string
>            : ^^^^^^      
>"" : ""
>   : ^^
}

function stringify4(anything: { toString?(): string } | undefined): string {
>stringify4 : (anything: { toString?(): string; } | undefined) => string
>           : ^        ^^                                    ^^^^^      
>anything : { toString?(): string; } | undefined
>         : ^^^^^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>toString : (() => string) | undefined
>         : ^^^^^^^      ^^^^^^^^^^^^^

    return typeof anything === "string" ? anything.toUpperCase() : "";
>typeof anything === "string" ? anything.toUpperCase() : "" : string
>                                                           : ^^^^^^
>typeof anything === "string" : boolean
>                             : ^^^^^^^
>typeof anything : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>anything : { toString?(): string; } | undefined
>         : ^^^^^^^^^^^^^^^      ^^^^^^^^^^^^^^^
>"string" : "string"
>         : ^^^^^^^^
>anything.toUpperCase() : string
>                       : ^^^^^^
>anything.toUpperCase : () => string
>                     : ^^^^^^      
>anything : string
>         : ^^^^^^
>toUpperCase : () => string
>            : ^^^^^^      
>"" : ""
>   : ^^
}

