//// [tests/cases/conformance/types/stringLiteral/stringLiteralTypesAndTuples01.ts] ////

=== stringLiteralTypesAndTuples01.ts ===
// Should all be strings.
let [hello, brave, newish, world] = ["Hello", "Brave", "New", "World"];
>hello : string
>      : ^^^^^^
>brave : string
>      : ^^^^^^
>newish : string
>       : ^^^^^^
>world : string
>      : ^^^^^^
>["Hello", "Brave", "New", "World"] : [string, string, string, string]
>                                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"Hello" : "Hello"
>        : ^^^^^^^
>"Brave" : "Brave"
>        : ^^^^^^^
>"New" : "New"
>      : ^^^^^
>"World" : "World"
>        : ^^^^^^^

type RexOrRaptor = "t-rex" | "raptor"
>RexOrRaptor : RexOrRaptor
>            : ^^^^^^^^^^^

let [im, a, dinosaur]: ["I'm", "a", RexOrRaptor] = ['I\'m', 'a', 't-rex'];
>im : "I'm"
>   : ^^^^^
>a : "a"
>  : ^^^
>dinosaur : RexOrRaptor
>         : ^^^^^^^^^^^
>['I\'m', 'a', 't-rex'] : ["I'm", "a", "t-rex"]
>                       : ^^^^^^^^^^^^^^^^^^^^^
>'I\'m' : "I'm"
>       : ^^^^^
>'a' : "a"
>    : ^^^
>'t-rex' : "t-rex"
>        : ^^^^^^^

rawr(dinosaur);
>rawr(dinosaur) : "ROAAAAR!" | "yip yip!"
>               : ^^^^^^^^^^^^^^^^^^^^^^^
>rawr : (dino: RexOrRaptor) => "ROAAAAR!" | "yip yip!"
>     : ^    ^^           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>dinosaur : "t-rex"
>         : ^^^^^^^

function rawr(dino: RexOrRaptor) {
>rawr : (dino: RexOrRaptor) => "ROAAAAR!" | "yip yip!"
>     : ^    ^^           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>dino : RexOrRaptor
>     : ^^^^^^^^^^^

    if (dino === "t-rex") {
>dino === "t-rex" : boolean
>                 : ^^^^^^^
>dino : RexOrRaptor
>     : ^^^^^^^^^^^
>"t-rex" : "t-rex"
>        : ^^^^^^^

        return "ROAAAAR!";
>"ROAAAAR!" : "ROAAAAR!"
>           : ^^^^^^^^^^
    }
    if (dino === "raptor") {
>dino === "raptor" : boolean
>                  : ^^^^^^^
>dino : "raptor"
>     : ^^^^^^^^
>"raptor" : "raptor"
>         : ^^^^^^^^

        return "yip yip!";
>"yip yip!" : "yip yip!"
>           : ^^^^^^^^^^
    }

    throw "Unexpected " + dino;
>"Unexpected " + dino : string
>                     : ^^^^^^
>"Unexpected " : "Unexpected "
>              : ^^^^^^^^^^^^^
>dino : never
>     : ^^^^^
}
