//// [tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloadAssignability04.ts] ////

=== stringLiteralTypesOverloadAssignability04.ts ===
function f(x: "foo"): number;
>f : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>x : "foo"
>  : ^^^^^

function f(x: "foo"): number {
>f : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>x : "foo"
>  : ^^^^^

    return 0;
>0 : 0
>  : ^
}

function g(x: "foo"): number;
>g : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>x : "foo"
>  : ^^^^^

function g(x: "foo"): number {
>g : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>x : "foo"
>  : ^^^^^

    return 0;
>0 : 0
>  : ^
}

let a = f;
>a : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>f : (x: "foo") => number
>  : ^ ^^     ^^^^^      

let b = g;
>b : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>g : (x: "foo") => number
>  : ^ ^^     ^^^^^      

a = b;
>a = b : (x: "foo") => number
>      : ^ ^^     ^^^^^      
>a : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>b : (x: "foo") => number
>  : ^ ^^     ^^^^^      

b = a;
>b = a : (x: "foo") => number
>      : ^ ^^     ^^^^^      
>b : (x: "foo") => number
>  : ^ ^^     ^^^^^      
>a : (x: "foo") => number
>  : ^ ^^     ^^^^^      

