//// [tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloads01.ts] ////

=== stringLiteralTypesOverloads01.ts ===
type PrimitiveName = 'string' | 'number' | 'boolean';
>PrimitiveName : PrimitiveName
>              : ^^^^^^^^^^^^^

function getFalsyPrimitive(x: "string"): string;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "string"
>  : ^^^^^^^^

function getFalsyPrimitive(x: "number"): number;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "number"
>  : ^^^^^^^^

function getFalsyPrimitive(x: "boolean"): boolean;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "boolean"
>  : ^^^^^^^^^

function getFalsyPrimitive(x: "boolean" | "string"): boolean | string;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "boolean" | "string"
>  : ^^^^^^^^^^^^^^^^^^^^

function getFalsyPrimitive(x: "boolean" | "number"): boolean | number;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "boolean" | "number"
>  : ^^^^^^^^^^^^^^^^^^^^

function getFalsyPrimitive(x: "number" | "string"): number | string;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "number" | "string"
>  : ^^^^^^^^^^^^^^^^^^^

function getFalsyPrimitive(x: "number" | "string" | "boolean"): number | string | boolean;
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : "boolean" | "number" | "string"
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

function getFalsyPrimitive(x: PrimitiveName): number | string | boolean {
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>x : PrimitiveName
>  : ^^^^^^^^^^^^^

    if (x === "string") {
>x === "string" : boolean
>               : ^^^^^^^
>x : PrimitiveName
>  : ^^^^^^^^^^^^^
>"string" : "string"
>         : ^^^^^^^^

        return "";
>"" : ""
>   : ^^
    }
    if (x === "number") {
>x === "number" : boolean
>               : ^^^^^^^
>x : "boolean" | "number"
>  : ^^^^^^^^^^^^^^^^^^^^
>"number" : "number"
>         : ^^^^^^^^

        return 0;
>0 : 0
>  : ^
    }
    if (x === "boolean") {
>x === "boolean" : boolean
>                : ^^^^^^^
>x : "boolean"
>  : ^^^^^^^^^
>"boolean" : "boolean"
>          : ^^^^^^^^^

        return false;
>false : false
>      : ^^^^^
    }

    // Should be unreachable.
    throw "Invalid value";
>"Invalid value" : "Invalid value"
>                : ^^^^^^^^^^^^^^^
}

namespace Consts1 {
>Consts1 : typeof Consts1
>        : ^^^^^^^^^^^^^^

    const EMPTY_STRING = getFalsyPrimitive("string");
>EMPTY_STRING : string
>             : ^^^^^^
>getFalsyPrimitive("string") : string
>                            : ^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>"string" : "string"
>         : ^^^^^^^^

    const ZERO = getFalsyPrimitive('number');
>ZERO : number
>     : ^^^^^^
>getFalsyPrimitive('number') : number
>                            : ^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>'number' : "number"
>         : ^^^^^^^^

    const FALSE = getFalsyPrimitive("boolean");
>FALSE : boolean
>      : ^^^^^^^
>getFalsyPrimitive("boolean") : boolean
>                             : ^^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>"boolean" : "boolean"
>          : ^^^^^^^^^
}

const string: "string" = "string"
>string : "string"
>       : ^^^^^^^^
>"string" : "string"
>         : ^^^^^^^^

const number: "number" = "number"
>number : "number"
>       : ^^^^^^^^
>"number" : "number"
>         : ^^^^^^^^

const boolean: "boolean" = "boolean"
>boolean : "boolean"
>        : ^^^^^^^^^
>"boolean" : "boolean"
>          : ^^^^^^^^^

const stringOrNumber = string || number;
>stringOrNumber : "number" | "string"
>               : ^^^^^^^^^^^^^^^^^^^
>string || number : "number" | "string"
>                 : ^^^^^^^^^^^^^^^^^^^
>string : "string"
>       : ^^^^^^^^
>number : "number"
>       : ^^^^^^^^

const stringOrBoolean = string || boolean;
>stringOrBoolean : "boolean" | "string"
>                : ^^^^^^^^^^^^^^^^^^^^
>string || boolean : "boolean" | "string"
>                  : ^^^^^^^^^^^^^^^^^^^^
>string : "string"
>       : ^^^^^^^^
>boolean : "boolean"
>        : ^^^^^^^^^

const booleanOrNumber = number || boolean;
>booleanOrNumber : "boolean" | "number"
>                : ^^^^^^^^^^^^^^^^^^^^
>number || boolean : "boolean" | "number"
>                  : ^^^^^^^^^^^^^^^^^^^^
>number : "number"
>       : ^^^^^^^^
>boolean : "boolean"
>        : ^^^^^^^^^

const stringOrBooleanOrNumber = stringOrBoolean || number;
>stringOrBooleanOrNumber : "boolean" | "number" | "string"
>                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>stringOrBoolean || number : "boolean" | "number" | "string"
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>stringOrBoolean : "boolean" | "string"
>                : ^^^^^^^^^^^^^^^^^^^^
>number : "number"
>       : ^^^^^^^^

namespace Consts2 {
>Consts2 : typeof Consts2
>        : ^^^^^^^^^^^^^^

    const EMPTY_STRING = getFalsyPrimitive(string);
>EMPTY_STRING : string
>             : ^^^^^^
>getFalsyPrimitive(string) : string
>                          : ^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>string : "string"
>       : ^^^^^^^^

    const ZERO = getFalsyPrimitive(number);
>ZERO : number
>     : ^^^^^^
>getFalsyPrimitive(number) : number
>                          : ^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>number : "number"
>       : ^^^^^^^^

    const FALSE = getFalsyPrimitive(boolean);
>FALSE : boolean
>      : ^^^^^^^
>getFalsyPrimitive(boolean) : boolean
>                           : ^^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>boolean : "boolean"
>        : ^^^^^^^^^

    const a = getFalsyPrimitive(stringOrNumber);
>a : string | number
>  : ^^^^^^^^^^^^^^^
>getFalsyPrimitive(stringOrNumber) : string | number
>                                  : ^^^^^^^^^^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>stringOrNumber : "number" | "string"
>               : ^^^^^^^^^^^^^^^^^^^

    const b = getFalsyPrimitive(stringOrBoolean);
>b : string | boolean
>  : ^^^^^^^^^^^^^^^^
>getFalsyPrimitive(stringOrBoolean) : string | boolean
>                                   : ^^^^^^^^^^^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>stringOrBoolean : "boolean" | "string"
>                : ^^^^^^^^^^^^^^^^^^^^

    const c = getFalsyPrimitive(booleanOrNumber);
>c : number | boolean
>  : ^^^^^^^^^^^^^^^^
>getFalsyPrimitive(booleanOrNumber) : number | boolean
>                                   : ^^^^^^^^^^^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>booleanOrNumber : "boolean" | "number"
>                : ^^^^^^^^^^^^^^^^^^^^

    const d = getFalsyPrimitive(stringOrBooleanOrNumber);
>d : string | number | boolean
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>getFalsyPrimitive(stringOrBooleanOrNumber) : string | number | boolean
>                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^
>getFalsyPrimitive : { (x: "string"): string; (x: "number"): number; (x: "boolean"): boolean; (x: "boolean" | "string"): boolean | string; (x: "boolean" | "number"): boolean | number; (x: "number" | "string"): number | string; (x: "number" | "string" | "boolean"): number | string | boolean; }
>                  : ^^^ ^^        ^^^      ^^^ ^^        ^^^      ^^^ ^^         ^^^       ^^^ ^^                    ^^^                ^^^ ^^                    ^^^                ^^^ ^^                   ^^^               ^^^ ^^                               ^^^                         ^^^
>stringOrBooleanOrNumber : "boolean" | "number" | "string"
>                        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}



