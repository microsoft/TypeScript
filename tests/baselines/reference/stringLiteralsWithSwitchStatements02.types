//// [tests/cases/conformance/types/literal/stringLiteralsWithSwitchStatements02.ts] ////

=== stringLiteralsWithSwitchStatements02.ts ===
let x: "foo";
>x : "foo"
>  : ^^^^^

let y: "foo" | "bar";
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^

let b: boolean;
>b : boolean
>  : ^^^^^^^

b = x == y;
>b = x == y : boolean
>           : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>x == y : boolean
>       : ^^^^^^^
>x : "foo"
>  : ^^^^^
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^

b = "foo" == y
>b = "foo" == y : boolean
>               : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>"foo" == y : boolean
>           : ^^^^^^^
>"foo" : "foo"
>      : ^^^^^
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^

b = y == "foo";
>b = y == "foo" : boolean
>               : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>y == "foo" : boolean
>           : ^^^^^^^
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^
>"foo" : "foo"
>      : ^^^^^

b = "foo" == "bar";
>b = "foo" == "bar" : boolean
>                   : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>"foo" == "bar" : boolean
>               : ^^^^^^^
>"foo" : "foo"
>      : ^^^^^
>"bar" : "bar"
>      : ^^^^^

b = x != y;
>b = x != y : boolean
>           : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>x != y : boolean
>       : ^^^^^^^
>x : "foo"
>  : ^^^^^
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^

b = "foo" != y
>b = "foo" != y : boolean
>               : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>"foo" != y : boolean
>           : ^^^^^^^
>"foo" : "foo"
>      : ^^^^^
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^

b = y != "foo";
>b = y != "foo" : boolean
>               : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>y != "foo" : boolean
>           : ^^^^^^^
>y : "foo" | "bar"
>  : ^^^^^^^^^^^^^
>"foo" : "foo"
>      : ^^^^^

b = "foo" != "bar";
>b = "foo" != "bar" : boolean
>                   : ^^^^^^^
>b : boolean
>  : ^^^^^^^
>"foo" != "bar" : boolean
>               : ^^^^^^^
>"foo" : "foo"
>      : ^^^^^
>"bar" : "bar"
>      : ^^^^^


