//// [tests/cases/conformance/types/literal/stringLiteralsWithTypeAssertions01.ts] ////

=== stringLiteralsWithTypeAssertions01.ts ===
let fooOrBar: "foo" | "bar";
>fooOrBar : "foo" | "bar"
>         : ^^^^^^^^^^^^^

let a = "foo" as "bar";
>a : "bar"
>  : ^^^^^
>"foo" as "bar" : "bar"
>               : ^^^^^
>"foo" : "foo"
>      : ^^^^^

let b = "bar" as "foo";
>b : "foo"
>  : ^^^^^
>"bar" as "foo" : "foo"
>               : ^^^^^
>"bar" : "bar"
>      : ^^^^^

let c = fooOrBar as "foo";
>c : "foo"
>  : ^^^^^
>fooOrBar as "foo" : "foo"
>                  : ^^^^^
>fooOrBar : "foo" | "bar"
>         : ^^^^^^^^^^^^^

let d = fooOrBar as "bar";
>d : "bar"
>  : ^^^^^
>fooOrBar as "bar" : "bar"
>                  : ^^^^^
>fooOrBar : "foo" | "bar"
>         : ^^^^^^^^^^^^^

let e = fooOrBar as "baz";
>e : "baz"
>  : ^^^^^
>fooOrBar as "baz" : "baz"
>                  : ^^^^^
>fooOrBar : "foo" | "bar"
>         : ^^^^^^^^^^^^^

let f = "baz" as typeof fooOrBar;
>f : "foo" | "bar"
>  : ^^^^^^^^^^^^^
>"baz" as typeof fooOrBar : "foo" | "bar"
>                         : ^^^^^^^^^^^^^
>"baz" : "baz"
>      : ^^^^^
>fooOrBar : "foo" | "bar"
>         : ^^^^^^^^^^^^^

