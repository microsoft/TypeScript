//// [tests/cases/compiler/subclassThisTypeAssignable02.ts] ////

=== tile1.ts ===
interface Lifecycle<Attrs, State extends Lifecycle<Attrs, State>> {
	oninit?(vnode: Vnode<Attrs, State>): number;
>oninit : ((vnode: Vnode<Attrs, State>) => number) | undefined
>       : ^^     ^^                   ^^^^^      ^^^^^^^^^^^^^
>vnode : Vnode<Attrs, State>
>      : ^^^^^^^^^^^^^^^^^^^

	[_: number]: any;
>_ : number
>  : ^^^^^^
}

interface Vnode<Attrs, State extends Lifecycle<Attrs, State>> {
	tag: Component<Attrs, State>;
>tag : Component<Attrs, State>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
}

interface Component<Attrs, State extends Lifecycle<Attrs, State>> {
	view(this: State, vnode: Vnode<Attrs, State>): number;
>view : (this: State, vnode: Vnode<Attrs, State>) => number
>     : ^    ^^     ^^     ^^                   ^^^^^      
>this : State
>     : ^^^^^
>vnode : Vnode<Attrs, State>
>      : ^^^^^^^^^^^^^^^^^^^
}

interface ClassComponent<A> extends Lifecycle<A, ClassComponent<A>> {
	oninit?(vnode: Vnode<A, this>): number;
>oninit : ((vnode: Vnode<A, this>) => number) | undefined
>       : ^^     ^^              ^^^^^      ^^^^^^^^^^^^^
>vnode : Vnode<A, this>
>      : ^^^^^^^^^^^^^^

	view(vnode: Vnode<A, this>): number;
>view : (vnode: Vnode<A, this>) => number
>     : ^     ^^              ^^^^^      
>vnode : Vnode<A, this>
>      : ^^^^^^^^^^^^^^
}

interface MyAttrs { id: number }
>id : number
>   : ^^^^^^

class C implements ClassComponent<MyAttrs> {
>C : C
>  : ^

	view(v: Vnode<MyAttrs, C>) { return 0; }
>view : (v: Vnode<MyAttrs, C>) => number
>     : ^ ^^                 ^^^^^^^^^^^
>v : Vnode<MyAttrs, C>
>  : ^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

	// Must declare a compatible-ish index signature or else
	// we won't correctly implement ClassComponent.
	[_: number]: unknown;
>_ : number
>  : ^^^^^^
}

const test8: ClassComponent<any> = new C();
>test8 : ClassComponent<any>
>      : ^^^^^^^^^^^^^^^^^^^
>new C() : C
>        : ^
>C : typeof C
>  : ^^^^^^^^

=== file1.js ===
/** @type {ClassComponent<any>} */
const test9 = new C();
>test9 : ClassComponent<any>
>      : ^^^^^^^^^^^^^^^^^^^
>new C() : C
>        : ^
>C : typeof C
>  : ^^^^^^^^

