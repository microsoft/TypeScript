//// [tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithGenericConstructSignaturesWithOptionalParameters.ts] ////

=== subtypingWithGenericConstructSignaturesWithOptionalParameters.ts ===
// call signatures in derived types must have the same or fewer optional parameters as the base type

namespace ClassTypeParam {
>ClassTypeParam : Symbol(ClassTypeParam, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 0, 0))

    interface Base<T> {
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))

        a: new () => T;
>a : Symbol(Base.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 23))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))

        a2: new (x?: T) => T;
>a2 : Symbol(Base.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 4, 23))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 5, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))

        a3: new (x: T) => T;
>a3 : Symbol(Base.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 5, 29))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 6, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))

        a4: new (x: T, y?: T) => T;
>a4 : Symbol(Base.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 6, 28))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 7, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 7, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))

        a5: new (x?: T, y?: T) => T;
>a5 : Symbol(Base.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 7, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 8, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 8, 23))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 3, 19))
    }

    interface I1<T> extends Base<T> {
>I1 : Symbol(I1, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 9, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 11, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 11, 17))

        a: new () => T; // ok, same T of required params
>a : Symbol(I1.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 11, 37))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 11, 17))
    }

    interface I2<T> extends Base<T> {
>I2 : Symbol(I2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 13, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 15, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 15, 17))

        a: new (x?: T) => T; // ok, same T of required params
>a : Symbol(I2.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 15, 37))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 16, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 15, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 15, 17))
    }

    interface I3<T> extends Base<T> {
>I3 : Symbol(I3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 17, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 19, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 19, 17))

        a: new (x: T) => T; // error, too many required params
>a : Symbol(I3.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 19, 37))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 20, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 19, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 19, 17))
    }


    interface I4<T> extends Base<T> {
>I4 : Symbol(I4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 21, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 24, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 24, 17))

        a2: new () => T; // ok, same T of required params
>a2 : Symbol(I4.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 24, 37))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 24, 17))
    }

    interface I5<T> extends Base<T> {
>I5 : Symbol(I5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 26, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 28, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 28, 17))

        a2: new (x?: T) => T; // ok, same T of required params
>a2 : Symbol(I5.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 28, 37))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 29, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 28, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 28, 17))
    }

    interface I6<T> extends Base<T> {
>I6 : Symbol(I6, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 30, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 32, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 32, 17))

        a2: new (x: T) => T; // ok, same number of params
>a2 : Symbol(I6.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 32, 37))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 33, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 32, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 32, 17))
    }


    interface I7<T> extends Base<T> {
>I7 : Symbol(I7, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 34, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 37, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 37, 17))

        a3: new () => T; // ok, fewer required params
>a3 : Symbol(I7.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 37, 37))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 37, 17))
    }

    interface I8<T> extends Base<T> {
>I8 : Symbol(I8, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 39, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 41, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 41, 17))

        a3: new (x?: T) => T; // ok, fewer required params
>a3 : Symbol(I8.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 41, 37))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 42, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 41, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 41, 17))
    }

    interface I9<T> extends Base<T> {
>I9 : Symbol(I9, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 43, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 45, 17))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 45, 17))

        a3: new (x: T) => T; // ok, same T of required params
>a3 : Symbol(I9.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 45, 37))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 46, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 45, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 45, 17))
    }

    interface I10<T> extends Base<T> {
>I10 : Symbol(I10, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 47, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 49, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 49, 18))

        a3: new (x: T, y: T) => T;  // error, too many required params
>a3 : Symbol(I10.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 49, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 50, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 49, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 50, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 49, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 49, 18))
    }


    interface I11<T> extends Base<T> {
>I11 : Symbol(I11, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 51, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 54, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 54, 18))

        a4: new () => T; // ok, fewer required params
>a4 : Symbol(I11.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 54, 38))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 54, 18))
    }

    interface I12<T> extends Base<T> {
>I12 : Symbol(I12, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 56, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 58, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 58, 18))

        a4: new (x?: T, y?: T) => T; // ok, fewer required params
>a4 : Symbol(I12.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 58, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 59, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 58, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 59, 23))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 58, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 58, 18))
    }

    interface I13<T> extends Base<T> {
>I13 : Symbol(I13, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 60, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 62, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 62, 18))

        a4: new (x: T) => T; // ok, same T of required params
>a4 : Symbol(I13.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 62, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 63, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 62, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 62, 18))
    }

    interface I14<T> extends Base<T> {
>I14 : Symbol(I14, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 64, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 66, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 66, 18))

        a4: new (x: T, y: T) => T;  // ok, same number of params
>a4 : Symbol(I14.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 66, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 67, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 66, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 67, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 66, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 66, 18))
    }


    interface I15<T> extends Base<T> {
>I15 : Symbol(I15, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 68, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 71, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 71, 18))

        a5: new () => T; // ok, fewer required params
>a5 : Symbol(I15.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 71, 38))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 71, 18))
    }

    interface I16<T> extends Base<T> {
>I16 : Symbol(I16, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 73, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 75, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 75, 18))

        a5: new (x?: T, y?: T) => T; // ok, fewer required params
>a5 : Symbol(I16.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 75, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 76, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 75, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 76, 23))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 75, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 75, 18))
    }

    interface I17<T> extends Base<T> {
>I17 : Symbol(I17, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 77, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 79, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 79, 18))

        a5: new (x: T) => T; // ok, all present params match
>a5 : Symbol(I17.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 79, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 80, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 79, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 79, 18))
    }

    interface I18<T> extends Base<T> {
>I18 : Symbol(I18, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 81, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 83, 18))
>Base : Symbol(Base, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 2, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 83, 18))

        a5: new (x: T, y: T) => T;  // ok, same number of params
>a5 : Symbol(I18.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 83, 38))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 84, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 83, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 84, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 83, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 83, 18))
    }
}

namespace GenericSignaturesInvalid {
>GenericSignaturesInvalid : Symbol(GenericSignaturesInvalid, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 86, 1))

    // all of these are errors
    interface Base2 {
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a: new <T>() => T;
>a : Symbol(Base2.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 91, 21))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 92, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 92, 16))

        a2: new <T>(x?: T) => T;
>a2 : Symbol(Base2.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 92, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 93, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 93, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 93, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 93, 17))

        a3: new <T>(x: T) => T;
>a3 : Symbol(Base2.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 93, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 94, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 94, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 94, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 94, 17))

        a4: new <T>(x: T, y?: T) => T;
>a4 : Symbol(Base2.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 94, 31))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 25))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 17))

        a5: new <T>(x?: T, y?: T) => T;
>a5 : Symbol(Base2.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 95, 38))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 96, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 96, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 96, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 96, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 96, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 96, 17))
    }

    interface I1<T> extends Base2 {
>I1 : Symbol(I1, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 97, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 99, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a: new () => T; 
>a : Symbol(I1.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 99, 35))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 99, 17))
    }

    interface I2<T> extends Base2 {
>I2 : Symbol(I2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 101, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 103, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a: new (x?: T) => T;
>a : Symbol(I2.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 103, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 104, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 103, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 103, 17))
    }

    interface I3<T> extends Base2 {
>I3 : Symbol(I3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 105, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 107, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a: new (x: T) => T; 
>a : Symbol(I3.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 107, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 108, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 107, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 107, 17))
    }


    interface I4<T> extends Base2 {
>I4 : Symbol(I4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 109, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 112, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a2: new () => T; 
>a2 : Symbol(I4.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 112, 35))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 112, 17))
    }

    interface I5<T> extends Base2 {
>I5 : Symbol(I5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 114, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 116, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a2: new (x?: T) => T
>a2 : Symbol(I5.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 116, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 117, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 116, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 116, 17))
    }

    interface I6<T> extends Base2 {
>I6 : Symbol(I6, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 118, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 120, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a2: new (x: T) => T;
>a2 : Symbol(I6.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 120, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 121, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 120, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 120, 17))
    }


    interface I7<T> extends Base2 {
>I7 : Symbol(I7, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 122, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 125, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a3: new () => T;
>a3 : Symbol(I7.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 125, 35))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 125, 17))
    }

    interface I8<T> extends Base2 {
>I8 : Symbol(I8, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 127, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 129, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a3: new (x?: T) => T; 
>a3 : Symbol(I8.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 129, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 130, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 129, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 129, 17))
    }

    interface I9<T> extends Base2 {
>I9 : Symbol(I9, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 131, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 133, 17))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a3: new (x: T) => T; 
>a3 : Symbol(I9.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 133, 35))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 134, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 133, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 133, 17))
    }

    interface I10<T> extends Base2 {
>I10 : Symbol(I10, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 135, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 137, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a3: new (x: T, y: T) => T;  
>a3 : Symbol(I10.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 137, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 138, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 137, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 138, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 137, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 137, 18))
    }


    interface I11<T> extends Base2 {
>I11 : Symbol(I11, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 139, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 142, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a4: new () => T; 
>a4 : Symbol(I11.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 142, 36))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 142, 18))
    }

    interface I12<T> extends Base2 {
>I12 : Symbol(I12, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 144, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 146, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a4: new (x?: T, y?: T) => T; 
>a4 : Symbol(I12.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 146, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 147, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 146, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 147, 23))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 146, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 146, 18))
    }

    interface I13<T> extends Base2 {
>I13 : Symbol(I13, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 148, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 150, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a4: new (x: T) => T; 
>a4 : Symbol(I13.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 150, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 151, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 150, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 150, 18))
    }

    interface I14<T> extends Base2 {
>I14 : Symbol(I14, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 152, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 154, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a4: new (x: T, y: T) => T; 
>a4 : Symbol(I14.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 154, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 155, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 154, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 155, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 154, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 154, 18))
    }


    interface I15<T> extends Base2 {
>I15 : Symbol(I15, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 156, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 159, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a5: new () => T; 
>a5 : Symbol(I15.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 159, 36))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 159, 18))
    }

    interface I16<T> extends Base2 {
>I16 : Symbol(I16, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 161, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 163, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a5: new (x?: T, y?: T) => T; 
>a5 : Symbol(I16.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 163, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 164, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 163, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 164, 23))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 163, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 163, 18))
    }

    interface I17<T> extends Base2 {
>I17 : Symbol(I17, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 165, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 167, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a5: new (x: T) => T;
>a5 : Symbol(I17.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 167, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 168, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 167, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 167, 18))
    }

    interface I18<T> extends Base2 {
>I18 : Symbol(I18, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 169, 5))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 171, 18))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 88, 36))

        a5: new (x: T, y: T) => T; 
>a5 : Symbol(I18.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 171, 36))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 172, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 171, 18))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 172, 22))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 171, 18))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 171, 18))
    }
}

namespace GenericSignaturesValid {
>GenericSignaturesValid : Symbol(GenericSignaturesValid, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 174, 1))

    interface Base2 {
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a: new <T>() => T;
>a : Symbol(Base2.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 178, 21))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 179, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 179, 16))

        a2: new <T>(x?: T) => T;
>a2 : Symbol(Base2.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 179, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 180, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 180, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 180, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 180, 17))

        a3: new <T>(x: T) => T;
>a3 : Symbol(Base2.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 180, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 181, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 181, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 181, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 181, 17))

        a4: new <T>(x: T, y?: T) => T;
>a4 : Symbol(Base2.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 181, 31))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 25))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 17))

        a5: new <T>(x?: T, y?: T) => T;
>a5 : Symbol(Base2.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 182, 38))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 183, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 183, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 183, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 183, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 183, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 183, 17))
    }

    // BUG 833350
    interface I1 extends Base2 {
>I1 : Symbol(I1, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 184, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a: new <T>() => T; // ok, same number of required params
>a : Symbol(I1.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 187, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 188, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 188, 16))
    }

    interface I2 extends Base2 {
>I2 : Symbol(I2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 189, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a: new <T>(x?: T) => T; // error, not identical and contextual signature instatiation can't make inference from T to T
>a : Symbol(I2.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 191, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 192, 16))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 192, 19))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 192, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 192, 16))
    }

    interface I3 extends Base2 {
>I3 : Symbol(I3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 193, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a: new <T>(x: T) => T; // error, not identical and contextual signature instatiation can't make inference from T to T
>a : Symbol(I3.a, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 195, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 196, 16))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 196, 19))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 196, 16))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 196, 16))
    }


    interface I4 extends Base2 {
>I4 : Symbol(I4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 197, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a2: new <T>() => T; // error, not identical and contextual signature instatiation can't make inference from T to T
>a2 : Symbol(I4.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 200, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 201, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 201, 17))
    }

    interface I5 extends Base2 {
>I5 : Symbol(I5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 202, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a2: new <T>(x?: T) => T; // ok, identical
>a2 : Symbol(I5.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 204, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 205, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 205, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 205, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 205, 17))
    }

    interface I6 extends Base2 {
>I6 : Symbol(I6, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 206, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a2: new <T>(x: T) => T; // ok, same number of params
>a2 : Symbol(I6.a2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 208, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 209, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 209, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 209, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 209, 17))
    }


    interface I7 extends Base2 {
>I7 : Symbol(I7, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 210, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a3: new <T>() => T; // ok, fewer required params
>a3 : Symbol(I7.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 213, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 214, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 214, 17))
    }

    interface I8 extends Base2 {
>I8 : Symbol(I8, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 215, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a3: new <T>(x?: T) => T; // error, no inferences for T so {} not assignable to {} in return type
>a3 : Symbol(I8.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 217, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 218, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 218, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 218, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 218, 17))
    }

    interface I9 extends Base2 {
>I9 : Symbol(I9, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 219, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a3: new <T>(x: T) => T; // ok, identical, same number of required params
>a3 : Symbol(I9.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 221, 32))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 222, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 222, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 222, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 222, 17))
    }

    interface I10 extends Base2 {
>I10 : Symbol(I10, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 223, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a3: new <T>(x: T, y: T) => T;  // error, too many required params
>a3 : Symbol(I10.a3, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 225, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 226, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 226, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 226, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 226, 25))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 226, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 226, 17))
    }


    interface I11 extends Base2 {
>I11 : Symbol(I11, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 227, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a4: new <T>() => T; // error, not identical and contextual signature instatiation can't make inference from T to T
>a4 : Symbol(I11.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 230, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 231, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 231, 17))
    }

    interface I12 extends Base2 {
>I12 : Symbol(I12, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 232, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a4: new <T>(x?: T, y?: T) => T; // ok, fewer required params
>a4 : Symbol(I12.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 234, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 235, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 235, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 235, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 235, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 235, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 235, 17))
    }

    interface I13 extends Base2 {
>I13 : Symbol(I13, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 236, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a4: new <T>(x: T) => T; // ok, same T of required params
>a4 : Symbol(I13.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 238, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 239, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 239, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 239, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 239, 17))
    }

    interface I14 extends Base2 {
>I14 : Symbol(I14, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 240, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a4: new <T>(x: T, y: T) => T;  // ok, same number of params
>a4 : Symbol(I14.a4, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 242, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 243, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 243, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 243, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 243, 25))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 243, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 243, 17))
    }


    interface I15 extends Base2 {
>I15 : Symbol(I15, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 244, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a5: new <T>() => T; // error, not identical and contextual signature instatiation can't make inference from T to T
>a5 : Symbol(I15.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 247, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 248, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 248, 17))
    }

    interface I16 extends Base2 {
>I16 : Symbol(I16, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 249, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a5: new <T>(x?: T, y?: T) => T; // ok, fewer required params
>a5 : Symbol(I16.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 251, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 252, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 252, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 252, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 252, 26))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 252, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 252, 17))
    }

    interface I17 extends Base2 {
>I17 : Symbol(I17, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 253, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a5: new <T>(x: T) => T; // ok, all present params match
>a5 : Symbol(I17.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 255, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 256, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 256, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 256, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 256, 17))
    }

    interface I18 extends Base2 {
>I18 : Symbol(I18, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 257, 5))
>Base2 : Symbol(Base2, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 176, 34))

        a5: new <T>(x: T, y: T) => T;  // ok, same number of params
>a5 : Symbol(I18.a5, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 259, 33))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 260, 17))
>x : Symbol(x, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 260, 20))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 260, 17))
>y : Symbol(y, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 260, 25))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 260, 17))
>T : Symbol(T, Decl(subtypingWithGenericConstructSignaturesWithOptionalParameters.ts, 260, 17))
    }
}
