subtypingWithNumericIndexer.ts(19,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
subtypingWithNumericIndexer.ts(32,11): error TS2415: Class 'B3<T>' incorrectly extends base class 'A<T>'.
  'number' index signatures are incompatible.
    Type 'Derived' is not assignable to type 'T'.
      'Derived' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Base'.
subtypingWithNumericIndexer.ts(36,11): error TS2415: Class 'B4<T>' incorrectly extends base class 'A<T>'.
  'number' index signatures are incompatible.
    Type 'Derived2' is not assignable to type 'T'.
      'Derived2' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Base'.


==== subtypingWithNumericIndexer.ts (3 errors) ====
    // Derived type indexer must be subtype of base type indexer
    
    interface Base { foo: string; }
    interface Derived extends Base { bar: string; }
    interface Derived2 extends Derived { baz: string; }
    
    class A {
        [x: number]: Base;
    }
    
    class B extends A {
        [x: number]: Derived; // ok
    }
    
    class B2 extends A {
        [x: number]: Derived2; // ok
    }
    
    module Generics {
           ~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        class A<T extends Base> {
            [x: number]: T;
        }
    
        class B extends A<Base> {
            [x: number]: Derived; // ok
        }
    
        class B2 extends A<Base> {
            [x: number]: Derived2; // ok
        }
    
        class B3<T extends Base> extends A<T> {
              ~~
!!! error TS2415: Class 'B3<T>' incorrectly extends base class 'A<T>'.
!!! error TS2415:   'number' index signatures are incompatible.
!!! error TS2415:     Type 'Derived' is not assignable to type 'T'.
!!! error TS2415:       'Derived' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Base'.
            [x: number]: Derived; // error, BUG?
        }
    
        class B4<T extends Base> extends A<T> {
              ~~
!!! error TS2415: Class 'B4<T>' incorrectly extends base class 'A<T>'.
!!! error TS2415:   'number' index signatures are incompatible.
!!! error TS2415:     Type 'Derived2' is not assignable to type 'T'.
!!! error TS2415:       'Derived2' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Base'.
            [x: number]: Derived2; // error, BUG?
        }
    }