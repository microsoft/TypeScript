subtypingWithObjectMembers.ts(14,5): error TS2416: Property 'bar' in type 'B' is not assignable to the same property in base type 'A'.
  Type 'string' is not assignable to type 'Base'.
subtypingWithObjectMembers.ts(24,5): error TS2416: Property '2' in type 'B2' is not assignable to the same property in base type 'A2'.
  Type 'string' is not assignable to type 'Base'.
subtypingWithObjectMembers.ts(34,5): error TS2416: Property ''2.0'' in type 'B3' is not assignable to the same property in base type 'A3'.
  Type 'string' is not assignable to type 'Base'.
subtypingWithObjectMembers.ts(37,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
subtypingWithObjectMembers.ts(45,9): error TS2416: Property 'bar' in type 'B' is not assignable to the same property in base type 'A'.
  Type 'string' is not assignable to type 'Base'.
subtypingWithObjectMembers.ts(55,9): error TS2416: Property '2' in type 'B2' is not assignable to the same property in base type 'A2'.
  Type 'string' is not assignable to type 'Base'.
subtypingWithObjectMembers.ts(65,9): error TS2416: Property ''2.0'' in type 'B3' is not assignable to the same property in base type 'A3'.
  Type 'string' is not assignable to type 'Base'.


==== subtypingWithObjectMembers.ts (7 errors) ====
    class Base { foo: string; }
    class Derived extends Base { bar: string; }
    class Derived2 extends Derived { baz: string; }
    
    // N and M have the same name, same accessibility, same optionality, and N is a subtype of M
    // foo properties are valid, bar properties cause errors in the derived class declarations
    class A {
        foo: Base;
        bar: Base;
    }
    
    class B extends A {
        foo: Derived; // ok
        bar: string; // error
        ~~~
!!! error TS2416: Property 'bar' in type 'B' is not assignable to the same property in base type 'A'.
!!! error TS2416:   Type 'string' is not assignable to type 'Base'.
    }
    
    class A2 {
        1: Base; 
        2.0: Base;
    }
    
    class B2 extends A2 {
        1: Derived; // ok
        2: string; // error
        ~
!!! error TS2416: Property '2' in type 'B2' is not assignable to the same property in base type 'A2'.
!!! error TS2416:   Type 'string' is not assignable to type 'Base'.
    }
    
    class A3 {
        '1': Base;
        '2.0': Base;
    }
    
    class B3 extends A3 {
        '1': Derived; // ok
        '2.0': string; // error
        ~~~~~
!!! error TS2416: Property ''2.0'' in type 'B3' is not assignable to the same property in base type 'A3'.
!!! error TS2416:   Type 'string' is not assignable to type 'Base'.
    }
    
    module TwoLevels {
           ~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        class A {
            foo: Base;
            bar: Base;
        }
    
        class B extends A {
            foo: Derived2; // ok
            bar: string; // error
            ~~~
!!! error TS2416: Property 'bar' in type 'B' is not assignable to the same property in base type 'A'.
!!! error TS2416:   Type 'string' is not assignable to type 'Base'.
        }
    
        class A2 {
            1: Base;
            2.0: Base;
        }
    
        class B2 extends A2 {
            1: Derived2; // ok
            2: string; // error
            ~
!!! error TS2416: Property '2' in type 'B2' is not assignable to the same property in base type 'A2'.
!!! error TS2416:   Type 'string' is not assignable to type 'Base'.
        }
    
        class A3 {
            '1': Base;
            '2.0': Base;
        }
    
        class B3 extends A3 {
            '1': Derived2; // ok
            '2.0': string; // error
            ~~~~~
!!! error TS2416: Property ''2.0'' in type 'B3' is not assignable to the same property in base type 'A3'.
!!! error TS2416:   Type 'string' is not assignable to type 'Base'.
        }
    }