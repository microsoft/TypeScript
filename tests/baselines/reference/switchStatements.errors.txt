switchStatements.ts(1,8): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
switchStatements.ts(35,20): error TS2353: Object literal may only specify known properties, and 'name' does not exist in type 'C'.


==== switchStatements.ts (2 errors) ====
    module M {
           ~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
        export function fn(x: number) {
            return '';
        }
    }
    
    var x: any;
    switch (x) {
        case '':
        case 12:
        case true:
        case null:
        case undefined:
        case new Date(12):
        case new Object():
        case /[a-z]/:
        case[]:
        case {}:
        case { id: 12 }:
        case['a']:
        case typeof x:
        case typeof M:
        case M.fn(1):
        case <T>(x: number) => '':
        case (<T>(x: number) => '')(2):
        default:
    }
    
    // basic assignable check, rest covered in tests for 'assignment compatibility'
    class C { id: number; }
    class D extends C { name: string }
    
    switch (new C()) {
        case new D():
        case { id: 12, name: '' }:
                       ~~~~
!!! error TS2353: Object literal may only specify known properties, and 'name' does not exist in type 'C'.
        case new C():
    }
    
    switch ('') { }
    switch (12) { }
    switch (true) { }
    switch (null) { }
    switch (undefined) { }
    switch (new Date(12)) { }
    switch (new Object()) { }
    switch (/[a-z]/) { }
    switch ([]) { }
    switch ({}) { }
    switch ({ id: 12 }) { }
    switch (['a']) { }
    switch (<T>(x: number) => '') { }
    switch ((<T>(x: T) => '')(1)) { }
    
    
    