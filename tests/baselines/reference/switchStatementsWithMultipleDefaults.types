//// [tests/cases/compiler/switchStatementsWithMultipleDefaults.ts] ////

=== switchStatementsWithMultipleDefaults.ts ===
var x = 10;
>x : number
>  : ^^^^^^
>10 : 10
>   : ^^

switch (x) {
>x : number
>  : ^^^^^^

    case 1:
>1 : 1
>  : ^

    case 2:
>2 : 2
>  : ^

    default:    // No issues.
        break;
    default:    // Error; second 'default' clause.
    default:    // Error; third 'default' clause.
    case 3:
>3 : 3
>  : ^

        x *= x;
>x *= x : number
>       : ^^^^^^
>x : number
>  : ^^^^^^
>x : number
>  : ^^^^^^
}

switch (x) {
>x : number
>  : ^^^^^^

    default:    // No issues.
        break;
    case 100:
>100 : 100
>    : ^^^

        switch (x * x) {
>x * x : number
>      : ^^^^^^
>x : 100
>  : ^^^
>x : 100
>  : ^^^

            default:    // No issues.
            default:    // Error; second 'default' clause.
                break;
            case 10000:
>10000 : 10000
>      : ^^^^^

                x /= x;
>x /= x : number
>       : ^^^^^^
>x : number
>  : ^^^^^^
>x : 100
>  : ^^^

            default:    // Error, third 'default' clause
            def\u0061ult: // Error, fourth 'default' clause.
            // Errors on fifth-seventh
            default: return;
            default: default:
        }
}
