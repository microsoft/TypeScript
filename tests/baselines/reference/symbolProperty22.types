//// [tests/cases/conformance/es6/Symbols/symbolProperty22.ts] ////

=== symbolProperty22.ts ===
interface I<T, U> {
    [Symbol.unscopables](x: T): U;
>[Symbol.unscopables] : (x: T) => U
>                     : ^ ^^ ^^^^^ 
>Symbol.unscopables : unique symbol
>                   : ^^^^^^^^^^^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^
>unscopables : unique symbol
>            : ^^^^^^^^^^^^^
>x : T
>  : ^
}

declare function foo<T, U>(p1: T, p2: I<T, U>): U;
>foo : <T, U>(p1: T, p2: I<T, U>) => U
>    : ^ ^^ ^^  ^^ ^^  ^^       ^^^^^ 
>p1 : T
>   : ^
>p2 : I<T, U>
>   : ^^^^^^^

foo("", { [Symbol.unscopables]: s => s.length });
>foo("", { [Symbol.unscopables]: s => s.length }) : number
>                                                 : ^^^^^^
>foo : <T, U>(p1: T, p2: I<T, U>) => U
>    : ^ ^^ ^^  ^^ ^^  ^^       ^^^^^ 
>"" : ""
>   : ^^
>{ [Symbol.unscopables]: s => s.length } : { [Symbol.unscopables]: (s: string) => number; }
>                                        : ^^^^^^^^^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^
>[Symbol.unscopables] : (s: string) => number
>                     : ^ ^^^^^^^^^^^^^^^^^^^
>Symbol.unscopables : unique symbol
>                   : ^^^^^^^^^^^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^
>unscopables : unique symbol
>            : ^^^^^^^^^^^^^
>s => s.length : (s: string) => number
>              : ^ ^^^^^^^^^^^^^^^^^^^
>s : string
>  : ^^^^^^
>s.length : number
>         : ^^^^^^
>s : string
>  : ^^^^^^
>length : number
>       : ^^^^^^

