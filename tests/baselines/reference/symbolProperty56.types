//// [tests/cases/conformance/es6/Symbols/symbolProperty56.ts] ////

=== symbolProperty56.ts ===
var obj = {
>obj : { [Symbol.iterator]: number; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{    [Symbol.iterator]: 0} : { [Symbol.iterator]: number; }
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    [Symbol.iterator]: 0
>[Symbol.iterator] : number
>                  : ^^^^^^
>Symbol.iterator : unique symbol
>                : ^^^^^^^^^^^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^
>iterator : unique symbol
>         : ^^^^^^^^^^^^^
>0 : 0
>  : ^

};

module M {
>M : typeof M
>  : ^^^^^^^^

    var Symbol: {};
>Symbol : {}
>       : ^^

    // The following should be of type 'any'. This is because even though obj has a property keyed by Symbol.iterator,
    // the key passed in here is the *wrong* Symbol.iterator. It is not the iterator property of the global Symbol.
    obj[Symbol["iterator"]];
>obj[Symbol["iterator"]] : error
>obj : { [Symbol.iterator]: number; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>Symbol["iterator"] : error
>Symbol : {}
>       : ^^
>"iterator" : "iterator"
>           : ^^^^^^^^^^
}
