//// [tests/cases/conformance/es6/templates/taggedTemplateStringsWithOverloadResolution3.ts] ////

=== taggedTemplateStringsWithOverloadResolution3.ts ===
// Ambiguous call picks the first overload in declaration order
function fn1(strs: TemplateStringsArray, s: string): string;
>fn1 : Symbol(fn1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 0, 0), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 60), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 60))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 13))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 40))

function fn1(strs: TemplateStringsArray, n: number): number;
>fn1 : Symbol(fn1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 0, 0), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 60), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 60))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 13))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 40))

function fn1() { return null; }
>fn1 : Symbol(fn1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 0, 0), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 60), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 60))

var s: string = fn1 `${ undefined }`;
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 5, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 32, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 33, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 38, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 39, 3))
>fn1 : Symbol(fn1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 0, 0), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 60), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 60))
>undefined : Symbol(undefined)

// No candidate overloads found
fn1 `${ {} }`; // Error
>fn1 : Symbol(fn1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 0, 0), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 1, 60), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 2, 60))

function fn2(strs: TemplateStringsArray, s: string, n: number): number;
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 13))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 40))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 51))

function fn2<T>(strs: TemplateStringsArray, n: number, t: T): T;
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 13))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 16))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 43))
>t : Symbol(t, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 54))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 13))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 13))

function fn2() { return undefined; }
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))
>undefined : Symbol(undefined)

var d1: Date = fn2 `${ 0 }${ undefined }`; // contextually typed
>d1 : Symbol(d1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 14, 3))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --) ... and 1 more)
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))
>undefined : Symbol(undefined)

var d2       = fn2 `${ 0 }${ undefined }`; // any
>d2 : Symbol(d2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 15, 3))
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))
>undefined : Symbol(undefined)

d1.foo(); // error
>d1 : Symbol(d1, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 14, 3))

d2();     // no error (typed as any)
>d2 : Symbol(d2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 15, 3))

// Generic and non-generic overload where generic overload is the only candidate
fn2 `${ 0 }${ '' }`; // OK
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))

// Generic and non-generic overload where non-generic overload is the only candidate
fn2 `${ '' }${ 0 }`; // OK
>fn2 : Symbol(fn2, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 8, 14), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 10, 71), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 11, 64))

// Generic overloads with differing arity
function fn3<T>(strs: TemplateStringsArray, n: T): string;
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 13))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 16))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 43))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 13))

function fn3<T, U>(strs: TemplateStringsArray, s: string, t: T, u: U): U;
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 13))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 15))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 19))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 46))
>t : Symbol(t, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 57))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 13))
>u : Symbol(u, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 63))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 15))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 15))

function fn3<T, U, V>(strs: TemplateStringsArray, v: V, u: U, t: T): number;
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 13))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 15))
>V : Symbol(V, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 18))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 22))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>v : Symbol(v, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 49))
>V : Symbol(V, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 18))
>u : Symbol(u, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 55))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 15))
>t : Symbol(t, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 61))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 13))

function fn3() { return null; }
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

var s = fn3 `${ 3 }`;
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 5, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 32, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 33, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 38, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 39, 3))
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

var s = fn3 `${'' }${ 3 }${ '' }`;
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 5, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 32, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 33, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 38, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 39, 3))
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

var n = fn3 `${ 5 }${ 5 }${ 5 }`;
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 34, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 35, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 40, 3))
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

var n: number;
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 34, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 35, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 40, 3))

// Generic overloads with differing arity tagging with arguments matching each overload type parameter count
var s = fn3 `${ 4 }`
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 5, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 32, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 33, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 38, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 39, 3))
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

var s = fn3 `${ '' }${ '' }${ '' }`;
>s : Symbol(s, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 5, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 32, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 33, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 38, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 39, 3))
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

var n = fn3 `${ '' }${ '' }${ 3 }`;
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 34, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 35, 3), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 40, 3))
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

// Generic overloads with differing arity tagging with argument count that doesn't match any overload
fn3 ``; // Error
>fn3 : Symbol(fn3, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 24, 20), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 27, 58), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 28, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 29, 76))

// Generic overloads with constraints
function fn4<T extends string, U extends number>(strs: TemplateStringsArray, n: T, m: U);
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 13))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 30))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 49))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 76))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 13))
>m : Symbol(m, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 82))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 30))

function fn4<T extends number, U extends string>(strs: TemplateStringsArray, n: T, m: U);
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 13))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 30))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 49))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 76))
>T : Symbol(T, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 13))
>m : Symbol(m, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 82))
>U : Symbol(U, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 30))

function fn4(strs: TemplateStringsArray)
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 13))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))

function fn4() { }
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

// Generic overloads with constraints tagged with types that satisfy the constraints
fn4 `${ '' }${ 3  }`;
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

fn4 `${ 3  }${ '' }`;
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

fn4 `${ 3  }${ undefined }`;
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))
>undefined : Symbol(undefined)

fn4 `${ '' }${ null }`;
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

// Generic overloads with constraints called with type arguments that do not satisfy the constraints
fn4 `${ null }${ null }`; // Error
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

// Generic overloads with constraints called without type arguments but with types that do not satisfy the constraints
fn4 `${ true }${ null }`;
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

fn4 `${ null }${ true }`;
>fn4 : Symbol(fn4, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 43, 7), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 46, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 47, 89), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 48, 40))

// Non - generic overloads where contextual typing of function arguments has errors
function fn5(strs: TemplateStringsArray, f: (n: string) => void): string;
>fn5 : Symbol(fn5, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 62, 25), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 73))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 13))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>f : Symbol(f, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 40))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 45))

function fn5(strs: TemplateStringsArray, f: (n: number) => void): number;
>fn5 : Symbol(fn5, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 62, 25), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 73))
>strs : Symbol(strs, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 13))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>f : Symbol(f, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 40))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 45))

function fn5() { return undefined; }
>fn5 : Symbol(fn5, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 62, 25), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 73))
>undefined : Symbol(undefined)

fn5 `${ (n) => n.toFixed() }`; // will error; 'n' should have type 'string'.
>fn5 : Symbol(fn5, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 62, 25), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 73))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 68, 9))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 68, 9))

fn5 `${ (n) => n.substr(0) }`;
>fn5 : Symbol(fn5, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 62, 25), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 65, 73), Decl(taggedTemplateStringsWithOverloadResolution3.ts, 66, 73))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 69, 9))
>n.substr : Symbol(String.substr, Decl(lib.es5.d.ts, --, --))
>n : Symbol(n, Decl(taggedTemplateStringsWithOverloadResolution3.ts, 69, 9))
>substr : Symbol(String.substr, Decl(lib.es5.d.ts, --, --))


