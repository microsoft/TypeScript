//// [tests/cases/conformance/types/literal/templateLiteralTypes9.ts] ////

=== templateLiteralTypes9.ts ===
type Target =
>Target : Symbol(Target, Decl(templateLiteralTypes9.ts, 0, 0))

  | { type: `${string}_FOO`; cb: (arg: number) => void }
>type : Symbol(type, Decl(templateLiteralTypes9.ts, 1, 5))
>cb : Symbol(cb, Decl(templateLiteralTypes9.ts, 1, 28))
>arg : Symbol(arg, Decl(templateLiteralTypes9.ts, 1, 34))

  | { type: `${string}_BAR`; cb: (arg: string) => void };
>type : Symbol(type, Decl(templateLiteralTypes9.ts, 2, 5))
>cb : Symbol(cb, Decl(templateLiteralTypes9.ts, 2, 28))
>arg : Symbol(arg, Decl(templateLiteralTypes9.ts, 2, 34))

declare const str: string;
>str : Symbol(str, Decl(templateLiteralTypes9.ts, 4, 13))

const obj1: Target = {
>obj1 : Symbol(obj1, Decl(templateLiteralTypes9.ts, 6, 5))
>Target : Symbol(Target, Decl(templateLiteralTypes9.ts, 0, 0))

  type: `${str}_FOO`,
>type : Symbol(type, Decl(templateLiteralTypes9.ts, 6, 22))
>str : Symbol(str, Decl(templateLiteralTypes9.ts, 4, 13))

  cb: (arg) => {},
>cb : Symbol(cb, Decl(templateLiteralTypes9.ts, 7, 21))
>arg : Symbol(arg, Decl(templateLiteralTypes9.ts, 8, 7))

};

const obj2: Target = {
>obj2 : Symbol(obj2, Decl(templateLiteralTypes9.ts, 11, 5))
>Target : Symbol(Target, Decl(templateLiteralTypes9.ts, 0, 0))

  type: `${str}_BAR`,
>type : Symbol(type, Decl(templateLiteralTypes9.ts, 11, 22))
>str : Symbol(str, Decl(templateLiteralTypes9.ts, 4, 13))

  cb: (arg) => {},
>cb : Symbol(cb, Decl(templateLiteralTypes9.ts, 12, 21))
>arg : Symbol(arg, Decl(templateLiteralTypes9.ts, 13, 7))

};

// error
const obj3: Target = {
>obj3 : Symbol(obj3, Decl(templateLiteralTypes9.ts, 17, 5))
>Target : Symbol(Target, Decl(templateLiteralTypes9.ts, 0, 0))

  type: `${str}_BAZ`,
>type : Symbol(type, Decl(templateLiteralTypes9.ts, 17, 22))
>str : Symbol(str, Decl(templateLiteralTypes9.ts, 4, 13))

  cb: (arg) => {},
>cb : Symbol(cb, Decl(templateLiteralTypes9.ts, 18, 21))
>arg : Symbol(arg, Decl(templateLiteralTypes9.ts, 19, 7))

};

