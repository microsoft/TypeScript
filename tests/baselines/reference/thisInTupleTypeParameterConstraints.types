//// [tests/cases/compiler/thisInTupleTypeParameterConstraints.ts] ////

=== thisInTupleTypeParameterConstraints.ts ===
/// <reference no-default-lib="true"/>

interface Boolean {}
interface IArguments {}
interface Function {}
interface Number {}
interface RegExp {}
interface Object {}
interface String {}

interface Array<T> {
    // 4 methods will run out of memory if this-types are not instantiated
    // correctly for tuple types that are type parameter constraints
    map<U>(arg: this): void;
>map : <U>(arg: this) => void
>    : ^ ^^   ^^    ^^^^^    
>arg : this
>    : ^^^^

    reduceRight<U>(arg: this): void;
>reduceRight : <U>(arg: this) => void
>            : ^ ^^   ^^    ^^^^^    
>arg : this
>    : ^^^^

    reduce<U>(arg: this): void;
>reduce : <U>(arg: this) => void
>       : ^ ^^   ^^    ^^^^^    
>arg : this
>    : ^^^^

    reduce2<U>(arg: this): void;
>reduce2 : <U>(arg: this) => void
>        : ^ ^^   ^^    ^^^^^    
>arg : this
>    : ^^^^
}

declare function f<T extends [(x: number) => number]>(a: T): void;
>f : <T extends [(x: number) => number]>(a: T) => void
>  : ^ ^^^^^^^^^                       ^^ ^^ ^^^^^    
>x : number
>  : ^^^^^^
>a : T
>  : ^

let x: [(x: number) => number];
>x : [(x: number) => number]
>  : ^^ ^^      ^^^^^      ^
>x : number
>  : ^^^^^^

f(x);
>f(x) : void
>     : ^^^^
>f : <T extends [(x: number) => number]>(a: T) => void
>  : ^ ^^^^^^^^^                       ^^ ^^ ^^^^^    
>x : [(x: number) => number]
>  : ^^ ^^      ^^^^^      ^

