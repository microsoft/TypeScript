toFromHexBase64.ts(1,25): error TS2550: Property 'fromBase64' does not exist on type 'Uint8ArrayConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(2,25): error TS2550: Property 'fromBase64' does not exist on type 'Uint8ArrayConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(3,25): error TS2550: Property 'fromHex' does not exist on type 'Uint8ArrayConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(12,20): error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(13,20): error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(14,20): error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(15,20): error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
toFromHexBase64.ts(21,20): error TS2550: Property 'setFromHex' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.


==== toFromHexBase64.ts (8 errors) ====
    const arr1 = Uint8Array.fromBase64("AAAAAA==");
                            ~~~~~~~~~~
!!! error TS2550: Property 'fromBase64' does not exist on type 'Uint8ArrayConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    const arr2 = Uint8Array.fromBase64("AAAAAA", { alphabet: "base64url" });
                            ~~~~~~~~~~
!!! error TS2550: Property 'fromBase64' does not exist on type 'Uint8ArrayConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    const arr3 = Uint8Array.fromHex("000000");
                            ~~~~~~~
!!! error TS2550: Property 'fromHex' does not exist on type 'Uint8ArrayConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    
    const encodedBase64_1 = arr1.toBase64();
    const encodedBase64_2 = arr1.toBase64({ alphabet: "base64", omitPadding: undefined });
    const encodedBase64_3 = arr1.toBase64({ alphabet: "base64url", omitPadding: true });
    
    const encodedHex_1 = arr1.toHex();
    
    const target1 = new Uint8Array(10);
    const r0 = target1.setFromBase64("AAAAAA==");
                       ~~~~~~~~~~~~~
!!! error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    const r1 = target1.setFromBase64("AAAAAA==", undefined);
                       ~~~~~~~~~~~~~
!!! error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    const r2 = target1.setFromBase64("AAAAAA==", { lastChunkHandling: "strict" });
                       ~~~~~~~~~~~~~
!!! error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    const r3 = target1.setFromBase64("AAAAAA", {
                       ~~~~~~~~~~~~~
!!! error TS2550: Property 'setFromBase64' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
      alphabet: "base64url",
      lastChunkHandling: "stop-before-partial"
    });
    
    const target2 = new Uint8Array(10);
    const r4 = target2.setFromHex("000000");
                       ~~~~~~~~~~
!!! error TS2550: Property 'setFromHex' does not exist on type 'Uint8Array<ArrayBuffer>'. Do you need to change your target library? Try changing the 'lib' compiler option to 'esnext' or later.
    
    const totalWritten = r0.written + r1.written + r2.written + r3.written + r4.written;
    const totalRead = r0.read + r1.read + r2.read + r3.read + r4.read;
    