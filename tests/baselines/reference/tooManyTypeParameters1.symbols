//// [tests/cases/compiler/tooManyTypeParameters1.ts] ////

=== tooManyTypeParameters1.ts ===
function f<T>() { }
>f : Symbol(f, Decl(tooManyTypeParameters1.ts, 0, 0))
>T : Symbol(T, Decl(tooManyTypeParameters1.ts, 0, 11))

f<string, string>();
>f : Symbol(f, Decl(tooManyTypeParameters1.ts, 0, 0))

var x = <T>() => {};
>x : Symbol(x, Decl(tooManyTypeParameters1.ts, 3, 3))
>T : Symbol(T, Decl(tooManyTypeParameters1.ts, 3, 9))

x<number,number>();
>x : Symbol(x, Decl(tooManyTypeParameters1.ts, 3, 3))

class C<T> {}
>C : Symbol(C, Decl(tooManyTypeParameters1.ts, 4, 19))
>T : Symbol(T, Decl(tooManyTypeParameters1.ts, 6, 8))

var c = new C<Date,Date>();
>c : Symbol(c, Decl(tooManyTypeParameters1.ts, 7, 3))
>C : Symbol(C, Decl(tooManyTypeParameters1.ts, 4, 19))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

interface I<T> {}
>I : Symbol(I, Decl(tooManyTypeParameters1.ts, 7, 27))
>T : Symbol(T, Decl(tooManyTypeParameters1.ts, 9, 12))

var i: I<number,number>;
>i : Symbol(i, Decl(tooManyTypeParameters1.ts, 10, 3))
>I : Symbol(I, Decl(tooManyTypeParameters1.ts, 7, 27))

