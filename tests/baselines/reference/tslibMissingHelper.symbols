//// [tests/cases/compiler/tslibMissingHelper.ts] ////

=== /package1/index.ts ===
export {};
async function foo(): Promise<void> {}
>foo : Symbol(foo, Decl(index.ts, 0, 10))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

async function bar(): Promise<void> {}
>bar : Symbol(bar, Decl(index.ts, 1, 38))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

=== /package2/index.ts ===
export {};
async function foo(): Promise<void> {}
>foo : Symbol(foo, Decl(index.ts, 0, 10))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

=== /node_modules/tslib/tslib.d.ts ===
export const notAHelper: any;
>notAHelper : Symbol(notAHelper, Decl(tslib.d.ts, --, --))

