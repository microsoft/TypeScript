//// [tests/cases/compiler/tslibNotFoundDifferentModules.ts] ////

=== /package1/index.ts ===
export {};
async function foo(): Promise<void> {}
>foo : () => Promise<void>
>    : ^^^^^^             

async function bar(): Promise<void> {}
>bar : () => Promise<void>
>    : ^^^^^^             

=== /package2/index.ts ===
export {};
async function foo(): Promise<void> {}
>foo : () => Promise<void>
>    : ^^^^^^             

=== /package1/node_modules/tslib/tslib.d.ts ===
/**
 * Converts a generator function into a pseudo-async function, by treating each `yield` as an `await`.
 *
 * @param thisArg The reference to use as the `this` value in the generator function
 * @param _arguments The optional arguments array
 * @param P The optional promise constructor argument, defaults to the `Promise` property of the global object.
 * @param generator The generator function
 */
export declare function __awaiter(thisArg: any, _arguments: any, P: Function, generator: Function): any;
>__awaiter : (thisArg: any, _arguments: any, P: Function, generator: Function) => any
>          : ^       ^^   ^^          ^^   ^^ ^^        ^^         ^^        ^^^^^   
>thisArg : any
>        : ^^^
>_arguments : any
>           : ^^^
>P : Function
>  : ^^^^^^^^
>generator : Function
>          : ^^^^^^^^

