//// [tests/cases/conformance/jsx/tsxAttributeInvalidNames.tsx] ////

=== file.tsx ===
declare namespace JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(file.tsx, 0, 23))

	interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(file.tsx, 1, 22))

		test1: { "data-foo"?: string };
>test1 : Symbol(IntrinsicElements.test1, Decl(file.tsx, 2, 30))
>"data-foo" : Symbol("data-foo", Decl(file.tsx, 3, 10))

		test2: { "data-foo"?: string };
>test2 : Symbol(IntrinsicElements.test2, Decl(file.tsx, 3, 33))
>"data-foo" : Symbol("data-foo", Decl(file.tsx, 4, 10))
	}
}

// Invalid names
<test1 32data={32} />;
>test1 : Symbol(JSX.IntrinsicElements.test1, Decl(file.tsx, 2, 30))
>32 : Symbol(32, Decl(file.tsx, 9, 15))

<test2 -data={32} />;
>test2 : Symbol(JSX.IntrinsicElements.test2, Decl(file.tsx, 3, 33))

