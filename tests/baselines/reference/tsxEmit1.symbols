//// [tests/cases/conformance/jsx/tsxEmit1.tsx] ////

=== file.tsx ===
declare namespace JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(file.tsx, 0, 23))

	interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(file.tsx, 1, 22))

		[s: string]: any;
>s : Symbol(s, Decl(file.tsx, 3, 3))
	}
}

var p;
>p : Symbol(p, Decl(file.tsx, 7, 3))

var selfClosed1 = <div />;
>selfClosed1 : Symbol(selfClosed1, Decl(file.tsx, 8, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var selfClosed2 = <div x="1" />;
>selfClosed2 : Symbol(selfClosed2, Decl(file.tsx, 9, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>x : Symbol(x, Decl(file.tsx, 9, 22))

var selfClosed3 = <div x='1' />;
>selfClosed3 : Symbol(selfClosed3, Decl(file.tsx, 10, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>x : Symbol(x, Decl(file.tsx, 10, 22))

var selfClosed4 = <div x="1" y='0' />;
>selfClosed4 : Symbol(selfClosed4, Decl(file.tsx, 11, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>x : Symbol(x, Decl(file.tsx, 11, 22))
>y : Symbol(y, Decl(file.tsx, 11, 28))

var selfClosed5 = <div x={0} y='0' />;
>selfClosed5 : Symbol(selfClosed5, Decl(file.tsx, 12, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>x : Symbol(x, Decl(file.tsx, 12, 22))
>y : Symbol(y, Decl(file.tsx, 12, 28))

var selfClosed6 = <div x={"1"} y='0' />;
>selfClosed6 : Symbol(selfClosed6, Decl(file.tsx, 13, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>x : Symbol(x, Decl(file.tsx, 13, 22))
>y : Symbol(y, Decl(file.tsx, 13, 30))

var selfClosed7 = <div x={p} y='p' />;
>selfClosed7 : Symbol(selfClosed7, Decl(file.tsx, 14, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>x : Symbol(x, Decl(file.tsx, 14, 22))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>y : Symbol(y, Decl(file.tsx, 14, 28))

var openClosed1 = <div></div>;
>openClosed1 : Symbol(openClosed1, Decl(file.tsx, 16, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var openClosed2 = <div n='m'>foo</div>;
>openClosed2 : Symbol(openClosed2, Decl(file.tsx, 17, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>n : Symbol(n, Decl(file.tsx, 17, 22))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var openClosed3 = <div n='m'>{p}</div>;
>openClosed3 : Symbol(openClosed3, Decl(file.tsx, 18, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>n : Symbol(n, Decl(file.tsx, 18, 22))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var openClosed4 = <div n='m'>{p < p}</div>;
>openClosed4 : Symbol(openClosed4, Decl(file.tsx, 19, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>n : Symbol(n, Decl(file.tsx, 19, 22))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var openClosed5 = <div n='m'>{p > p}</div>;
>openClosed5 : Symbol(openClosed5, Decl(file.tsx, 20, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>n : Symbol(n, Decl(file.tsx, 20, 22))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

class SomeClass {
>SomeClass : Symbol(SomeClass, Decl(file.tsx, 20, 43))

	f() {
>f : Symbol(SomeClass.f, Decl(file.tsx, 22, 17))

		var rewrites1 = <div>{() => this}</div>;
>rewrites1 : Symbol(rewrites1, Decl(file.tsx, 24, 5))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>this : Symbol(SomeClass, Decl(file.tsx, 20, 43))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

		var rewrites2 = <div>{[p, ...p, p]}</div>;
>rewrites2 : Symbol(rewrites2, Decl(file.tsx, 25, 5))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

		var rewrites3 = <div>{{p}}</div>;
>rewrites3 : Symbol(rewrites3, Decl(file.tsx, 26, 5))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>p : Symbol(p, Decl(file.tsx, 26, 25))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

		var rewrites4 = <div a={() => this}></div>;
>rewrites4 : Symbol(rewrites4, Decl(file.tsx, 28, 5))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>a : Symbol(a, Decl(file.tsx, 28, 22))
>this : Symbol(SomeClass, Decl(file.tsx, 20, 43))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

		var rewrites5 = <div a={[p, ...p, p]}></div>;
>rewrites5 : Symbol(rewrites5, Decl(file.tsx, 29, 5))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>a : Symbol(a, Decl(file.tsx, 29, 22))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

		var rewrites6 = <div a={{p}}></div>;
>rewrites6 : Symbol(rewrites6, Decl(file.tsx, 30, 5))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>a : Symbol(a, Decl(file.tsx, 30, 22))
>p : Symbol(p, Decl(file.tsx, 30, 27))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
	}
}

var whitespace1 = <div>      </div>;
>whitespace1 : Symbol(whitespace1, Decl(file.tsx, 34, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var whitespace2 = <div>  {p}    </div>;
>whitespace2 : Symbol(whitespace2, Decl(file.tsx, 35, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>p : Symbol(p, Decl(file.tsx, 7, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

var whitespace3 = <div>  
>whitespace3 : Symbol(whitespace3, Decl(file.tsx, 36, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

      {p}    
>p : Symbol(p, Decl(file.tsx, 7, 3))

      </div>;
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

