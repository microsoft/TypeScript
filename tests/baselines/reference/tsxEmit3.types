//// [tests/cases/conformance/jsx/tsxEmit3.tsx] ////

=== file.tsx ===
declare namespace JSX {
	interface Element { }
	interface IntrinsicElements { }
}

namespace M {
>M : typeof M
>  : ^^^^^^^^

	export class Foo { constructor() { } }
>Foo : Foo
>    : ^^^

	export namespace S {
>S : typeof S
>  : ^^^^^^^^

		export class Bar { }
>Bar : Bar
>    : ^^^

		// Emit Foo
		// Foo, <Foo />;
	}
}

namespace M {
>M : typeof M
>  : ^^^^^^^^

	// Emit M.Foo
	Foo, <Foo />;
>Foo, <Foo /> : JSX.Element
>             : ^^^^^^^^^^^
>Foo : typeof Foo
>    : ^^^^^^^^^^
><Foo /> : JSX.Element
>        : ^^^^^^^^^^^
>Foo : typeof Foo
>    : ^^^^^^^^^^

	export namespace S {
>S : typeof S
>  : ^^^^^^^^

		// Emit M.Foo
		Foo, <Foo />;
>Foo, <Foo /> : JSX.Element
>             : ^^^^^^^^^^^
>Foo : typeof Foo
>    : ^^^^^^^^^^
><Foo /> : JSX.Element
>        : ^^^^^^^^^^^
>Foo : typeof Foo
>    : ^^^^^^^^^^

		// Emit S.Bar
		Bar, <Bar />;
>Bar, <Bar /> : JSX.Element
>             : ^^^^^^^^^^^
>Bar : typeof Bar
>    : ^^^^^^^^^^
><Bar /> : JSX.Element
>        : ^^^^^^^^^^^
>Bar : typeof Bar
>    : ^^^^^^^^^^
	}

}

namespace M {
>M : typeof M
>  : ^^^^^^^^

	// Emit M.S.Bar
	S.Bar, <S.Bar />;
>S.Bar, <S.Bar /> : JSX.Element
>                 : ^^^^^^^^^^^
>S.Bar : typeof S.Bar
>      : ^^^^^^^^^^^^
>S : typeof S
>  : ^^^^^^^^
>Bar : typeof S.Bar
>    : ^^^^^^^^^^^^
><S.Bar /> : JSX.Element
>          : ^^^^^^^^^^^
>S.Bar : typeof S.Bar
>      : ^^^^^^^^^^^^
>S : typeof S
>  : ^^^^^^^^
>Bar : typeof S.Bar
>    : ^^^^^^^^^^^^
}

namespace M {
>M : typeof globalThis.M
>  : ^^^^^^^^^^^^^^^^^^^

	var M = 100;
>M : number
>  : ^^^^^^
>100 : 100
>    : ^^^

	// Emit M_1.Foo
	Foo, <Foo />;
>Foo, <Foo /> : JSX.Element
>             : ^^^^^^^^^^^
>Foo : typeof Foo
>    : ^^^^^^^^^^
><Foo /> : JSX.Element
>        : ^^^^^^^^^^^
>Foo : typeof Foo
>    : ^^^^^^^^^^
}

