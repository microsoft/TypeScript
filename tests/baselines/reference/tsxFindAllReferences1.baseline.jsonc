// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// declare namespace JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         /*FIND ALL REFS*/<|[|{| isWriteAccess: true, isDefinition: true |}div|]: {
//             name?: string;
//             isOpen?: boolean;
//         };|>
//         span: { n: string; };
//     }
// }
// var x = <|<[|div|] />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare namespace JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //         /*FIND ALL REFS*/<|[|div|]: {
  //             name?: string;
  //             isOpen?: boolean;
  //         };|>
  //         span: { n: string; };
  //     }
  // }
  // var x = <div />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: {\n    name?: string;\n    isOpen?: boolean;\n}",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "name",
      "kind": "propertyName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "isOpen",
      "kind": "propertyName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "boolean",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 7) skipped ---
//         span: { n: string; };
//     }
// }
// var x = /*FIND ALL REFS*/<div />;



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// declare namespace JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         <|[|{| isWriteAccess: true |}div|]: {
//             name?: string;
//             isOpen?: boolean;
//         };|>
//         span: { n: string; };
//     }
// }
// var x = <|</*FIND ALL REFS*/[|div|] />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare namespace JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //         <|[|div|]: {
  //             name?: string;
  //             isOpen?: boolean;
  //         };|>
  //         span: { n: string; };
  //     }
  // }
  // var x = </*FIND ALL REFS*/div />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: {\n    name?: string;\n    isOpen?: boolean;\n}",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "name",
      "kind": "propertyName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "isOpen",
      "kind": "propertyName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "boolean",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]