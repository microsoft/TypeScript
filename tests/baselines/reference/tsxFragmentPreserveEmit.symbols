//// [tests/cases/conformance/jsx/tsxFragmentPreserveEmit.tsx] ////

=== file.tsx ===
declare namespace JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(file.tsx, 0, 23))

	interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(file.tsx, 1, 22))

		[s: string]: any;
>s : Symbol(s, Decl(file.tsx, 3, 3))
	}
}
declare var React: any;
>React : Symbol(React, Decl(file.tsx, 6, 11))

<></>; // no whitespace
<    ></   >; // lots of whitespace
< /*starting wrap*/ ></ /*ending wrap*/>; // comments in the tags
<>hi</>; // text inside
<><span>hi</span><div>bye</div></>; // children
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

<><span>1</span><><span>2.1</span><span>2.2</span></><span>3</span></>; // nested fragments
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>span : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

<>#</>; // # would cause scanning error if not in jsxtext
