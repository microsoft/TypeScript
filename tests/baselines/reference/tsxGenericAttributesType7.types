//// [tests/cases/conformance/jsx/tsxGenericAttributesType7.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof React
>      : ^^^^^^^^^^^^

declare function Component<T>(props: T) : JSX.Element;
>Component : <T>(props: T) => JSX.Element
>          : ^ ^^     ^^ ^^^^^           
>props : T
>      : ^
>JSX : any
>    : ^^^

const decorator = function <U>(props: U) {
>decorator : <U>(props: U) => JSX.Element
>          : ^ ^^     ^^ ^^^^^^^^^^^^^^^^
>function <U>(props: U) {    return <Component {...props} />;} : <U>(props: U) => JSX.Element
>                                                              : ^ ^^     ^^ ^^^^^^^^^^^^^^^^
>props : U
>      : ^

    return <Component {...props} />;
><Component {...props} /> : JSX.Element
>                         : ^^^^^^^^^^^
>Component : <T>(props: T) => JSX.Element
>          : ^ ^^     ^^ ^^^^^           
>props : U
>      : ^
}

const decorator1 = function <U extends {x: string}>(props: U) {
>decorator1 : <U extends { x: string; }>(props: U) => JSX.Element
>           : ^ ^^^^^^^^^              ^^     ^^ ^^^^^^^^^^^^^^^^
>function <U extends {x: string}>(props: U) {    return <Component {...props} x="hi"/>;} : <U extends { x: string; }>(props: U) => JSX.Element
>                                                                                        : ^ ^^^^^^^^^              ^^     ^^ ^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^
>props : U
>      : ^

    return <Component {...props} x="hi"/>;
><Component {...props} x="hi"/> : JSX.Element
>                               : ^^^^^^^^^^^
>Component : <T>(props: T) => JSX.Element
>          : ^ ^^     ^^ ^^^^^           
>props : U
>      : ^
>x : string
>  : ^^^^^^
}
