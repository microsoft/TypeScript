//// [tests/cases/conformance/jsx/tsxGenericAttributesType9.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof React
>      : ^^^^^^^^^^^^

export function makeP<P>(Ctor: React.ComponentClass<P>) {
>makeP : <P>(Ctor: React.ComponentClass<P>) => typeof (Anonymous class)
>      : ^ ^^    ^^                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>Ctor : React.ComponentClass<P>
>     : ^^^^^^^^^^^^^^^^^^^^^^^
>React : any
>      : ^^^

	return class extends React.PureComponent<P, void> {
>class extends React.PureComponent<P, void> {		public render(): JSX.Element {			return (				<Ctor {...this.props } />			);		}	} : typeof (Anonymous class)
>                                                                                                                               : ^^^^^^^^^^^^^^^^^^^^^^^^
>React.PureComponent : React.PureComponent<P, void>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>PureComponent : typeof React.PureComponent
>              : ^^^^^^^^^^^^^^^^^^^^^^^^^^

		public render(): JSX.Element {
>render : () => JSX.Element
>       : ^^^^^^           
>JSX : any
>    : ^^^

			return (
>(				<Ctor {...this.props } />			) : JSX.Element
>                                   : ^^^^^^^^^^^

				<Ctor {...this.props } />
><Ctor {...this.props } /> : JSX.Element
>                          : ^^^^^^^^^^^
>Ctor : React.ComponentClass<P>
>     : ^^^^^^^^^^^^^^^^^^^^^^^
>this.props : P & { children?: React.ReactNode; }
>           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>this : this
>     : ^^^^
>props : P & { children?: React.ReactNode; }
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

			);
		}
	};
}


