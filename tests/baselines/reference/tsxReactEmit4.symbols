//// [tests/cases/conformance/jsx/tsxReactEmit4.tsx] ////

=== file.tsx ===
declare namespace JSX {
>JSX : Symbol(JSX, Decl(file.tsx, 0, 0))

	interface Element { }
>Element : Symbol(Element, Decl(file.tsx, 0, 23))

	interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(file.tsx, 1, 22))

		[s: string]: any;
>s : Symbol(s, Decl(file.tsx, 3, 3))
	}
}
declare var React: any;
>React : Symbol(React, Decl(file.tsx, 6, 11))

var p: any;
>p : Symbol(p, Decl(file.tsx, 8, 3))

var openClosed1 = <div>
>openClosed1 : Symbol(openClosed1, Decl(file.tsx, 9, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

   {blah}

</div>;
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))

// Should emit React.__spread({}, p, {x: 0})
var spread1 = <div {...p} x={0} />;
>spread1 : Symbol(spread1, Decl(file.tsx, 16, 3))
>div : Symbol(JSX.IntrinsicElements.__index, Decl(file.tsx, 2, 30))
>p : Symbol(p, Decl(file.tsx, 8, 3))
>x : Symbol(x, Decl(file.tsx, 16, 25))

