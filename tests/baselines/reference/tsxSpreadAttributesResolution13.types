//// [tests/cases/conformance/jsx/tsxSpreadAttributesResolution13.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof React
>      : ^^^^^^^^^^^^

interface ComponentProps {
    property1: string;
>property1 : string
>          : ^^^^^^

    property2: number;
>property2 : number
>          : ^^^^^^
}

export default function Component(props: ComponentProps) {
>Component : (props: ComponentProps) => JSX.Element
>          : ^     ^^              ^^^^^^^^^^^^^^^^
>props : ComponentProps
>      : ^^^^^^^^^^^^^^

    let condition1: boolean;
>condition1 : boolean
>           : ^^^^^^^

    if (condition1) {
>condition1 : boolean
>           : ^^^^^^^

        return (
>(            <ChildComponent {...props} />        ) : JSX.Element
>                                                    : ^^^^^^^^^^^

            <ChildComponent {...props} />
><ChildComponent {...props} /> : JSX.Element
>                              : ^^^^^^^^^^^
>ChildComponent : ({ property1 }: AnotherComponentProps) => JSX.Element
>               : ^             ^^                     ^^^^^^^^^^^^^^^^
>props : ComponentProps
>      : ^^^^^^^^^^^^^^

        );
    }
    else {
        return (<ChildComponent {...props} property1="NewString" />);
>(<ChildComponent {...props} property1="NewString" />) : JSX.Element
>                                                      : ^^^^^^^^^^^
><ChildComponent {...props} property1="NewString" /> : JSX.Element
>                                                    : ^^^^^^^^^^^
>ChildComponent : ({ property1 }: AnotherComponentProps) => JSX.Element
>               : ^             ^^                     ^^^^^^^^^^^^^^^^
>props : ComponentProps
>      : ^^^^^^^^^^^^^^
>property1 : string
>          : ^^^^^^
    }
}

interface AnotherComponentProps {
    property1: string;
>property1 : string
>          : ^^^^^^
}

function ChildComponent({ property1 }: AnotherComponentProps) {
>ChildComponent : ({ property1 }: AnotherComponentProps) => JSX.Element
>               : ^             ^^                     ^^^^^^^^^^^^^^^^
>property1 : string
>          : ^^^^^^

    return (
>(        <span>{property1}</span>    ) : JSX.Element
>                                       : ^^^^^^^^^^^

        <span>{property1}</span>
><span>{property1}</span> : JSX.Element
>                         : ^^^^^^^^^^^
>span : any
>     : ^^^
>property1 : string
>          : ^^^^^^
>span : any
>     : ^^^

    );
}
