tsxSpreadChildrenInvalidType.tsx(1,16): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
tsxSpreadChildrenInvalidType.tsx(17,12): error TS2792: Cannot find module 'react/jsx-runtime'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
tsxSpreadChildrenInvalidType.tsx(21,9): error TS2609: JSX spread child must be an array type.


==== tsxSpreadChildrenInvalidType.tsx (3 errors) ====
    declare module JSX {
                   ~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
    	interface Element { }
    	interface IntrinsicElements {
    		[s: string]: any;
    	}
    }
    declare var React: any;
    
    interface TodoProp {
        id: number;
        todo: string;
    }
    interface TodoListProps {
        todos: TodoProp[];
    }
    function Todo(prop: { key: number, todo: string }) {
        return <div>{prop.key.toString() + prop.todo}</div>;
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2792: Cannot find module 'react/jsx-runtime'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    }
    function TodoList({ todos }: TodoListProps) {
        return <div>
            {...<Todo key={todos[0].id} todo={todos[0].todo} />}
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2609: JSX spread child must be an array type.
        </div>;
    }
    function TodoListNoError({ todos }: TodoListProps) {
        // any is not checked
        return <div>
            {...(<Todo key={todos[0].id} todo={todos[0].todo} /> as any)}
        </div>;
    }
    let x: TodoListProps;
        <TodoList {...x}/>
    