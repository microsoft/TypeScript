//// [tests/cases/conformance/jsx/tsxUnionElementType3.tsx] ////

=== file.tsx ===
import React = require('react');
>React : typeof React
>      : ^^^^^^^^^^^^

class RC1 extends React.Component<{x : number}, {}> {
>RC1 : RC1
>    : ^^^
>React.Component : React.Component<{ x: number; }, {}>
>                : ^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Component : typeof React.Component
>          : ^^^^^^^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^

    render() {
>render : () => any
>       : ^^^^^^^^^

        return null;
    }
}

class RC2 extends React.Component<{ x: string }, {}> {
>RC2 : RC2
>    : ^^^
>React.Component : React.Component<{ x: string; }, {}>
>                : ^^^^^^^^^^^^^^^^^^^^^      ^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Component : typeof React.Component
>          : ^^^^^^^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^

    render() {
>render : () => any
>       : ^^^^^^^^^

        return null;
    }
    private method() { }
>method : () => void
>       : ^^^^^^^^^^
}

class RC3 extends React.Component<{}, {}> {
>RC3 : RC3
>    : ^^^
>React.Component : React.Component<{}, {}>
>                : ^^^^^^^^^^^^^^^^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Component : typeof React.Component
>          : ^^^^^^^^^^^^^^^^^^^^^^

    render() {
>render : () => any
>       : ^^^^^^^^^

        return null;
    }
}

class RC4 extends React.Component<{}, {}> {
>RC4 : RC4
>    : ^^^
>React.Component : React.Component<{}, {}>
>                : ^^^^^^^^^^^^^^^^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Component : typeof React.Component
>          : ^^^^^^^^^^^^^^^^^^^^^^

    render() {
>render : () => any
>       : ^^^^^^^^^

        return null;
    }
}

var EmptyRCComp = RC3 || RC4;
>EmptyRCComp : typeof RC3
>            : ^^^^^^^^^^
>RC3 || RC4 : typeof RC3
>           : ^^^^^^^^^^
>RC3 : typeof RC3
>    : ^^^^^^^^^^
>RC4 : typeof RC4
>    : ^^^^^^^^^^

var PartRCComp = RC1 || RC4;
>PartRCComp : typeof RC4
>           : ^^^^^^^^^^
>RC1 || RC4 : typeof RC4
>           : ^^^^^^^^^^
>RC1 : typeof RC1
>    : ^^^^^^^^^^
>RC4 : typeof RC4
>    : ^^^^^^^^^^

var RCComp = RC1 || RC2;
>RCComp : typeof RC1 | typeof RC2
>       : ^^^^^^^^^^^^^^^^^^^^^^^
>RC1 || RC2 : typeof RC1 | typeof RC2
>           : ^^^^^^^^^^^^^^^^^^^^^^^
>RC1 : typeof RC1
>    : ^^^^^^^^^^
>RC2 : typeof RC2
>    : ^^^^^^^^^^

// OK
let a = <RCComp x="Hi" />;
>a : JSX.Element
>  : ^^^^^^^^^^^
><RCComp x="Hi" /> : JSX.Element
>                  : ^^^^^^^^^^^
>RCComp : typeof RC1 | typeof RC2
>       : ^^^^^^^^^^^^^^^^^^^^^^^
>x : string
>  : ^^^^^^

let a1 = <EmptyRCComp />;
>a1 : JSX.Element
>   : ^^^^^^^^^^^
><EmptyRCComp /> : JSX.Element
>                : ^^^^^^^^^^^
>EmptyRCComp : typeof RC3
>            : ^^^^^^^^^^

let a2 = <EmptyRCComp data-prop="hello" />;
>a2 : JSX.Element
>   : ^^^^^^^^^^^
><EmptyRCComp data-prop="hello" /> : JSX.Element
>                                  : ^^^^^^^^^^^
>EmptyRCComp : typeof RC3
>            : ^^^^^^^^^^
>data-prop : string
>          : ^^^^^^

let b = <PartRCComp />
>b : JSX.Element
>  : ^^^^^^^^^^^
><PartRCComp /> : JSX.Element
>               : ^^^^^^^^^^^
>PartRCComp : typeof RC4
>           : ^^^^^^^^^^

let c = <PartRCComp data-extra="hello" />
>c : JSX.Element
>  : ^^^^^^^^^^^
><PartRCComp data-extra="hello" /> : JSX.Element
>                                  : ^^^^^^^^^^^
>PartRCComp : typeof RC4
>           : ^^^^^^^^^^
>data-extra : string
>           : ^^^^^^

