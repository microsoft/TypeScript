//// [tests/cases/conformance/classes/propertyMemberDeclarations/twoAccessorsWithSameName.ts] ////

=== twoAccessorsWithSameName.ts ===
class C {
>C : C
>  : ^

    get x() { return 1; }
>x : number
>  : ^^^^^^
>1 : 1
>  : ^

    get x() { return 1; } // error
>x : number
>  : ^^^^^^
>1 : 1
>  : ^
}

class D {
>D : D
>  : ^

    set x(v) {  }
>x : any
>  : ^^^
>v : any
>  : ^^^

    set x(v) {  } // error
>x : any
>  : ^^^
>v : any
>  : ^^^
}

class E {
>E : E
>  : ^

    get x() {
>x : number
>  : ^^^^^^

        return 1;
>1 : 1
>  : ^
    }
    set x(v) { }
>x : number
>  : ^^^^^^
>v : number
>  : ^^^^^^
}

var x = {
>x : { readonly x: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^
>{    get x() {        return 1;    },    // error    get x() {        return 1;    }} : { readonly x: number; }
>                                                                                      : ^^^^^^^^^^^^^^^^^^^^^^^

    get x() {
>x : number
>  : ^^^^^^

        return 1;
>1 : 1
>  : ^

    },

    // error
    get x() {
>x : number
>  : ^^^^^^

        return 1;
>1 : 1
>  : ^
    }
}

var y = {
>y : { x: number; }
>  : ^^^^^^^^^^^^^^
>{    get x() {        return 1;    },    set x(v) { }} : { x: number; }
>                                                       : ^^^^^^^^^^^^^^

    get x() {
>x : number
>  : ^^^^^^

        return 1;
>1 : 1
>  : ^

    },
    set x(v) { }
>x : number
>  : ^^^^^^
>v : number
>  : ^^^^^^
}
