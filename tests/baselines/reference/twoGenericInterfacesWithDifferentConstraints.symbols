//// [tests/cases/conformance/interfaces/declarationMerging/twoGenericInterfacesWithDifferentConstraints.ts] ////

=== twoGenericInterfacesWithDifferentConstraints.ts ===
interface A<T extends Date> {
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 0), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 2, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 4, 12))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))

    x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 29))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 4, 12))
}

interface A<T extends Number> { // error
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 0), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 2, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 4, 12))
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

    y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 4, 31))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 4, 12))
}

namespace M {
>M : Symbol(M, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 6, 1))

    interface B<T extends A<Date>> {
>B : Symbol(B, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 8, 13), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 11, 5))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 9, 16), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 13, 16))
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 0), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 2, 1))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))

        x: T;
>x : Symbol(B.x, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 9, 36))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 9, 16), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 13, 16))
    }

    interface B<T extends A<any>> { // error
>B : Symbol(B, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 8, 13), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 11, 5))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 9, 16), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 13, 16))
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 0, 0), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 2, 1))

        y: T;
>y : Symbol(B.y, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 13, 35))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 9, 16), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 13, 16))
    }
}

namespace M2 {
>M2 : Symbol(M2, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 16, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 22, 1))

    interface A<T extends Date> {
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 18, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 19, 16))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))

        x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 19, 33))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 19, 16))
    }
}

namespace M2 {
>M2 : Symbol(M2, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 16, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 22, 1))

    interface A<T extends Number> { // ok, different declaration space from other M2.A
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 24, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 25, 16))
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

        y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 25, 35))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 25, 16))
    }
}

namespace M3 {
>M3 : Symbol(M3, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 28, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 34, 1))

    export interface A<T extends Date> {
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 30, 14), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 36, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 31, 23), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 37, 23))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --))

        x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 31, 40))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 31, 23), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 37, 23))
    }
}

namespace M3 {
>M3 : Symbol(M3, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 28, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 34, 1))

    export interface A<T extends Number> { // error
>A : Symbol(A, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 30, 14), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 36, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 31, 23), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 37, 23))
>Number : Symbol(Number, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))

        y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 37, 42))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 31, 23), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 37, 23))
    }
}

interface B<T extends number> {
>B : Symbol(B, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 40, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 45, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 12))

  u: T;
>u : Symbol(B.u, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 31))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 12))

  v: Constraint<T>; // ok
>v : Symbol(B.v, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 43, 7))
>Constraint : Symbol(Constraint, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 58, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 12))
}

interface B<T> { // ok
>B : Symbol(B, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 40, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 45, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 12))

  x: T;
>x : Symbol(B.x, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 16))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 12))

  y: Constraint<T>; // ok
>y : Symbol(B.y, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 48, 7))
>Constraint : Symbol(Constraint, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 58, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 42, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 47, 12))
}

interface C<T> {
>C : Symbol(C, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 50, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 54, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 52, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 56, 12))

  x: T;
>x : Symbol(C.x, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 52, 16))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 52, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 56, 12))
}

interface C<T extends number> { // ok
>C : Symbol(C, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 50, 1), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 54, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 52, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 56, 12))

  y: T;
>y : Symbol(C.y, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 56, 31))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 52, 12), Decl(twoGenericInterfacesWithDifferentConstraints.ts, 56, 12))
}

interface Constraint<T extends number> {}
>Constraint : Symbol(Constraint, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 58, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithDifferentConstraints.ts, 60, 21))

