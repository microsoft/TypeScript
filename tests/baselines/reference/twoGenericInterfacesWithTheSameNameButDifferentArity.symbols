//// [tests/cases/conformance/interfaces/declarationMerging/twoGenericInterfacesWithTheSameNameButDifferentArity.ts] ////

=== twoGenericInterfacesWithTheSameNameButDifferentArity.ts ===
interface A<T> {
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 0), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 2, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 12), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 4, 12))

    x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 16))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 12), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 4, 12))
}

interface A<T, U> { // error
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 0), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 2, 1))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 12), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 4, 12))
>U : Symbol(U, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 4, 14))

    y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 4, 19))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 0, 12), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 4, 12))
}

namespace M {
>M : Symbol(M, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 6, 1))

    interface A<T> {
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 8, 13), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 11, 5))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 9, 16), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 13, 16))

        x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 9, 20))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 9, 16), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 13, 16))
    }

    interface A<T, U> { // error
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 8, 13), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 11, 5))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 9, 16), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 13, 16))
>U : Symbol(U, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 13, 18))

        y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 13, 23))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 9, 16), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 13, 16))
    }
}

namespace M2 {
>M2 : Symbol(M2, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 16, 1), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 22, 1))

    interface A<T> {
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 18, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 19, 16))

        x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 19, 20))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 19, 16))
    }
}

namespace M2 {
>M2 : Symbol(M2, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 16, 1), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 22, 1))

    interface A<T, U> { // ok, different declaration space than other M2
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 24, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 25, 16))
>U : Symbol(U, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 25, 18))

        y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 25, 23))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 25, 16))
    }
}

namespace M3 {
>M3 : Symbol(M3, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 28, 1), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 34, 1))

    export interface A<T> {
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 30, 14), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 36, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 31, 23), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 37, 23))

        x: T;
>x : Symbol(A.x, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 31, 27))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 31, 23), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 37, 23))
    }
}

namespace M3 {
>M3 : Symbol(M3, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 28, 1), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 34, 1))

    export interface A<T, U> { // error
>A : Symbol(A, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 30, 14), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 36, 14))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 31, 23), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 37, 23))
>U : Symbol(U, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 37, 25))

        y: T;
>y : Symbol(A.y, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 37, 30))
>T : Symbol(T, Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 31, 23), Decl(twoGenericInterfacesWithTheSameNameButDifferentArity.ts, 37, 23))
    }
}
