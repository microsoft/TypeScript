//// [tests/cases/conformance/interfaces/declarationMerging/twoMergedInterfacesWithDifferingOverloads2.ts] ////

=== twoMergedInterfacesWithDifferingOverloads2.ts ===
interface A {
>A : Symbol(A, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 0, 0), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 3, 1))

    (): string;
    (x: number): number;
>x : Symbol(x, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 2, 5))
}

interface A {
>A : Symbol(A, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 0, 0), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 3, 1))

    (x: number, y: number): boolean;
>x : Symbol(x, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 6, 5))
>y : Symbol(y, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 6, 15))
}

var a: A;
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 9, 3))
>A : Symbol(A, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 0, 0), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 3, 1))

var r = a();
>r : Symbol(r, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 10, 3))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 9, 3))

var r2 = a(1);
>r2 : Symbol(r2, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 11, 3))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 9, 3))

var r3 = a(1, 2);
>r3 : Symbol(r3, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 12, 3))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 9, 3))

namespace G {
>G : Symbol(G, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 12, 17))

    interface A<T> {
>A : Symbol(A, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 14, 13), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 18, 5))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))

        (): string;
        (x: T): T;
>x : Symbol(x, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 17, 9))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))
    }

    interface A<T> {
>A : Symbol(A, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 14, 13), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 18, 5))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))

        (x: T, y: number): T;
>x : Symbol(x, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 21, 9))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))
>y : Symbol(y, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 21, 14))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))

        <U>(x: U, y: T): U;
>U : Symbol(U, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 22, 9))
>x : Symbol(x, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 22, 12))
>U : Symbol(U, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 22, 9))
>y : Symbol(y, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 22, 17))
>T : Symbol(T, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 15, 16), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 20, 16))
>U : Symbol(U, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 22, 9))
    }

    var a: A<boolean>;
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 25, 7))
>A : Symbol(A, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 14, 13), Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 18, 5))

    var r = a();
>r : Symbol(r, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 26, 7))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 25, 7))

    var r2 = a(true);
>r2 : Symbol(r2, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 27, 7))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 25, 7))

    var r3 = a(true, 2);
>r3 : Symbol(r3, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 28, 7))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 25, 7))

    var r4 = a(1, true);
>r4 : Symbol(r4, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 29, 7))
>a : Symbol(a, Decl(twoMergedInterfacesWithDifferingOverloads2.ts, 25, 7))
}
