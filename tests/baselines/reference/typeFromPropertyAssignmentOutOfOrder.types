//// [tests/cases/conformance/salsa/typeFromPropertyAssignmentOutOfOrder.ts] ////

=== index.js ===
First.Item = class I {}
>First.Item = class I {} : typeof I
>                        : ^^^^^^^^
>First.Item : typeof I
>           : ^^^^^^^^
>First : typeof First
>      : ^^^^^^^^^^^^
>Item : typeof I
>     : ^^^^^^^^
>class I {} : typeof I
>           : ^^^^^^^^
>I : typeof I
>  : ^^^^^^^^

Common.Object = class extends First.Item {}
>Common.Object = class extends First.Item {} : typeof Object
>                                            : ^^^^^^^^^^^^^
>Common.Object : typeof Object
>              : ^^^^^^^^^^^^^
>Common : typeof Common
>       : ^^^^^^^^^^^^^
>Object : typeof Object
>       : ^^^^^^^^^^^^^
>class extends First.Item {} : typeof Object
>                            : ^^^^^^^^^^^^^
>First.Item : I
>           : ^
>First : typeof First
>      : ^^^^^^^^^^^^
>Item : typeof I
>     : ^^^^^^^^

Workspace.Object = class extends Common.Object {}
>Workspace.Object = class extends Common.Object {} : typeof Object
>                                                  : ^^^^^^^^^^^^^
>Workspace.Object : typeof Object
>                 : ^^^^^^^^^^^^^
>Workspace : typeof Workspace
>          : ^^^^^^^^^^^^^^^^
>Object : typeof Object
>       : ^^^^^^^^^^^^^
>class extends Common.Object {} : typeof Object
>                               : ^^^^^^^^^^^^^
>Common.Object : Object
>              : ^^^^^^
>Common : typeof Common
>       : ^^^^^^^^^^^^^
>Object : typeof Object
>       : ^^^^^^^^^^^^^

/** @type {Workspace.Object} */
var am;
>am : Object
>   : ^^^^^^

=== roots.js ===
var First = {};
>First : typeof First
>      : ^^^^^^^^^^^^
>{} : {}
>   : ^^

var Common = {};
>Common : typeof Common
>       : ^^^^^^^^^^^^^
>{} : {}
>   : ^^

var Workspace = {};
>Workspace : typeof Workspace
>          : ^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

