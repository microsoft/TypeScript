//// [tests/cases/conformance/expressions/typeGuards/typeGuardNarrowsToLiteralTypeUnion.ts] ////

=== typeGuardNarrowsToLiteralTypeUnion.ts ===
declare function isFoo(value: string) : value is ("foo" | "bar");
>isFoo : (value: string) => value is ("foo" | "bar")
>      : ^     ^^      ^^^^^                        
>value : string
>      : ^^^^^^

declare function doThis(value: "foo" | "bar"): void;
>doThis : (value: "foo" | "bar") => void
>       : ^     ^^             ^^^^^    
>value : "foo" | "bar"
>      : ^^^^^^^^^^^^^

declare function doThat(value: string) : void;
>doThat : (value: string) => void
>       : ^     ^^      ^^^^^    
>value : string
>      : ^^^^^^

let value: string;
>value : string
>      : ^^^^^^

if (isFoo(value)) {
>isFoo(value) : boolean
>             : ^^^^^^^
>isFoo : (value: string) => value is ("foo" | "bar")
>      : ^     ^^      ^^^^^                        
>value : string
>      : ^^^^^^

    doThis(value);
>doThis(value) : void
>              : ^^^^
>doThis : (value: "foo" | "bar") => void
>       : ^     ^^             ^^^^^    
>value : "foo" | "bar"
>      : ^^^^^^^^^^^^^

} else {
    doThat(value);
>doThat(value) : void
>              : ^^^^
>doThat : (value: string) => void
>       : ^     ^^      ^^^^^    
>value : string
>      : ^^^^^^
}


