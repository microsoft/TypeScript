//// [tests/cases/conformance/expressions/functions/typeOfThisInFunctionExpression.ts] ////

=== typeOfThisInFunctionExpression.ts ===
// type of 'this' in FunctionExpression is Any

function fn() {
>fn : () => void
>   : ^^^^^^^^^^

    var p = this;
>p : any
>this : any

    var p: any;
>p : any
}

var t = function () {
>t : () => void
>  : ^^^^^^^^^^
>function () {    var p = this;    var p: any;} : () => void
>                                               : ^^^^^^^^^^

    var p = this;
>p : any
>this : any

    var p: any;
>p : any
}

var t2 = function f() {
>t2 : () => void
>   : ^^^^^^^^^^
>function f() {    var x = this;    var x: any;} : () => void
>                                                : ^^^^^^^^^^
>f : () => void
>  : ^^^^^^^^^^

    var x = this;
>x : any
>this : any

    var x: any;
>x : any
}

class C {
>C : C
>  : ^

    x = function () {
>x : () => void
>  : ^^^^^^^^^^
>function () {        var q: any;        var q = this;    } : () => void
>                                                           : ^^^^^^^^^^

        var q: any;
>q : any

        var q = this;
>q : any
>this : any
    }
    y = function ff() {
>y : () => void
>  : ^^^^^^^^^^
>function ff() {        var q: any;        var q = this;    } : () => void
>                                                             : ^^^^^^^^^^
>ff : () => void
>   : ^^^^^^^^^^

        var q: any;
>q : any

        var q = this;
>q : any
>this : any
    }
}

module M {
>M : typeof M
>  : ^^^^^^^^

    function fn() {
>fn : () => void
>   : ^^^^^^^^^^

        var p = this;
>p : any
>this : any

        var p: any;
>p : any
    }

    var t = function () {
>t : () => void
>  : ^^^^^^^^^^
>function () {        var p = this;        var p: any;    } : () => void
>                                                           : ^^^^^^^^^^

        var p = this;
>p : any
>this : any

        var p: any;
>p : any
    }

    var t2 = function f() {
>t2 : () => void
>   : ^^^^^^^^^^
>function f() {        var x = this;        var x: any;    } : () => void
>                                                            : ^^^^^^^^^^
>f : () => void
>  : ^^^^^^^^^^

        var x = this;
>x : any
>this : any

        var x: any;
>x : any
    }

}
