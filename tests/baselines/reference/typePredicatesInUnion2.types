//// [tests/cases/compiler/typePredicatesInUnion2.ts] ////

=== typePredicatesInUnion2.ts ===
declare function isString(x: any): x is string;
>isString : (x: any) => x is string
>         : ^ ^^   ^^^^^           
>x : any

declare function isNumber(x: any): x is number;
>isNumber : (x: any) => x is number
>         : ^ ^^   ^^^^^           
>x : any

declare function f(p: typeof isString | typeof isNumber): void;
>f : (p: typeof isString | typeof isNumber) => void
>  : ^ ^^                                 ^^^^^    
>p : ((x: any) => x is string) | ((x: any) => x is number)
>  : ^^ ^^   ^^^^^           ^^^^^^ ^^   ^^^^^           ^
>isString : (x: any) => x is string
>         : ^ ^^   ^^^^^           
>isNumber : (x: any) => x is number
>         : ^ ^^   ^^^^^           

f(isString);
>f(isString) : void
>            : ^^^^
>f : (p: typeof isString | typeof isNumber) => void
>  : ^ ^^                                 ^^^^^    
>isString : (x: any) => x is string
>         : ^ ^^   ^^^^^           

f(isNumber);
>f(isNumber) : void
>            : ^^^^
>f : (p: typeof isString | typeof isNumber) => void
>  : ^ ^^                                 ^^^^^    
>isNumber : (x: any) => x is number
>         : ^ ^^   ^^^^^           

