//// [tests/cases/compiler/typeReferenceDirectives3.ts] ////

=== /app.ts ===
/// <reference types="lib" preserve="true" />
/// <reference path="ref.d.ts" />
interface A {
>A : Symbol(A, Decl(app.ts, 0, 0))

    x: () => $
>x : Symbol(A.x, Decl(app.ts, 2, 13))
>$ : Symbol($, Decl(ref.d.ts, 0, 0), Decl(index.d.ts, 0, 11))
}
=== /ref.d.ts ===
interface $ { x }
>$ : Symbol($, Decl(ref.d.ts, 0, 0), Decl(index.d.ts, 0, 11))
>x : Symbol($.x, Decl(ref.d.ts, 0, 13))

=== /types/lib/index.d.ts ===
declare let $: { x: number }
>$ : Symbol($, Decl(ref.d.ts, 0, 0), Decl(index.d.ts, 0, 11))
>x : Symbol(x, Decl(index.d.ts, 0, 16))

