//// [tests/cases/compiler/typeValueConflict2.ts] ////

=== typeValueConflict2.ts ===
namespace M1 {
>M1 : typeof M1
>   : ^^^^^^^^^

    export class A<T> {
>A : A<T>
>  : ^^^^

        constructor(a: T) {
>a : T
>  : ^
        }
    }
}
namespace M2 {
>M2 : typeof M2
>   : ^^^^^^^^^

    var M1 = 0;
>M1 : number
>   : ^^^^^^
>0 : 0
>  : ^

    // Should error.  M1 should bind to the variable, not to the module.
    class B extends M1.A<string> {
>B : B
>  : ^
>M1.A : any
>     : ^^^
>M1 : number
>   : ^^^^^^
>A : any
>  : ^^^
    }
}
namespace M3 {
>M3 : typeof M3
>   : ^^^^^^^^^

    // Shouldn't error
    class B extends M1.A<string> {
>B : B
>  : ^
>M1.A : M1.A<string>
>     : ^^^^^^^^^^^^
>M1 : typeof M1
>   : ^^^^^^^^^
>A : typeof M1.A
>  : ^^^^^^^^^^^
    }
}

