//// [tests/cases/compiler/typedArraysSubarray.ts] ////

=== typedArraysSubarray.ts ===
function int8ArraySubarray() {
>int8ArraySubarray : () => void
>                  : ^^^^^^^^^^

    var arr = new Int8Array(10);
>arr : Int8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^
>new Int8Array(10) : Int8Array<ArrayBuffer>
>                  : ^^^^^^^^^^^^^^^^^^^^^^
>Int8Array : Int8ArrayConstructor
>          : ^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Int8Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int8Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int8Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Int8Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int8Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int8Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Int8Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int8Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int8Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function uint8ArraySubarray() {
>uint8ArraySubarray : () => void
>                   : ^^^^^^^^^^

    var arr = new Uint8Array(10);
>arr : Uint8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>new Uint8Array(10) : Uint8Array<ArrayBuffer>
>                   : ^^^^^^^^^^^^^^^^^^^^^^^
>Uint8Array : Uint8ArrayConstructor
>           : ^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Uint8Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint8Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint8Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Uint8Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint8Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint8Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Uint8Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint8Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint8Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint8Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function uint8ClampedArraySubarray() {
>uint8ClampedArraySubarray : () => void
>                          : ^^^^^^^^^^

    var arr = new Uint8ClampedArray(10);
>arr : Uint8ClampedArray<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>new Uint8ClampedArray(10) : Uint8ClampedArray<ArrayBuffer>
>                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>Uint8ClampedArray : Uint8ClampedArrayConstructor
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Uint8ClampedArray<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint8ClampedArray<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint8ClampedArray<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint8ClampedArray<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Uint8ClampedArray<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint8ClampedArray<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint8ClampedArray<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint8ClampedArray<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Uint8ClampedArray<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint8ClampedArray<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint8ClampedArray<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint8ClampedArray<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function int16ArraySubarray() {
>int16ArraySubarray : () => void
>                   : ^^^^^^^^^^

    var arr = new Int16Array(10);
>arr : Int16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>new Int16Array(10) : Int16Array<ArrayBuffer>
>                   : ^^^^^^^^^^^^^^^^^^^^^^^
>Int16Array : Int16ArrayConstructor
>           : ^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Int16Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int16Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int16Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Int16Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int16Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int16Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Int16Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int16Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int16Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function uint16ArraySubarray() {
>uint16ArraySubarray : () => void
>                    : ^^^^^^^^^^

    var arr = new Uint16Array(10);
>arr : Uint16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>new Uint16Array(10) : Uint16Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^
>Uint16Array : Uint16ArrayConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Uint16Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint16Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint16Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Uint16Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint16Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint16Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Uint16Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint16Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint16Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint16Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function int32ArraySubarray() {
>int32ArraySubarray : () => void
>                   : ^^^^^^^^^^

    var arr = new Int32Array(10);
>arr : Int32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>new Int32Array(10) : Int32Array<ArrayBuffer>
>                   : ^^^^^^^^^^^^^^^^^^^^^^^
>Int32Array : Int32ArrayConstructor
>           : ^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Int32Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Int32Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Int32Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Int32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Int32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Int32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function uint32ArraySubarray() {
>uint32ArraySubarray : () => void
>                    : ^^^^^^^^^^

    var arr = new Uint32Array(10);
>arr : Uint32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>new Uint32Array(10) : Uint32Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^
>Uint32Array : Uint32ArrayConstructor
>            : ^^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Uint32Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Uint32Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Uint32Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Uint32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Uint32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Uint32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function float32ArraySubarray() {
>float32ArraySubarray : () => void
>                     : ^^^^^^^^^^

    var arr = new Float32Array(10);
>arr : Float32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>new Float32Array(10) : Float32Array<ArrayBuffer>
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^^
>Float32Array : Float32ArrayConstructor
>             : ^^^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Float32Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Float32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Float32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Float32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Float32Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Float32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Float32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Float32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Float32Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Float32Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Float32Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Float32Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

function float64ArraySubarray() {
>float64ArraySubarray : () => void
>                     : ^^^^^^^^^^

    var arr = new Float64Array(10);
>arr : Float64Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>new Float64Array(10) : Float64Array<ArrayBuffer>
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^^
>Float64Array : Float64ArrayConstructor
>             : ^^^^^^^^^^^^^^^^^^^^^^^
>10 : 10
>   : ^^

    arr.subarray();
>arr.subarray() : Float64Array<ArrayBuffer>
>               : ^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Float64Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Float64Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Float64Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    arr.subarray(0);
>arr.subarray(0) : Float64Array<ArrayBuffer>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Float64Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Float64Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Float64Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

    arr.subarray(0, 10);
>arr.subarray(0, 10) : Float64Array<ArrayBuffer>
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>arr.subarray : (begin?: number, end?: number) => Float64Array<ArrayBuffer>
>             : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>arr : Float64Array<ArrayBuffer>
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^
>subarray : (begin?: number, end?: number) => Float64Array<ArrayBuffer>
>         : ^     ^^^      ^^   ^^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^
>10 : 10
>   : ^^
}

