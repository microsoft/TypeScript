//// [tests/cases/conformance/types/specifyingTypes/typeQueries/typeofAnExportedType.ts] ////

=== typeofAnExportedType.ts ===
export var x = 1;
>x : Symbol(x, Decl(typeofAnExportedType.ts, 0, 10))

export var r1: typeof x;
>r1 : Symbol(r1, Decl(typeofAnExportedType.ts, 1, 10))
>x : Symbol(x, Decl(typeofAnExportedType.ts, 0, 10))

export var y = { foo: '' };
>y : Symbol(y, Decl(typeofAnExportedType.ts, 2, 10))
>foo : Symbol(foo, Decl(typeofAnExportedType.ts, 2, 16))

export var r2: typeof y;
>r2 : Symbol(r2, Decl(typeofAnExportedType.ts, 3, 10))
>y : Symbol(y, Decl(typeofAnExportedType.ts, 2, 10))

export class C {
>C : Symbol(C, Decl(typeofAnExportedType.ts, 3, 24))

    foo: string;
>foo : Symbol(C.foo, Decl(typeofAnExportedType.ts, 4, 16))
}
export var c: C;
>c : Symbol(c, Decl(typeofAnExportedType.ts, 7, 10))
>C : Symbol(C, Decl(typeofAnExportedType.ts, 3, 24))

var c2: C;
>c2 : Symbol(c2, Decl(typeofAnExportedType.ts, 8, 3))
>C : Symbol(C, Decl(typeofAnExportedType.ts, 3, 24))

export var r3: typeof C;
>r3 : Symbol(r3, Decl(typeofAnExportedType.ts, 10, 10))
>C : Symbol(C, Decl(typeofAnExportedType.ts, 3, 24))

export var r4: typeof c;
>r4 : Symbol(r4, Decl(typeofAnExportedType.ts, 11, 10))
>c : Symbol(c, Decl(typeofAnExportedType.ts, 7, 10))

export var r4b: typeof c2;
>r4b : Symbol(r4b, Decl(typeofAnExportedType.ts, 12, 10))
>c2 : Symbol(c2, Decl(typeofAnExportedType.ts, 8, 3))

export interface I {
>I : Symbol(I, Decl(typeofAnExportedType.ts, 12, 26))

    foo: string;
>foo : Symbol(I.foo, Decl(typeofAnExportedType.ts, 14, 20))
}
export var i: I;
>i : Symbol(i, Decl(typeofAnExportedType.ts, 17, 10))
>I : Symbol(I, Decl(typeofAnExportedType.ts, 12, 26))

var i2: I;
>i2 : Symbol(i2, Decl(typeofAnExportedType.ts, 18, 3))
>I : Symbol(I, Decl(typeofAnExportedType.ts, 12, 26))

export var r5: typeof i;
>r5 : Symbol(r5, Decl(typeofAnExportedType.ts, 19, 10), Decl(typeofAnExportedType.ts, 20, 10))
>i : Symbol(i, Decl(typeofAnExportedType.ts, 17, 10))

export var r5: typeof i2;
>r5 : Symbol(r5, Decl(typeofAnExportedType.ts, 19, 10), Decl(typeofAnExportedType.ts, 20, 10))
>i2 : Symbol(i2, Decl(typeofAnExportedType.ts, 18, 3))

export namespace M {
>M : Symbol(M, Decl(typeofAnExportedType.ts, 20, 25))

    export var foo = '';
>foo : Symbol(foo, Decl(typeofAnExportedType.ts, 23, 14))

    export class C {
>C : Symbol(C, Decl(typeofAnExportedType.ts, 23, 24))

        foo: string;
>foo : Symbol(C.foo, Decl(typeofAnExportedType.ts, 24, 20))
    }
}
export var r6: typeof M;
>r6 : Symbol(r6, Decl(typeofAnExportedType.ts, 28, 10))
>M : Symbol(M, Decl(typeofAnExportedType.ts, 20, 25))

export var r7: typeof M.foo;
>r7 : Symbol(r7, Decl(typeofAnExportedType.ts, 29, 10))
>M.foo : Symbol(Z.foo, Decl(typeofAnExportedType.ts, 23, 14))
>M : Symbol(M, Decl(typeofAnExportedType.ts, 20, 25))
>foo : Symbol(Z.foo, Decl(typeofAnExportedType.ts, 23, 14))

export import Z = M;
>Z : Symbol(Z, Decl(typeofAnExportedType.ts, 29, 28))
>M : Symbol(M, Decl(typeofAnExportedType.ts, 20, 25))

export var r8: typeof Z;
>r8 : Symbol(r8, Decl(typeofAnExportedType.ts, 32, 10))
>Z : Symbol(Z, Decl(typeofAnExportedType.ts, 29, 28))

export var r9: typeof Z.foo;
>r9 : Symbol(r9, Decl(typeofAnExportedType.ts, 33, 10))
>Z.foo : Symbol(Z.foo, Decl(typeofAnExportedType.ts, 23, 14))
>Z : Symbol(Z, Decl(typeofAnExportedType.ts, 29, 28))
>foo : Symbol(Z.foo, Decl(typeofAnExportedType.ts, 23, 14))

export enum E {
>E : Symbol(E, Decl(typeofAnExportedType.ts, 33, 28))

    A
>A : Symbol(E.A, Decl(typeofAnExportedType.ts, 35, 15))
}
export var r10: typeof E;
>r10 : Symbol(r10, Decl(typeofAnExportedType.ts, 38, 10))
>E : Symbol(E, Decl(typeofAnExportedType.ts, 33, 28))

export var r11: typeof E.A;
>r11 : Symbol(r11, Decl(typeofAnExportedType.ts, 39, 10))
>E.A : Symbol(E.A, Decl(typeofAnExportedType.ts, 35, 15))
>E : Symbol(E, Decl(typeofAnExportedType.ts, 33, 28))
>A : Symbol(E.A, Decl(typeofAnExportedType.ts, 35, 15))

export var r12: typeof r12;
>r12 : Symbol(r12, Decl(typeofAnExportedType.ts, 41, 10))
>r12 : Symbol(r12, Decl(typeofAnExportedType.ts, 41, 10))

export function foo() { }
>foo : Symbol(foo, Decl(typeofAnExportedType.ts, 41, 27), Decl(typeofAnExportedType.ts, 43, 25))

export namespace foo {
>foo : Symbol(foo, Decl(typeofAnExportedType.ts, 41, 27), Decl(typeofAnExportedType.ts, 43, 25))

    export var y = 1;
>y : Symbol(y, Decl(typeofAnExportedType.ts, 45, 14))

    export class C {
>C : Symbol(C, Decl(typeofAnExportedType.ts, 45, 21))

        foo: string;
>foo : Symbol(C.foo, Decl(typeofAnExportedType.ts, 46, 20))
    }
}
export var r13: typeof foo;
>r13 : Symbol(r13, Decl(typeofAnExportedType.ts, 50, 10))
>foo : Symbol(foo, Decl(typeofAnExportedType.ts, 41, 27), Decl(typeofAnExportedType.ts, 43, 25))

