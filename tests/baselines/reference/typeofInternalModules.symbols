//// [tests/cases/compiler/typeofInternalModules.ts] ////

=== typeofInternalModules.ts ===
namespace Outer {
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))

    export namespace instantiated {
>instantiated : Symbol(instantiated, Decl(typeofInternalModules.ts, 0, 17))

        export class C { }
>C : Symbol(C, Decl(typeofInternalModules.ts, 1, 35))
    }
    export namespace uninstantiated {
>uninstantiated : Symbol(uninstantiated, Decl(typeofInternalModules.ts, 3, 5))

        export interface P { }
>P : Symbol(P, Decl(typeofInternalModules.ts, 4, 37))
    }
}

import importInst = Outer.instantiated;
>importInst : Symbol(importInst, Decl(typeofInternalModules.ts, 7, 1))
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))
>instantiated : Symbol(importInst, Decl(typeofInternalModules.ts, 0, 17))

import importUninst = Outer.uninstantiated;
>importUninst : Symbol(importUninst, Decl(typeofInternalModules.ts, 9, 39))
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))
>uninstantiated : Symbol(importUninst, Decl(typeofInternalModules.ts, 3, 5))

var x1: typeof importInst.C = importInst.C;
>x1 : Symbol(x1, Decl(typeofInternalModules.ts, 12, 3))
>importInst.C : Symbol(importInst.C, Decl(typeofInternalModules.ts, 1, 35))
>importInst : Symbol(importInst, Decl(typeofInternalModules.ts, 7, 1))
>C : Symbol(importInst.C, Decl(typeofInternalModules.ts, 1, 35))
>importInst.C : Symbol(importInst.C, Decl(typeofInternalModules.ts, 1, 35))
>importInst : Symbol(importInst, Decl(typeofInternalModules.ts, 7, 1))
>C : Symbol(importInst.C, Decl(typeofInternalModules.ts, 1, 35))

var x2: importInst.C = new x1();
>x2 : Symbol(x2, Decl(typeofInternalModules.ts, 13, 3))
>importInst : Symbol(importInst, Decl(typeofInternalModules.ts, 7, 1))
>C : Symbol(importInst.C, Decl(typeofInternalModules.ts, 1, 35))
>x1 : Symbol(x1, Decl(typeofInternalModules.ts, 12, 3))

var x3: typeof importUninst.P; // Error again
>x3 : Symbol(x3, Decl(typeofInternalModules.ts, 14, 3))

var x4: Outer = Outer;
>x4 : Symbol(x4, Decl(typeofInternalModules.ts, 16, 3))
>Outer : Symbol(Outer)
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))

var x5: typeof importInst;
>x5 : Symbol(x5, Decl(typeofInternalModules.ts, 17, 3))
>importInst : Symbol(importInst, Decl(typeofInternalModules.ts, 7, 1))

x5 = Outer;
>x5 : Symbol(x5, Decl(typeofInternalModules.ts, 17, 3))
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))

x5 = Outer.instantiated;
>x5 : Symbol(x5, Decl(typeofInternalModules.ts, 17, 3))
>Outer.instantiated : Symbol(importInst, Decl(typeofInternalModules.ts, 0, 17))
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))
>instantiated : Symbol(importInst, Decl(typeofInternalModules.ts, 0, 17))

var x6: typeof importUninst;
>x6 : Symbol(x6, Decl(typeofInternalModules.ts, 20, 3))

var x7: typeof Outer = Outer;
>x7 : Symbol(x7, Decl(typeofInternalModules.ts, 21, 3))
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))
>Outer : Symbol(Outer, Decl(typeofInternalModules.ts, 0, 0))

x7 = importInst;
>x7 : Symbol(x7, Decl(typeofInternalModules.ts, 21, 3))
>importInst : Symbol(importInst, Decl(typeofInternalModules.ts, 7, 1))

