[
    "======== Resolving module 'a' from '/b/user.ts'. ========",
    "Module resolution kind is not specified, using 'Bundler'.",
    "Resolving in CJS mode with conditions 'require', 'types'.",
    "'baseUrl' option is set to '/', using this value to resolve non-relative module name 'a'.",
    "Resolving module name 'a' relative to base url '/' - '/a'.",
    "Loading module as file / folder, candidate module location '/a', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/a.ts' does not exist.",
    "File '/a.tsx' does not exist.",
    "File '/a.d.ts' does not exist.",
    "File '/a.js' does not exist.",
    "File '/a.jsx' does not exist.",
    "Found 'package.json' at '/a/package.json'.",
    "'package.json' has a 'typesVersions' field with version-specific path mappings.",
    "'package.json' does not have a 'typings' field.",
    "'package.json' does not have a 'types' field.",
    "'package.json' does not have a 'main' field.",
    "'package.json' has a 'typesVersions' entry '>=3.1.0-0' that matches compiler version '3.1.0-dev', looking for a pattern to match module name 'index'.",
    "Module name 'index', matched pattern '*'.",
    "Trying substitution 'ts3.1/*', candidate module location: 'ts3.1/index'.",
    "Loading module as file / folder, candidate module location '/a/ts3.1/index', target file types: TypeScript, JavaScript, Declaration, JSON.",
    "File '/a/ts3.1/index.ts' does not exist.",
    "File '/a/ts3.1/index.tsx' does not exist.",
    "File '/a/ts3.1/index.d.ts' exists - use it as a name resolution result.",
    "======== Module name 'a' was successfully resolved to '/a/ts3.1/index.d.ts'. ========"
]