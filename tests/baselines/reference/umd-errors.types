//// [tests/cases/conformance/externalModules/umd-errors.ts] ////

=== err1.d.ts ===
// Illegal, can't be in script file
export as namespace Foo;
>Foo : any
>    : ^^^

=== err2.d.ts ===
// Illegal, can't be in external ambient module
declare module "Foo" {
>"Foo" : typeof import("Foo")
>      : ^^^^^^^^^^^^^^^^^^^^

	export as namespace Bar;
>Bar : any
>    : ^^^
}

=== err3.d.ts ===
// Illegal, can't have modifiers
export var p;
>p : any
>  : ^^^

static export as namespace oo1;
>oo1 : typeof import("err3")
>    : ^^^^^^^^^^^^^^^^^^^^^

declare export as namespace oo2;
>oo2 : typeof import("err3")
>    : ^^^^^^^^^^^^^^^^^^^^^

public export as namespace oo3;
>oo3 : typeof import("err3")
>    : ^^^^^^^^^^^^^^^^^^^^^

const export as namespace oo4;
>oo4 : typeof import("err3")
>    : ^^^^^^^^^^^^^^^^^^^^^

=== err4.d.ts ===
// Illegal, must be at top-level
export namespace B {
>B : typeof B
>  : ^^^^^^^^

	export as namespace C1;
>C1 : any
>   : ^^^
}

=== err5.ts ===
// Illegal, may not appear in implementation files
export var v;
>v : any
>  : ^^^

export as namespace C2;
>C2 : any
>   : ^^^


