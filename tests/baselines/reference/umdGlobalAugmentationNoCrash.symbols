//// [tests/cases/compiler/umdGlobalAugmentationNoCrash.ts] ////

=== global.d.ts ===
declare global {
>global : Symbol(global, Decl(global.d.ts, 0, 0))

    const React: typeof import("./module");
>React : Symbol(React, Decl(global.d.ts, 1, 9))
}
export {};

=== module.d.ts ===
export as namespace React;
>React : Symbol(React, Decl(module.d.ts, 0, 0))

export function foo(): string;
>foo : Symbol(foo, Decl(module.d.ts, 0, 26))

=== some_module.ts ===
export {}
React.foo;
>React.foo : Symbol(foo, Decl(module.d.ts, 0, 26))
>React : Symbol(React, Decl(global.d.ts, 1, 9))
>foo : Symbol(foo, Decl(module.d.ts, 0, 26))

=== emits.ts ===
console.log("hello");
>console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
>console : Symbol(console, Decl(lib.dom.d.ts, --, --))
>log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))

React.foo;
>React.foo : Symbol(foo, Decl(module.d.ts, 0, 26))
>React : Symbol(React, Decl(global.d.ts, 1, 9))
>foo : Symbol(foo, Decl(module.d.ts, 0, 26))

