uncalledFunctionChecksInConditional2.ts(20,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
uncalledFunctionChecksInConditional2.ts(30,7): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
uncalledFunctionChecksInConditional2.ts(49,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
uncalledFunctionChecksInConditional2.ts(63,7): error TS2367: This comparison appears to be unintentional because the types 'boolean' and 'undefined' have no overlap.


==== uncalledFunctionChecksInConditional2.ts (4 errors) ====
    {
      const perf = window.performance
    
      // Simplified
      if (
        perf &&
        perf.measure &&
        perf.clearMarks &&
        perf.clearMeasures
      ) {
        perf.measure("");
        perf.clearMarks("")
        perf.clearMeasures("")
      }
    
      // With ||
      if (
        perf &&
        perf.mark &&
        perf.measure || !!true
        ~~~~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
      ) {
        perf.mark("");
      }
    
      // With ??
      if (
        (
          perf &&
          perf.mark &&
          perf.measure
          ~~~~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        ) ?? !!true
      ) {
        perf.mark("");
      }
    };
    
    // Original #49192
    declare let inBrowser: boolean;
    {
      let mark;
      let measure;
      const perf = inBrowser && window.performance
      /* istanbul ignore if */
      if (
        perf &&
        perf.mark &&
        perf.measure &&
        perf.clearMarks &&
        perf.clearMeasures
        ~~~~~~~~~~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
      ) {
        mark = (tag) => perf.mark(tag)
        measure = (name, startTag, endTag) => {
          perf.measure(name, startTag, endTag)
          perf.clearMarks(startTag)
          perf.clearMarks(endTag)
          // perf.clearMeasures(name)
        }
      }
    };
    
    let _isMobile: boolean;
    function isMobile() {
      if (_isMobile === undefined) {
          ~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2367: This comparison appears to be unintentional because the types 'boolean' and 'undefined' have no overlap.
        const isMobileMatch =
          typeof window !== 'undefined' &&
          window.matchMedia && // no error
          window.matchMedia('(max-device-width: 680px)');
        _isMobile = isMobileMatch && isMobileMatch.matches;
      }
      return _isMobile;
    }
    