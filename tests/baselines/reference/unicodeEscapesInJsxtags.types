//// [tests/cases/conformance/jsx/unicodeEscapesInJsxtags.tsx] ////

=== file.tsx ===
import * as React from "react";
>React : typeof React
>      : ^^^^^^^^^^^^

declare global {
>global : any
>       : ^^^

    namespace JSX {
        interface IntrinsicElements {
            "a-b": any;
>"a-b" : any
>      : ^^^

            "a-c": any;
>"a-c" : any
>      : ^^^
        }
    }
}
const Compa = (x: {x: number}) => <div>{"" + x}</div>;
>Compa : (x: { x: number; }) => JSX.Element
>      : ^ ^^              ^^^^^^^^^^^^^^^^
>(x: {x: number}) => <div>{"" + x}</div> : (x: { x: number; }) => JSX.Element
>                                        : ^ ^^              ^^^^^^^^^^^^^^^^
>x : { x: number; }
>  : ^^^^^      ^^^
>x : number
>  : ^^^^^^
><div>{"" + x}</div> : JSX.Element
>                    : ^^^^^^^^^^^
>div : any
>    : ^^^
>"" + x : string
>       : ^^^^^^
>"" : ""
>   : ^^
>x : { x: number; }
>  : ^^^^^      ^^^
>div : any
>    : ^^^

const x = { video: () => null }
>x : { video: () => any; }
>  : ^^^^^^^^^^^^^^^^^^^^^
>{ video: () => null } : { video: () => any; }
>                      : ^^^^^^^^^^^^^^^^^^^^^
>video : () => any
>      : ^^^^^^^^^
>() => null : () => any
>           : ^^^^^^^^^

// unicode escape sequence is not allowed in tag name or JSX attribute name.
// tag name:
; <\u0061></a>
><\u0061></a> : JSX.Element
>             : ^^^^^^^^^^^
>\u0061 : any
>       : ^^^
>a : any
>  : ^^^

; <\u0061-b></a-b>
><\u0061-b></a-b> : JSX.Element
>                 : ^^^^^^^^^^^
>\u0061-b : any
>         : ^^^
>a-b : any
>    : ^^^

; <a-\u0063></a-c>
><a-\u0063></a-c> : JSX.Element
>                 : ^^^^^^^^^^^
>a-\u0063 : any
>         : ^^^
>a-c : any
>    : ^^^

; <Comp\u0061 x={12} />
><Comp\u0061 x={12} /> : JSX.Element
>                      : ^^^^^^^^^^^
>Comp\u0061 : (x: { x: number; }) => JSX.Element
>           : ^ ^^              ^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>12 : 12
>   : ^^

; <x.\u0076ideo />
><x.\u0076ideo /> : JSX.Element
>                 : ^^^^^^^^^^^
>x.\u0076ideo : () => any
>             : ^^^^^^^^^
>x : { video: () => any; }
>  : ^^^^^^^^^^^^^^^^^^^^^
>\u0076ideo : () => any
>           : ^^^^^^^^^

; <\u{0061}></a>
><\u{0061}></a> : JSX.Element
>               : ^^^^^^^^^^^
>\u{0061} : any
>         : ^^^
>a : any
>  : ^^^

; <\u{0061}-b></a-b>
><\u{0061}-b></a-b> : JSX.Element
>                   : ^^^^^^^^^^^
>\u{0061}-b : any
>           : ^^^
>a-b : any
>    : ^^^

; <a-\u{0063}></a-c>
><a-\u{0063}></a-c> : JSX.Element
>                   : ^^^^^^^^^^^
>a-\u{0063} : any
>           : ^^^
>a-c : any
>    : ^^^

; <Comp\u{0061} x={12} />
><Comp\u{0061} x={12} /> : JSX.Element
>                        : ^^^^^^^^^^^
>Comp\u{0061} : (x: { x: number; }) => JSX.Element
>             : ^ ^^              ^^^^^^^^^^^^^^^^
>x : number
>  : ^^^^^^
>12 : 12
>   : ^^

// attribute name
;<video data-\u0076ideo />
><video data-\u0076ideo /> : JSX.Element
>                          : ^^^^^^^^^^^
>video : any
>      : ^^^
>data-\u0076ideo : true
>                : ^^^^

;<video \u0073rc="" />
><video \u0073rc="" /> : JSX.Element
>                      : ^^^^^^^^^^^
>video : any
>      : ^^^
>\u0073rc : string
>         : ^^^^^^

