//// [tests/cases/conformance/types/union/unionTypeCallSignatures2.ts] ////

=== unionTypeCallSignatures2.ts ===
interface A {
>A : Symbol(A, Decl(unionTypeCallSignatures2.ts, 0, 0))

    (x: number): number;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 1, 5))

    (x: string, y?: string): boolean;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 2, 5))
>y : Symbol(y, Decl(unionTypeCallSignatures2.ts, 2, 15))

    (x: Date): void;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 3, 5))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    <T>(x: T[]): T[];
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 4, 5))
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 4, 8))
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 4, 5))
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 4, 5))
}

interface B {
>B : Symbol(B, Decl(unionTypeCallSignatures2.ts, 5, 1))

    (x: number): number;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 8, 5))

    (x: string): string;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 9, 5))

    (x: Date): void;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 10, 5))
>Date : Symbol(Date, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.scripthost.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))

    <T>(x: T[]): T[];
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 11, 5))
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 11, 8))
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 11, 5))
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 11, 5))
}

interface C {
>C : Symbol(C, Decl(unionTypeCallSignatures2.ts, 12, 1))

    (x: string, ...y: string[]): number;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 15, 5))
>y : Symbol(y, Decl(unionTypeCallSignatures2.ts, 15, 15))

    (x: number, s?: string): number;
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 16, 5))
>s : Symbol(s, Decl(unionTypeCallSignatures2.ts, 16, 15))

    <T>(x: T[]): T[];
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 17, 5))
>x : Symbol(x, Decl(unionTypeCallSignatures2.ts, 17, 8))
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 17, 5))
>T : Symbol(T, Decl(unionTypeCallSignatures2.ts, 17, 5))
}

var f1: A | B | C;
>f1 : Symbol(f1, Decl(unionTypeCallSignatures2.ts, 20, 3))
>A : Symbol(A, Decl(unionTypeCallSignatures2.ts, 0, 0))
>B : Symbol(B, Decl(unionTypeCallSignatures2.ts, 5, 1))
>C : Symbol(C, Decl(unionTypeCallSignatures2.ts, 12, 1))

var n1 = f1(42);             // number
>n1 : Symbol(n1, Decl(unionTypeCallSignatures2.ts, 21, 3))
>f1 : Symbol(f1, Decl(unionTypeCallSignatures2.ts, 20, 3))

var s1 = f1("abc");          // boolean | string | number
>s1 : Symbol(s1, Decl(unionTypeCallSignatures2.ts, 22, 3))
>f1 : Symbol(f1, Decl(unionTypeCallSignatures2.ts, 20, 3))

var a1 = f1([true, false]);  // boolean[]
>a1 : Symbol(a1, Decl(unionTypeCallSignatures2.ts, 23, 3))
>f1 : Symbol(f1, Decl(unionTypeCallSignatures2.ts, 20, 3))

var f2: C | B | A;
>f2 : Symbol(f2, Decl(unionTypeCallSignatures2.ts, 25, 3))
>C : Symbol(C, Decl(unionTypeCallSignatures2.ts, 12, 1))
>B : Symbol(B, Decl(unionTypeCallSignatures2.ts, 5, 1))
>A : Symbol(A, Decl(unionTypeCallSignatures2.ts, 0, 0))

var n2 = f2(42);             // number
>n2 : Symbol(n2, Decl(unionTypeCallSignatures2.ts, 26, 3))
>f2 : Symbol(f2, Decl(unionTypeCallSignatures2.ts, 25, 3))

var s2 = f2("abc");          // number | string | boolean
>s2 : Symbol(s2, Decl(unionTypeCallSignatures2.ts, 27, 3))
>f2 : Symbol(f2, Decl(unionTypeCallSignatures2.ts, 25, 3))

var a2 = f2([true, false]);  // boolean[]
>a2 : Symbol(a2, Decl(unionTypeCallSignatures2.ts, 28, 3))
>f2 : Symbol(f2, Decl(unionTypeCallSignatures2.ts, 25, 3))

var f3: B | A | C;
>f3 : Symbol(f3, Decl(unionTypeCallSignatures2.ts, 30, 3))
>B : Symbol(B, Decl(unionTypeCallSignatures2.ts, 5, 1))
>A : Symbol(A, Decl(unionTypeCallSignatures2.ts, 0, 0))
>C : Symbol(C, Decl(unionTypeCallSignatures2.ts, 12, 1))

var n3 = f3(42);             // number
>n3 : Symbol(n3, Decl(unionTypeCallSignatures2.ts, 31, 3))
>f3 : Symbol(f3, Decl(unionTypeCallSignatures2.ts, 30, 3))

var s3 = f3("abc");          // string | boolean | number
>s3 : Symbol(s3, Decl(unionTypeCallSignatures2.ts, 32, 3))
>f3 : Symbol(f3, Decl(unionTypeCallSignatures2.ts, 30, 3))

var a3 = f3([true, false]);  // boolean[]
>a3 : Symbol(a3, Decl(unionTypeCallSignatures2.ts, 33, 3))
>f3 : Symbol(f3, Decl(unionTypeCallSignatures2.ts, 30, 3))


