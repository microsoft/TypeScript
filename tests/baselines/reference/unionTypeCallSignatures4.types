//// [tests/cases/conformance/types/union/unionTypeCallSignatures4.ts] ////

=== unionTypeCallSignatures4.ts ===
type F1 = (a: string, b?: string) => void;
>F1 : F1
>   : ^^
>a : string
>  : ^^^^^^
>b : string
>  : ^^^^^^

type F2 = (a: string, b?: string, c?: string) => void;
>F2 : F2
>   : ^^
>a : string
>  : ^^^^^^
>b : string
>  : ^^^^^^
>c : string
>  : ^^^^^^

type F3 = (a: string, ...rest: string[]) => void;
>F3 : F3
>   : ^^
>a : string
>  : ^^^^^^
>rest : string[]
>     : ^^^^^^^^

type F4 = (a: string, b?: string, ...rest: string[]) => void;
>F4 : F4
>   : ^^
>a : string
>  : ^^^^^^
>b : string
>  : ^^^^^^
>rest : string[]
>     : ^^^^^^^^

type F5 = (a: string, b: string) => void;
>F5 : F5
>   : ^^
>a : string
>  : ^^^^^^
>b : string
>  : ^^^^^^

var f12: F1 | F2;
>f12 : F1 | F2
>    : ^^^^^^^

f12("a");
>f12("a") : void
>         : ^^^^
>f12 : F1 | F2
>    : ^^^^^^^
>"a" : "a"
>    : ^^^

f12("a", "b");
>f12("a", "b") : void
>              : ^^^^
>f12 : F1 | F2
>    : ^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^

f12("a", "b", "c");  // ok
>f12("a", "b", "c") : void
>                   : ^^^^
>f12 : F1 | F2
>    : ^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^
>"c" : "c"
>    : ^^^

var f34: F3 | F4;
>f34 : F3 | F4
>    : ^^^^^^^

f34("a");
>f34("a") : void
>         : ^^^^
>f34 : F3 | F4
>    : ^^^^^^^
>"a" : "a"
>    : ^^^

f34("a", "b");
>f34("a", "b") : void
>              : ^^^^
>f34 : F3 | F4
>    : ^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^

f34("a", "b", "c");
>f34("a", "b", "c") : void
>                   : ^^^^
>f34 : F3 | F4
>    : ^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^
>"c" : "c"
>    : ^^^

var f1234: F1 | F2 | F3 | F4;
>f1234 : F1 | F2 | F3 | F4
>      : ^^^^^^^^^^^^^^^^^

f1234("a");
>f1234("a") : void
>           : ^^^^
>f1234 : F1 | F2 | F3 | F4
>      : ^^^^^^^^^^^^^^^^^
>"a" : "a"
>    : ^^^

f1234("a", "b");
>f1234("a", "b") : void
>                : ^^^^
>f1234 : F1 | F2 | F3 | F4
>      : ^^^^^^^^^^^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^

f1234("a", "b", "c");  // ok
>f1234("a", "b", "c") : void
>                     : ^^^^
>f1234 : F1 | F2 | F3 | F4
>      : ^^^^^^^^^^^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^
>"c" : "c"
>    : ^^^

var f12345: F1 | F2 | F3 | F4 | F5;
>f12345 : F1 | F2 | F3 | F4 | F5
>       : ^^^^^^^^^^^^^^^^^^^^^^

f12345("a");  // error
>f12345("a") : void
>            : ^^^^
>f12345 : F1 | F2 | F3 | F4 | F5
>       : ^^^^^^^^^^^^^^^^^^^^^^
>"a" : "a"
>    : ^^^

f12345("a", "b");
>f12345("a", "b") : void
>                 : ^^^^
>f12345 : F1 | F2 | F3 | F4 | F5
>       : ^^^^^^^^^^^^^^^^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^

f12345("a", "b", "c");  // error
>f12345("a", "b", "c") : void
>                      : ^^^^
>f12345 : F1 | F2 | F3 | F4 | F5
>       : ^^^^^^^^^^^^^^^^^^^^^^
>"a" : "a"
>    : ^^^
>"b" : "b"
>    : ^^^
>"c" : "c"
>    : ^^^

