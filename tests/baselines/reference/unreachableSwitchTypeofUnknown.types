//// [tests/cases/compiler/unreachableSwitchTypeofUnknown.ts] ////

=== unreachable.ts ===
const unreachable = (x: unknown): number => {
>unreachable : (x: unknown) => number
>            : ^ ^^       ^^^^^      
>(x: unknown): number => {    switch (typeof x) {        case 'string': return 0        case 'number': return 0        case 'bigint': return 0        case 'boolean': return 0        case 'symbol': return 0        case 'undefined': return 0        case 'object': return 0        case 'function': return 0    }    x;} : (x: unknown) => number
>                                                                                                                                                                                                                                                                                                                           : ^ ^^       ^^^^^      
>x : unknown
>  : ^^^^^^^

    switch (typeof x) {
>typeof x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : unknown
>  : ^^^^^^^

        case 'string': return 0
>'string' : "string"
>         : ^^^^^^^^
>0 : 0
>  : ^

        case 'number': return 0
>'number' : "number"
>         : ^^^^^^^^
>0 : 0
>  : ^

        case 'bigint': return 0
>'bigint' : "bigint"
>         : ^^^^^^^^
>0 : 0
>  : ^

        case 'boolean': return 0
>'boolean' : "boolean"
>          : ^^^^^^^^^
>0 : 0
>  : ^

        case 'symbol': return 0
>'symbol' : "symbol"
>         : ^^^^^^^^
>0 : 0
>  : ^

        case 'undefined': return 0
>'undefined' : "undefined"
>            : ^^^^^^^^^^^
>0 : 0
>  : ^

        case 'object': return 0
>'object' : "object"
>         : ^^^^^^^^
>0 : 0
>  : ^

        case 'function': return 0
>'function' : "function"
>           : ^^^^^^^^^^
>0 : 0
>  : ^
    }
    x;
>x : unknown
>  : ^^^^^^^
}
