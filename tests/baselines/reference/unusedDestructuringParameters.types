//// [tests/cases/compiler/unusedDestructuringParameters.ts] ////

=== unusedDestructuringParameters.ts ===
const f = ([a]) => { };
>f : ([a]: [any]) => void
>  : ^   ^^^^^^^^^^^^^^^^
>([a]) => { } : ([a]: [any]) => void
>             : ^   ^^^^^^^^^^^^^^^^
>a : any
>  : ^^^

f([1]);
>f([1]) : void
>       : ^^^^
>f : ([a]: [any]) => void
>  : ^   ^^^^^^^^^^^^^^^^
>[1] : [number]
>    : ^^^^^^^^
>1 : 1
>  : ^

const f2 = ({a}) => { };
>f2 : ({ a }: { a: any; }) => void
>   : ^     ^^^^^^^^^^^^^^^^^^^^^^
>({a}) => { } : ({ a }: { a: any; }) => void
>             : ^     ^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^

f2({ a: 10 });
>f2({ a: 10 }) : void
>              : ^^^^
>f2 : ({ a }: { a: any; }) => void
>   : ^     ^^^^^^^^^^^^^^^^^^^^^^
>{ a: 10 } : { a: number; }
>          : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>10 : 10
>   : ^^

const f3 = ([_]) => { };
>f3 : ([_]: [any]) => void
>   : ^   ^^^^^^^^^^^^^^^^
>([_]) => { } : ([_]: [any]) => void
>             : ^   ^^^^^^^^^^^^^^^^
>_ : any
>  : ^^^

f3([10]);
>f3([10]) : void
>         : ^^^^
>f3 : ([_]: [any]) => void
>   : ^   ^^^^^^^^^^^^^^^^
>[10] : [number]
>     : ^^^^^^^^
>10 : 10
>   : ^^

