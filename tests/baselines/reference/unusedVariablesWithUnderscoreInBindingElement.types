//// [tests/cases/compiler/unusedVariablesWithUnderscoreInBindingElement.ts] ////

=== Performance Stats ===
Type Count: 250 -> 1,000

=== unusedVariablesWithUnderscoreInBindingElement.ts ===
function t1() {
>t1 : () => void
>   : ^^^^^^^^^^

    const [_a1, b1] = [1, 2];
>_a1 : number
>    : ^^^^^^
>b1 : number
>   : ^^^^^^
>[1, 2] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^

    console.log(b1);
>console.log(b1) : void
>                : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>b1 : number
>   : ^^^^^^

    const [a2, _b2] = [1, 2];
>a2 : number
>   : ^^^^^^
>_b2 : number
>    : ^^^^^^
>[1, 2] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^

    console.log(a2);
>console.log(a2) : void
>                : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>a2 : number
>   : ^^^^^^

    const [_a3, _b3] = [1, 2];
>_a3 : number
>    : ^^^^^^
>_b3 : number
>    : ^^^^^^
>[1, 2] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^
}

function t2() {
>t2 : () => void
>   : ^^^^^^^^^^

    const [_a1, b1] = [1, 2];
>_a1 : number
>    : ^^^^^^
>b1 : number
>   : ^^^^^^
>[1, 2] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^

    const [a2, _b2] = [1, 2];
>a2 : number
>   : ^^^^^^
>_b2 : number
>    : ^^^^^^
>[1, 2] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^

    const [a3, b3] = [1, 2];
>a3 : number
>   : ^^^^^^
>b3 : number
>   : ^^^^^^
>[1, 2] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>2 : 2
>  : ^
}

function t3() {
>t3 : () => void
>   : ^^^^^^^^^^

    const [_a1, [[_b1, c1]], d1, _e1] = [1, [[2, 3]], 4, 5];
>_a1 : number
>    : ^^^^^^
>_b1 : number
>    : ^^^^^^
>c1 : number
>   : ^^^^^^
>d1 : number
>   : ^^^^^^
>_e1 : number
>    : ^^^^^^
>[1, [[2, 3]], 4, 5] : [number, [[number, number]], number, number]
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>[[2, 3]] : [[number, number]]
>         : ^^^^^^^^^^^^^^^^^^
>[2, 3] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>2 : 2
>  : ^
>3 : 3
>  : ^
>4 : 4
>  : ^
>5 : 5
>  : ^

    console.log(c1, d1);
>console.log(c1, d1) : void
>                    : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>c1 : number
>   : ^^^^^^
>d1 : number
>   : ^^^^^^

    const [_a2, [[_b2, _c2]], _d2, _e2] = [1, [[2, 3]], 4, 5];
>_a2 : number
>    : ^^^^^^
>_b2 : number
>    : ^^^^^^
>_c2 : number
>    : ^^^^^^
>_d2 : number
>    : ^^^^^^
>_e2 : number
>    : ^^^^^^
>[1, [[2, 3]], 4, 5] : [number, [[number, number]], number, number]
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>[[2, 3]] : [[number, number]]
>         : ^^^^^^^^^^^^^^^^^^
>[2, 3] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>2 : 2
>  : ^
>3 : 3
>  : ^
>4 : 4
>  : ^
>5 : 5
>  : ^

    const [a3, [[b3, c3]], d3, e3] = [1, [[2, 3]], 4, 5];
>a3 : number
>   : ^^^^^^
>b3 : number
>   : ^^^^^^
>c3 : number
>   : ^^^^^^
>d3 : number
>   : ^^^^^^
>e3 : number
>   : ^^^^^^
>[1, [[2, 3]], 4, 5] : [number, [[number, number]], number, number]
>                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : 1
>  : ^
>[[2, 3]] : [[number, number]]
>         : ^^^^^^^^^^^^^^^^^^
>[2, 3] : [number, number]
>       : ^^^^^^^^^^^^^^^^
>2 : 2
>  : ^
>3 : 3
>  : ^
>4 : 4
>  : ^
>5 : 5
>  : ^
}

function t4() {
>t4 : () => void
>   : ^^^^^^^^^^

    const { a1: _a1, b1 } = { a1: 1, b1: 1 };
>a1 : any
>   : ^^^
>_a1 : number
>    : ^^^^^^
>b1 : number
>   : ^^^^^^
>{ a1: 1, b1: 1 } : { a1: number; b1: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a1 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b1 : number
>   : ^^^^^^
>1 : 1
>  : ^

    console.log(b1);
>console.log(b1) : void
>                : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>b1 : number
>   : ^^^^^^

    const { a2, b2: _b2 } = { a2: 1, b2: 1 };
>a2 : number
>   : ^^^^^^
>b2 : any
>   : ^^^
>_b2 : number
>    : ^^^^^^
>{ a2: 1, b2: 1 } : { a2: number; b2: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a2 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b2 : number
>   : ^^^^^^
>1 : 1
>  : ^

    console.log(a2);
>console.log(a2) : void
>                : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>a2 : number
>   : ^^^^^^

    const { a3: _a3, b3: _b3 } = { a3: 1, b3: 1 };
>a3 : any
>   : ^^^
>_a3 : number
>    : ^^^^^^
>b3 : any
>   : ^^^
>_b3 : number
>    : ^^^^^^
>{ a3: 1, b3: 1 } : { a3: number; b3: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a3 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b3 : number
>   : ^^^^^^
>1 : 1
>  : ^
}

function t5() {
>t5 : () => void
>   : ^^^^^^^^^^

    const { a1: _a1, b1 } = { a1: 1, b1: 1 };
>a1 : any
>   : ^^^
>_a1 : number
>    : ^^^^^^
>b1 : number
>   : ^^^^^^
>{ a1: 1, b1: 1 } : { a1: number; b1: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a1 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b1 : number
>   : ^^^^^^
>1 : 1
>  : ^

    const { a2, b2: _b2 } = { a2: 1, b2: 1 };
>a2 : number
>   : ^^^^^^
>b2 : any
>   : ^^^
>_b2 : number
>    : ^^^^^^
>{ a2: 1, b2: 1 } : { a2: number; b2: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a2 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b2 : number
>   : ^^^^^^
>1 : 1
>  : ^

    const { a3, b3 } = { a3: 1, b3: 1 };
>a3 : number
>   : ^^^^^^
>b3 : number
>   : ^^^^^^
>{ a3: 1, b3: 1 } : { a3: number; b3: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a3 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b3 : number
>   : ^^^^^^
>1 : 1
>  : ^
}

function t6() {
>t6 : () => void
>   : ^^^^^^^^^^

    const {
        a1: _a1,
>a1 : any
>   : ^^^
>_a1 : number
>    : ^^^^^^

        b1: {
>b1 : any
>   : ^^^

            b11: {
>b11 : any
>    : ^^^

                b111: _b111,
>b111 : any
>     : ^^^
>_b111 : number
>      : ^^^^^^

                b112
>b112 : number
>     : ^^^^^^
            }
        },
        c1,
>c1 : number
>   : ^^^^^^

        d1: _d1
>d1 : any
>   : ^^^
>_d1 : number
>    : ^^^^^^

    } = { a1: 1, b1: { b11: { b111: 1, b112: 1 } }, c1: 1, d1: 1 };
>{ a1: 1, b1: { b11: { b111: 1, b112: 1 } }, c1: 1, d1: 1 } : { a1: number; b1: { b11: { b111: number; b112: number; }; }; c1: number; d1: number; }
>                                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a1 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b1 : { b11: { b111: number; b112: number; }; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b11: { b111: 1, b112: 1 } } : { b11: { b111: number; b112: number; }; }
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b11 : { b111: number; b112: number; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b111: 1, b112: 1 } : { b111: number; b112: number; }
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b111 : number
>     : ^^^^^^
>1 : 1
>  : ^
>b112 : number
>     : ^^^^^^
>1 : 1
>  : ^
>c1 : number
>   : ^^^^^^
>1 : 1
>  : ^
>d1 : number
>   : ^^^^^^
>1 : 1
>  : ^

    console.log(b112, c1);
>console.log(b112, c1) : void
>                      : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>b112 : number
>     : ^^^^^^
>c1 : number
>   : ^^^^^^

    const {
        a2: _a2,
>a2 : any
>   : ^^^
>_a2 : number
>    : ^^^^^^

        b2: {
>b2 : any
>   : ^^^

            b21: {
>b21 : any
>    : ^^^

                b211: _b211, b212: _b212
>b211 : any
>     : ^^^
>_b211 : number
>      : ^^^^^^
>b212 : any
>     : ^^^
>_b212 : number
>      : ^^^^^^
            }
        },
        c2: _c2,
>c2 : any
>   : ^^^
>_c2 : number
>    : ^^^^^^

        d2: _d2
>d2 : any
>   : ^^^
>_d2 : number
>    : ^^^^^^

    } = { a2: 1, b2: { b21: { b211: 1, b212: 1 } }, c2: 1, d2: 1 };
>{ a2: 1, b2: { b21: { b211: 1, b212: 1 } }, c2: 1, d2: 1 } : { a2: number; b2: { b21: { b211: number; b212: number; }; }; c2: number; d2: number; }
>                                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a2 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b2 : { b21: { b211: number; b212: number; }; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b21: { b211: 1, b212: 1 } } : { b21: { b211: number; b212: number; }; }
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b21 : { b211: number; b212: number; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b211: 1, b212: 1 } : { b211: number; b212: number; }
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b211 : number
>     : ^^^^^^
>1 : 1
>  : ^
>b212 : number
>     : ^^^^^^
>1 : 1
>  : ^
>c2 : number
>   : ^^^^^^
>1 : 1
>  : ^
>d2 : number
>   : ^^^^^^
>1 : 1
>  : ^

    const {
        a3,
>a3 : number
>   : ^^^^^^

        b3: {
>b3 : any
>   : ^^^

            b31: {
>b31 : any
>    : ^^^

                b311, b312
>b311 : number
>     : ^^^^^^
>b312 : number
>     : ^^^^^^
            }
        },
        c3,
>c3 : number
>   : ^^^^^^

        d3
>d3 : number
>   : ^^^^^^

    } = { a3: 1, b3: { b31: { b311: 1, b312: 1 } }, c3: 1, d3: 1 };
>{ a3: 1, b3: { b31: { b311: 1, b312: 1 } }, c3: 1, d3: 1 } : { a3: number; b3: { b31: { b311: number; b312: number; }; }; c3: number; d3: number; }
>                                                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a3 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b3 : { b31: { b311: number; b312: number; }; }
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b31: { b311: 1, b312: 1 } } : { b31: { b311: number; b312: number; }; }
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b31 : { b311: number; b312: number; }
>    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b311: 1, b312: 1 } : { b311: number; b312: number; }
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>b311 : number
>     : ^^^^^^
>1 : 1
>  : ^
>b312 : number
>     : ^^^^^^
>1 : 1
>  : ^
>c3 : number
>   : ^^^^^^
>1 : 1
>  : ^
>d3 : number
>   : ^^^^^^
>1 : 1
>  : ^
}

function t7() {
>t7 : () => void
>   : ^^^^^^^^^^

    // error
    const { _a1, _b1 } = { _a1: 1, _b1: 1 };
>_a1 : number
>    : ^^^^^^
>_b1 : number
>    : ^^^^^^
>{ _a1: 1, _b1: 1 } : { _a1: number; _b1: number; }
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>_a1 : number
>    : ^^^^^^
>1 : 1
>  : ^
>_b1 : number
>    : ^^^^^^
>1 : 1
>  : ^

    // ok
    const { a2: _a2, b2: _b2 } = { a2: 1, b2: 1 };
>a2 : any
>   : ^^^
>_a2 : number
>    : ^^^^^^
>b2 : any
>   : ^^^
>_b2 : number
>    : ^^^^^^
>{ a2: 1, b2: 1 } : { a2: number; b2: number; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a2 : number
>   : ^^^^^^
>1 : 1
>  : ^
>b2 : number
>   : ^^^^^^
>1 : 1
>  : ^

    // ok
    const { _a3: _ignoreA3, _b3: _ignoreB3 } = { _a3: 1, _b3: 1 };
>_a3 : any
>    : ^^^
>_ignoreA3 : number
>          : ^^^^^^
>_b3 : any
>    : ^^^
>_ignoreB3 : number
>          : ^^^^^^
>{ _a3: 1, _b3: 1 } : { _a3: number; _b3: number; }
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>_a3 : number
>    : ^^^^^^
>1 : 1
>  : ^
>_b3 : number
>    : ^^^^^^
>1 : 1
>  : ^
}

