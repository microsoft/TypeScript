//// [tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithObjectLiterals1.ts] ////

=== usingDeclarationsWithObjectLiterals1.ts ===
interface MyDisposable {
>MyDisposable : Symbol(MyDisposable, Decl(usingDeclarationsWithObjectLiterals1.ts, 0, 0))

  value: number;
>value : Symbol(MyDisposable.value, Decl(usingDeclarationsWithObjectLiterals1.ts, 0, 24))

  [Symbol.dispose](): void;
>[Symbol.dispose] : Symbol(MyDisposable[Symbol.dispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 1, 16))
>Symbol.dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
}

{
  using _ = { [Symbol.dispose]() {} };
>_ : Symbol(_, Decl(usingDeclarationsWithObjectLiterals1.ts, 6, 7))
>[Symbol.dispose] : Symbol([Symbol.dispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 6, 13))
>Symbol.dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
}

{
  using _ = { [Symbol.dispose]() {}, value: 1 };
>_ : Symbol(_, Decl(usingDeclarationsWithObjectLiterals1.ts, 10, 7))
>[Symbol.dispose] : Symbol([Symbol.dispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 10, 13))
>Symbol.dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
>value : Symbol(value, Decl(usingDeclarationsWithObjectLiterals1.ts, 10, 36))
}

{
  using _: MyDisposable = { [Symbol.dispose]() {}, value: 1, extra: "foo" };
>_ : Symbol(_, Decl(usingDeclarationsWithObjectLiterals1.ts, 14, 7))
>MyDisposable : Symbol(MyDisposable, Decl(usingDeclarationsWithObjectLiterals1.ts, 0, 0))
>[Symbol.dispose] : Symbol([Symbol.dispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 14, 27))
>Symbol.dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>dispose : Symbol(SymbolConstructor.dispose, Decl(lib.esnext.disposable.d.ts, --, --))
>value : Symbol(value, Decl(usingDeclarationsWithObjectLiterals1.ts, 14, 50))
>extra : Symbol(extra, Decl(usingDeclarationsWithObjectLiterals1.ts, 14, 60))
}

interface MyAsyncDisposable {
>MyAsyncDisposable : Symbol(MyAsyncDisposable, Decl(usingDeclarationsWithObjectLiterals1.ts, 15, 1))

  value: number;
>value : Symbol(MyAsyncDisposable.value, Decl(usingDeclarationsWithObjectLiterals1.ts, 17, 29))

  [Symbol.asyncDispose](): Promise<void>;
>[Symbol.asyncDispose] : Symbol(MyAsyncDisposable[Symbol.asyncDispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 18, 16))
>Symbol.asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2018.promise.d.ts, --, --))
}

async function f() {
>f : Symbol(f, Decl(usingDeclarationsWithObjectLiterals1.ts, 20, 1))
  {
    await using _ = { async [Symbol.asyncDispose]() {} };
>_ : Symbol(_, Decl(usingDeclarationsWithObjectLiterals1.ts, 24, 15))
>[Symbol.asyncDispose] : Symbol([Symbol.asyncDispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 24, 21))
>Symbol.asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
  }

  {
    await using _ = { async [Symbol.asyncDispose]() {}, value: 1 };
>_ : Symbol(_, Decl(usingDeclarationsWithObjectLiterals1.ts, 28, 15))
>[Symbol.asyncDispose] : Symbol([Symbol.asyncDispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 28, 21))
>Symbol.asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
>value : Symbol(value, Decl(usingDeclarationsWithObjectLiterals1.ts, 28, 55))
  }

  {
    await using _: MyAsyncDisposable = {
>_ : Symbol(_, Decl(usingDeclarationsWithObjectLiterals1.ts, 32, 15))
>MyAsyncDisposable : Symbol(MyAsyncDisposable, Decl(usingDeclarationsWithObjectLiterals1.ts, 15, 1))

      async [Symbol.asyncDispose]() {},
>[Symbol.asyncDispose] : Symbol([Symbol.asyncDispose], Decl(usingDeclarationsWithObjectLiterals1.ts, 32, 40))
>Symbol.asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2019.symbol.d.ts, --, --))
>asyncDispose : Symbol(SymbolConstructor.asyncDispose, Decl(lib.esnext.disposable.d.ts, --, --))

      value: 1,
>value : Symbol(value, Decl(usingDeclarationsWithObjectLiterals1.ts, 33, 39))

      extra: "foo",
>extra : Symbol(extra, Decl(usingDeclarationsWithObjectLiterals1.ts, 34, 15))

    };
  }
}

export {};

