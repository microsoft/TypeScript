//// [tests/cases/conformance/types/primitives/null/validNullAssignments.ts] ////

=== validNullAssignments.ts ===
var a: number = null;
>a : Symbol(a, Decl(validNullAssignments.ts, 0, 3))

var b: boolean = null;
>b : Symbol(b, Decl(validNullAssignments.ts, 1, 3))

var c: string = null;
>c : Symbol(c, Decl(validNullAssignments.ts, 2, 3))

var d: void = null;
>d : Symbol(d, Decl(validNullAssignments.ts, 3, 3))

var e: typeof undefined = null;
>e : Symbol(e, Decl(validNullAssignments.ts, 5, 3))
>undefined : Symbol(undefined)

e = null; // ok
>e : Symbol(e, Decl(validNullAssignments.ts, 5, 3))

enum E { A }
>E : Symbol(E, Decl(validNullAssignments.ts, 6, 9))
>A : Symbol(E.A, Decl(validNullAssignments.ts, 8, 8))

E.A = null; // error
>E.A : Symbol(E.A, Decl(validNullAssignments.ts, 8, 8))
>E : Symbol(E, Decl(validNullAssignments.ts, 6, 9))
>A : Symbol(E.A, Decl(validNullAssignments.ts, 8, 8))

class C { foo: string }
>C : Symbol(C, Decl(validNullAssignments.ts, 9, 11))
>foo : Symbol(C.foo, Decl(validNullAssignments.ts, 11, 9))

var f: C;
>f : Symbol(f, Decl(validNullAssignments.ts, 12, 3))
>C : Symbol(C, Decl(validNullAssignments.ts, 9, 11))

f = null; // ok
>f : Symbol(f, Decl(validNullAssignments.ts, 12, 3))

C = null; // error
>C : Symbol(C, Decl(validNullAssignments.ts, 9, 11))

interface I { foo: string }
>I : Symbol(I, Decl(validNullAssignments.ts, 14, 9))
>foo : Symbol(I.foo, Decl(validNullAssignments.ts, 16, 13))

var g: I;
>g : Symbol(g, Decl(validNullAssignments.ts, 17, 3))
>I : Symbol(I, Decl(validNullAssignments.ts, 14, 9))

g = null; // ok
>g : Symbol(g, Decl(validNullAssignments.ts, 17, 3))

I = null; // error

namespace M { export var x = 1; }
>M : Symbol(M, Decl(validNullAssignments.ts, 19, 9))
>x : Symbol(x, Decl(validNullAssignments.ts, 21, 24))

M = null; // error
>M : Symbol(M, Decl(validNullAssignments.ts, 19, 9))

var h: { f(): void } = null;
>h : Symbol(h, Decl(validNullAssignments.ts, 24, 3))
>f : Symbol(f, Decl(validNullAssignments.ts, 24, 8))

function i<T>(a: T) {
>i : Symbol(i, Decl(validNullAssignments.ts, 24, 28))
>T : Symbol(T, Decl(validNullAssignments.ts, 26, 11))
>a : Symbol(a, Decl(validNullAssignments.ts, 26, 14))
>T : Symbol(T, Decl(validNullAssignments.ts, 26, 11))

    a = null;
>a : Symbol(a, Decl(validNullAssignments.ts, 26, 14))
}
i = null; // error
>i : Symbol(i, Decl(validNullAssignments.ts, 24, 28))

