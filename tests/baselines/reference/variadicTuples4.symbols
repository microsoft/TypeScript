//// [tests/cases/conformance/types/tuple/variadicTuples4.ts] ////

=== variadicTuples4.ts ===
// https://github.com/microsoft/TypeScript/issues/62561

function f<T extends unknown[], V extends unknown[]>(
>f : Symbol(f, Decl(variadicTuples4.ts, 0, 0))
>T : Symbol(T, Decl(variadicTuples4.ts, 2, 11))
>V : Symbol(V, Decl(variadicTuples4.ts, 2, 31))

  x: [boolean, ...V, ...T],
>x : Symbol(x, Decl(variadicTuples4.ts, 2, 53))
>V : Symbol(V, Decl(variadicTuples4.ts, 2, 31))
>T : Symbol(T, Decl(variadicTuples4.ts, 2, 11))

  ...args: V
>args : Symbol(args, Decl(variadicTuples4.ts, 3, 27))
>V : Symbol(V, Decl(variadicTuples4.ts, 2, 31))

) {
  return x;
>x : Symbol(x, Decl(variadicTuples4.ts, 2, 53))
}

const a = f([true, 2, "b", true], 1, "a"); // ok
>a : Symbol(a, Decl(variadicTuples4.ts, 9, 5))
>f : Symbol(f, Decl(variadicTuples4.ts, 0, 0))

function f2<T extends unknown[], V extends unknown[]>(
>f2 : Symbol(f2, Decl(variadicTuples4.ts, 9, 42))
>T : Symbol(T, Decl(variadicTuples4.ts, 11, 12))
>V : Symbol(V, Decl(variadicTuples4.ts, 11, 32))

  x: [boolean, ...V, ...T, string],
>x : Symbol(x, Decl(variadicTuples4.ts, 11, 54))
>V : Symbol(V, Decl(variadicTuples4.ts, 11, 32))
>T : Symbol(T, Decl(variadicTuples4.ts, 11, 12))

  ...args: V
>args : Symbol(args, Decl(variadicTuples4.ts, 12, 35))
>V : Symbol(V, Decl(variadicTuples4.ts, 11, 32))

) {
  return x;
>x : Symbol(x, Decl(variadicTuples4.ts, 11, 54))
}

const a2 = f2([true, 2, "b", true, "c"], 1, "a"); // ok
>a2 : Symbol(a2, Decl(variadicTuples4.ts, 18, 5))
>f2 : Symbol(f2, Decl(variadicTuples4.ts, 9, 42))

function f3<T extends unknown[], V extends unknown[]>(
>f3 : Symbol(f3, Decl(variadicTuples4.ts, 18, 49))
>T : Symbol(T, Decl(variadicTuples4.ts, 20, 12))
>V : Symbol(V, Decl(variadicTuples4.ts, 20, 32))

  x: [boolean, ...V, ...T, string, number],
>x : Symbol(x, Decl(variadicTuples4.ts, 20, 54))
>V : Symbol(V, Decl(variadicTuples4.ts, 20, 32))
>T : Symbol(T, Decl(variadicTuples4.ts, 20, 12))

  ...args: V
>args : Symbol(args, Decl(variadicTuples4.ts, 21, 43))
>V : Symbol(V, Decl(variadicTuples4.ts, 20, 32))

) {
  return x;
>x : Symbol(x, Decl(variadicTuples4.ts, 20, 54))
}

const a3 = f3([true, 2, "b", true, "c", 3], 1, "a"); // ok
>a3 : Symbol(a3, Decl(variadicTuples4.ts, 27, 5))
>f3 : Symbol(f3, Decl(variadicTuples4.ts, 18, 49))

function f4<T extends unknown[], V extends unknown[]>(
>f4 : Symbol(f4, Decl(variadicTuples4.ts, 27, 52))
>T : Symbol(T, Decl(variadicTuples4.ts, 29, 12))
>V : Symbol(V, Decl(variadicTuples4.ts, 29, 32))

  x: [boolean, boolean, boolean, ...V, ...T, string, number],
>x : Symbol(x, Decl(variadicTuples4.ts, 29, 54))
>V : Symbol(V, Decl(variadicTuples4.ts, 29, 32))
>T : Symbol(T, Decl(variadicTuples4.ts, 29, 12))

  ...args: V
>args : Symbol(args, Decl(variadicTuples4.ts, 30, 61))
>V : Symbol(V, Decl(variadicTuples4.ts, 29, 32))

) {
  return x;
>x : Symbol(x, Decl(variadicTuples4.ts, 29, 54))
}

const a4 = f4([true, true, true, 2, "b", true, "c", 3], 1, "a"); // ok
>a4 : Symbol(a4, Decl(variadicTuples4.ts, 36, 5))
>f4 : Symbol(f4, Decl(variadicTuples4.ts, 27, 52))

function f5<T extends unknown[], V extends unknown[]>(
>f5 : Symbol(f5, Decl(variadicTuples4.ts, 36, 64))
>T : Symbol(T, Decl(variadicTuples4.ts, 38, 12))
>V : Symbol(V, Decl(variadicTuples4.ts, 38, 32))

  x: [boolean, boolean, boolean, ...V, ...T],
>x : Symbol(x, Decl(variadicTuples4.ts, 38, 54))
>V : Symbol(V, Decl(variadicTuples4.ts, 38, 32))
>T : Symbol(T, Decl(variadicTuples4.ts, 38, 12))

  ...args: V
>args : Symbol(args, Decl(variadicTuples4.ts, 39, 45))
>V : Symbol(V, Decl(variadicTuples4.ts, 38, 32))

) {
  return x;
>x : Symbol(x, Decl(variadicTuples4.ts, 38, 54))
}

const a5 = f5([true, true, true, 2, "b", true], 1, "a"); // ok
>a5 : Symbol(a5, Decl(variadicTuples4.ts, 45, 5))
>f5 : Symbol(f5, Decl(variadicTuples4.ts, 36, 64))

