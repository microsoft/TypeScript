//// [tests/cases/compiler/variancePropagation.ts] ////

=== variancePropagation.ts ===
// https://github.com/microsoft/TypeScript/issues/62606

interface DerivedTable<S extends { base: any; new: any }> {
>DerivedTable : Symbol(DerivedTable, Decl(variancePropagation.ts, 0, 0))
>S : Symbol(S, Decl(variancePropagation.ts, 2, 23))
>base : Symbol(base, Decl(variancePropagation.ts, 2, 34))
>new : Symbol(new, Decl(variancePropagation.ts, 2, 45))

    // Error disappears when these property declarations are reversed
    schema: S["base"] & S["new"]
>schema : Symbol(DerivedTable.schema, Decl(variancePropagation.ts, 2, 59))
>S : Symbol(S, Decl(variancePropagation.ts, 2, 23))
>S : Symbol(S, Decl(variancePropagation.ts, 2, 23))

    readonlySchema: Readonly<S["base"] & S["new"]>
>readonlySchema : Symbol(DerivedTable.readonlySchema, Decl(variancePropagation.ts, 4, 32))
>Readonly : Symbol(Readonly, Decl(lib.es5.d.ts, --, --))
>S : Symbol(S, Decl(variancePropagation.ts, 2, 23))
>S : Symbol(S, Decl(variancePropagation.ts, 2, 23))
}

interface Base { baseProp: number; }
>Base : Symbol(Base, Decl(variancePropagation.ts, 6, 1))
>baseProp : Symbol(Base.baseProp, Decl(variancePropagation.ts, 8, 16))

interface New  { newProp: boolean; }
>New : Symbol(New, Decl(variancePropagation.ts, 8, 36))
>newProp : Symbol(New.newProp, Decl(variancePropagation.ts, 9, 16))

declare const source: DerivedTable<{ base: Base, new: New }>
>source : Symbol(source, Decl(variancePropagation.ts, 11, 13))
>DerivedTable : Symbol(DerivedTable, Decl(variancePropagation.ts, 0, 0))
>base : Symbol(base, Decl(variancePropagation.ts, 11, 36))
>Base : Symbol(Base, Decl(variancePropagation.ts, 6, 1))
>new : Symbol(new, Decl(variancePropagation.ts, 11, 48))
>New : Symbol(New, Decl(variancePropagation.ts, 8, 36))

const destination: DerivedTable<{ base: Base; new: New & Base }> = source; // Error
>destination : Symbol(destination, Decl(variancePropagation.ts, 12, 5))
>DerivedTable : Symbol(DerivedTable, Decl(variancePropagation.ts, 0, 0))
>base : Symbol(base, Decl(variancePropagation.ts, 12, 33))
>Base : Symbol(Base, Decl(variancePropagation.ts, 6, 1))
>new : Symbol(new, Decl(variancePropagation.ts, 12, 45))
>New : Symbol(New, Decl(variancePropagation.ts, 8, 36))
>Base : Symbol(Base, Decl(variancePropagation.ts, 6, 1))
>source : Symbol(source, Decl(variancePropagation.ts, 11, 13))

