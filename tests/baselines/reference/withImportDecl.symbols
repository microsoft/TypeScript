//// [tests/cases/compiler/withImportDecl.ts] ////

=== withImportDecl_1.ts ===
///<reference path='withImportDecl_0.ts'/>
var simpleVar;
>simpleVar : Symbol(simpleVar, Decl(withImportDecl_1.ts, 1, 3))

var anotherVar: any;
>anotherVar : Symbol(anotherVar, Decl(withImportDecl_1.ts, 3, 3))

var varWithSimpleType: number;
>varWithSimpleType : Symbol(varWithSimpleType, Decl(withImportDecl_1.ts, 4, 3))

var varWithArrayType: number[];
>varWithArrayType : Symbol(varWithArrayType, Decl(withImportDecl_1.ts, 5, 3))

var varWithInitialValue = 30;
>varWithInitialValue : Symbol(varWithInitialValue, Decl(withImportDecl_1.ts, 7, 3))

var withComplicatedValue = { x: 30, y: 70, desc: "position" };
>withComplicatedValue : Symbol(withComplicatedValue, Decl(withImportDecl_1.ts, 9, 3))
>x : Symbol(x, Decl(withImportDecl_1.ts, 9, 28))
>y : Symbol(y, Decl(withImportDecl_1.ts, 9, 35))
>desc : Symbol(desc, Decl(withImportDecl_1.ts, 9, 42))

declare var declaredVar;
>declaredVar : Symbol(declaredVar, Decl(withImportDecl_1.ts, 11, 11), Decl(withImportDecl_1.ts, 14, 11))

declare var declareVar2
>declareVar2 : Symbol(declareVar2, Decl(withImportDecl_1.ts, 12, 11))

declare var declaredVar;
>declaredVar : Symbol(declaredVar, Decl(withImportDecl_1.ts, 11, 11), Decl(withImportDecl_1.ts, 14, 11))

declare var deckareVarWithType: number;
>deckareVarWithType : Symbol(deckareVarWithType, Decl(withImportDecl_1.ts, 15, 11))

var arrayVar: string[] = ['a', 'b'];
>arrayVar : Symbol(arrayVar, Decl(withImportDecl_1.ts, 17, 3))


function simpleFunction() {
>simpleFunction : Symbol(simpleFunction, Decl(withImportDecl_1.ts, 17, 36))

    return {
        x: "Hello",
>x : Symbol(x, Decl(withImportDecl_1.ts, 21, 12))

        y: "word",
>y : Symbol(y, Decl(withImportDecl_1.ts, 22, 19))

        n: 2
>n : Symbol(n, Decl(withImportDecl_1.ts, 23, 18))

    };
}

namespace m1 {
>m1 : Symbol(m1, Decl(withImportDecl_1.ts, 26, 1))

    export function foo() {
>foo : Symbol(foo, Decl(withImportDecl_1.ts, 28, 14))

        return "Hello";
    }
}

import m3 = require("withImportDecl_0");
>m3 : Symbol(m3, Decl(withImportDecl_1.ts, 32, 1))

var b = new m3.A();
>b : Symbol(b, Decl(withImportDecl_1.ts, 36, 3))
>m3.A : Symbol(m3.A, Decl(withImportDecl_0.ts, 0, 0))
>m3 : Symbol(m3, Decl(withImportDecl_1.ts, 32, 1))
>A : Symbol(m3.A, Decl(withImportDecl_0.ts, 0, 0))

b.foo;
>b.foo : Symbol(m3.A.foo, Decl(withImportDecl_0.ts, 0, 16))
>b : Symbol(b, Decl(withImportDecl_1.ts, 36, 3))
>foo : Symbol(m3.A.foo, Decl(withImportDecl_0.ts, 0, 16))

=== withImportDecl_0.ts ===
export class A { foo: string; }
>A : Symbol(A, Decl(withImportDecl_0.ts, 0, 0))
>foo : Symbol(A.foo, Decl(withImportDecl_0.ts, 0, 16))

