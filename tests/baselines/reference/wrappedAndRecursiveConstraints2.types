//// [tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints2.ts] ////

=== wrappedAndRecursiveConstraints2.ts ===
class C<T extends C<T>> { // error
>C : C<T>
>  : ^^^^

    constructor(x: T) { }
>x : T
>  : ^
}

var c = new C(1);
>c : C<number>
>  : ^^^^^^^^^
>new C(1) : C<number>
>         : ^^^^^^^^^
>C : typeof C
>  : ^^^^^^^^
>1 : 1
>  : ^

var c = new C(new C('')); // error
>c : C<number>
>  : ^^^^^^^^^
>new C(new C('')) : C<C<string>>
>                 : ^^^^^^^^^^^^
>C : typeof C
>  : ^^^^^^^^
>new C('') : C<string>
>          : ^^^^^^^^^
>C : typeof C
>  : ^^^^^^^^
>'' : ""
>   : ^^

